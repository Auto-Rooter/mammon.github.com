<html>
<head>

<title>NetWorker</title>
</head>
<body BGCOLOR="#C0C0C0" TEXT="#001010" VLINK="#405040">
<h2><center>
Networker, The mistery of the missing file<br>(how to crack logically, without too much listing)<br>
<br>by Hackmore Readrite, 28 May 1997<br></h2>

<hr>
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><font SIZE="3">
<i>Courtesy of fravia's page of reverse engineering<br>~<br>
A very intersting essay (the target is absolute crap, though): how to crack 
a protection where some key files <b>are 
missing</b>, using more your logic than your debugger! (Note also the 
&quot;social engineering&quot; touch :-)</i>
<br><br><i>
Let's hear Hackmore himself about it:<br></i>
<pre>
 ...I did not go into &quot;coding&quot; details in this crack in an effort to get
people to try cracking themselves. I know many people who shiver in
their boots when they see assembly code. Especially when they see alot of
it, as sometimes happens in these tutorials. I think if people see how
easy it is, they might try it, and &quot;gradually&quot; figure things out!
</pre>
</center><pre>
<hr size="3">


                               NetWorker

                     Cracked by Hackmore Readrite

                  Available at http://www.mlmsoft.com

   This is, in my opinion, probably the best database for anyone who makes a
living by the &quot;Christmas Tree&quot; method. That's when you sell a product to
someone, then they re-sell it to two (or more) other people, who each re-sell
it to two (or more) people, etc. And as the number of products sold
increases, so do your profits, since a portion of each sale filters it's way
back up to the top of the &quot;tree&quot;, which is you.

   Naturaly, in a system like this, you want to keep track of all the people
who have purchased, and all the people who have sold, so you can count all
of the money you'll be raking in on your next pay-check.

   What a terible way to make a living! It has produced some very rich people
though, the ones who supply the product!

   I decided to crack this program because it was missing a file. What better
challenge than one without an answer. After all, if all of the pieces of the
puzzle are not there, the puzzle can not be assembled, right? Wrong!

   I will not bore you with assembly code in this lesson for several reasons.
The first, because this is a small company just trying to etch out a living
in the overbloated jungle of code Microsoft has created. The second reason,
as you will see, the crack is so simple anyone can do it! Yet, because of a 
missing file, MOST people would be too intimidated to even try. &quot;Scare them
to death and they'll leave us alone.&quot; Like +ORC said, &quot;DO NOT BELIEVE THEM!&quot;
And lastly, I do NOT like sitting on top of a mountain of slaves, feeding off
their hard work.

   Before we even begin to crack this, we'll unpack the zip file and have a
look at the pieces we DO have. When unzipped, we have three folders, (disk1,
disk2, and disk3) plus a &quot;readme.txt&quot;, which say's...

-----------------------------------------------------------------------------
Congratulations!  This release of Networker has been widely accepted by 
Network Marketers.

We have one reported problem that occurs on some windows machines:

&quot;Error in Critical System File&quot;

If this error is encountered be sure that you copy the ntworker.key
file found on disk 3, to your windows\system directory.

Enjoy your trial version of Networker.
-----------------------------------------------------------------------------

   Looking inside the folders, we find &quot;install.txt&quot; in the &quot;disk3&quot; folder.
Reading this, we find the following information...

-----------------------------------------------------------------------------
Diskette 1 required files:
setup.arv	
setup.exe
setupmn.arv - archive of primary files

Diskette 2 required files:
Setup.a02 - archived primary files.

Diskette 3 required files:
final	- initializes Networker for first time use.  Called by setup.exe
license.txt - license agreement
ntworker.dis - Distribution file enabling you to receive royalties
ntworker.key - Networker license file
Setup.a03 - remainder of archived primary files.
-----------------------------------------------------------------------------

   Not alot of info, but very important as we crack. We now understand that
the file &quot;ntworker.key&quot; must be placed in the C:\windows\system directory,
and &quot;final.exe&quot; is a file we can &quot;suspect&quot; in our evaluation, just a &quot;zen&quot;
feeling:... the description (above) for &quot;final.exe&quot; seems a little &quot;bloated&quot;
to me, like they're making excuses for its existance. Why?

   Take a look at &quot;ntworker.key&quot;... It's a file comprised of 55 lines of
numbers, each number is 3 digits long, and each line has 46 numbers in it.
Thats 2500 numbers! The very last line begins with an &quot;S&quot;, which is the ONLY
alpha character in the entire file. Hmm...

   Time to install. Double click on &quot;setup.exe&quot; in the &quot;disk1&quot; folder, and
watch the install go it's merry way, but there's no indication that the
&quot;final.exe&quot; program ever ran. Start the program, and we get slapped in the
face with the error message described above. Copy &quot;ntworker.key&quot; to the
C:\windows\system directory, and re-start the program. This time, we get
slapped in the face with a &quot;nag&quot; screen that KNOWS we are an &quot;unregistered&quot;
user befor the program even gets on screen.

   After a slight delay for the &quot;nag&quot; screen, the program comes up, with its
&quot;user info&quot; screen ready to fill in, but our &quot;name&quot; is already &quot;unregistered
copy&quot; and we are not allowed to change it. A new &quot;readme&quot; file tells us we
are limited to only 10 entries, although the licence clearly states we are
limited to 20 entries, and if you read the licence further, it says we can
have 30 entries! So there's some type of limitation on the number of entries,
we just have to guess how many. Shut the program down, another slap with the
&quot;nag&quot; screen. This time they even make us press a button! They'll never
learn! And I'll try the easy stuff first.

   A quick look at the &quot;about&quot; on the help menu, and I see the programs
serial number, the same number as the first four groups of numbers on the
last line of the &quot;ntworker.key&quot; file, begining with &quot;S&quot;. May be a clue?

   A double click on the &quot;final.exe&quot; file icon and I get an error message...

                      &quot;can't find file 'setup.syx'&quot;

   And my usual &quot;social engineering&quot; with the people who want my money,
teaches me that they WILL lower the price if I'm a &quot;hard sell&quot;, and when I
do send them money, they will send me another program, (the missing file)
that will register my copy. Time to go to work.

   Just out of curiosity, I deleted the program from my hard drive, then
re-unzipped it. But before I re-installed it, I deleted the &quot;final.exe&quot; file
from the &quot;disk3&quot; folder. As expected, install went fine, even without the
(now TWO) missing files. I guess they LIED in the file list above!

   We know the program knows we're unregistered befor we ever get to see the
user screen, and there's no way to input our personal information, and there
is something important about &quot;ntworker.key&quot; so we'll assume the information
we're looking for is near the start of the program. We'll also assume the
&quot;nag&quot; screen is triggered by something in the &quot;.key&quot; file

   Break out SoftIce, load up the program &quot;ntworker.exe&quot;, and when SoftIce
pops up at the program entry line, we see the first 21 lines of code are
CALLs to sub routines. What a great place to start. To narrow down the field
a bit, I went about half way down the list and entered a &quot;here&quot; command,
while watching the screen for a &quot;nag&quot;, but nothing showed up. Then I went to
the line just past the last call, entered &quot;here&quot;, and still no &quot;nag&quot; screen.

   A few lines of code, and another CALL, a few more lines of code, and yet
another CALL, a few more lines of code, and another CALL - this CALL painted
a grey box on the &quot;user screen&quot;, and finaly, a few more lines of code, and
the CALL I was looking for, the &quot;nag&quot; screen was painted.

   Now I'm at CS:000000C9, with 25 calls behind me, and ONE of those CALLs
must have accessed the &quot;.key&quot; file. Which one? It would likely be near the
CALLs that draw the &quot;nag&quot; screen.

   I shut down the program, took a quick look at the &quot;.key&quot; file to write
down the serial number, then re-loaded the program. I went past the first 21
CALLs, and entered a &quot;here&quot; command. Then I searched memory for the serial
number. No luck. Go past the next sub-routine CALL, enter &quot;here&quot;, search
memory, no luck. But on my THIRD try, at CS:000000A9, I found the entire
&quot;.key&quot; file loaded into memory.

   Re-start the program, this time I went to the offending CALL to place my
&quot;here&quot; command on CS:000000A9, then I traced (&quot;t&quot;) into the call. Once
inside, I placed a breakpoint on HMemCpy (bpx hmemcpy) and then &quot;ctrl-d&quot; to
let the program run. A couple of breaks later, and the first line of the
&quot;.key&quot; file was moved into ES:DI, with a 3 digit number (910) appended at the
beginning of the number sequence. I followed this number string through,
using the &quot;t&quot; command, but the whole string was just ignored, and I found
myself back at HMemCpy.

   I thought this was just loading the &quot;.key&quot; file into memory, so I pressed
&quot;ctrl-d&quot; each time the program broke back into SoftIce, expecting to follow
things through after the whole file had been copied. Then, on the 8th time
around, I noticed the line being copied from the &quot;.key&quot; file had &quot;910&quot; as
it's third group of numbers. I decided to follow this string, and it branched
off of the normal path, as I had hoped.

   The program runs us through a few CMPs to see if it has located a &quot;$&quot;,
or a &quot;+&quot; or a &quot;-&quot; sign. Then our number is converted to a hexadecimal number,
and finaly, the hexadecimal number is run through a whole bunch of CMPs. Here
lies our &quot;crack&quot;, because IF the hexadecimal number matches one of the CMPs,
a &quot;different&quot; hexadecimal number is stored in memory. And all of these
&quot;different&quot; numbers just happen to coincide with the hexadecimal eqivalents
to the characters of the alphabet!

   Nothig realy important happens with the 910 number, so we continue on,
until the 18th number string from the &quot;.key&quot; file. This time the number &quot;735&quot;
is appended to the begining of the number string. The string also contains a
&quot;735&quot;, so I follow it. I find the number &quot;735&quot; gets converted to a hex &quot;02DF&quot;
which CMPs to &quot;U&quot;. The next time around, the number appended to the SAME
number string is &quot;479&quot;, which gets converted to hex &quot;01DF&quot;, then CMPs to &quot;N&quot;,
etc. That whole nasty word &quot;UNREGISTERED&quot; is on this SAME number string line!
This continues until the entire &quot;.key&quot; file has been read.

   The crack, you ask? Isn't it obvious? Just go to the long string of CMPs,
copy down the hexadecimal number on the CMP line of code, along with the
letter of the alphabet that corresponds to the hexadecimal number that will
be placed in memory if the CMP proves true. Then convert the hexadecimal
number to its digital form, this will give you the &quot;alphabet&quot; used in the
&quot;ntworker.key&quot; file. Now just go to the line that holds the numbers that
spell &quot;UNREGISTERED&quot; and replace these numbers with the numbers that match
the letters of your first name. THEN find the line that has the numbers
pertaining to &quot;COPY&quot;, and do the same thing, like this...

-----------------------------------------------------------------------------
&quot;.key&quot; file  &quot;640,...735,479,235,190,429,684,499,440,190,235,190,838,455,...&quot;

converted to hex     2DF 1DF 0EB 0BE 1AD 2AC 1F3 1B8 0BE 0EB 0BE 346

puts into memory     55  4E  52  45  47  49  53  54  45  52  45  44    

which spells          U   N   R   E   G   I   S   T   E   R   E   D

I want my name        H   A   C   K   M   O   R   E

put into memory      48  41  43  4B  4D  4F  52  45

so I need to CMP to  0DC 18F 32E 142 1E4 17B 0EB 0BE

which in decimal is  220 399 814 322 484 379 235 190

&quot;.key&quot; file  &quot;640,...220,499,814,322,484,379,235,190,455,235,190,838,455,...&quot;
-----------------------------------------------------------------------------

   The string you want to print (your name) MUST end with a number which does
NOT match any of the CMPs. Thats the signal to the computer to stop reading
the current number string. I've used &quot;455&quot; in this example. Also, each number
string MUST contain 46 numbers, if not, you'll get an error message.

   Yes, I could give you the whole crack and tell you which lines need to be
changed to complete your task, and I could give you the entire alphabet, but
that would take all the fun out of learning how to do it yourself. Simply
changing the &quot;UN&quot; above will crack this program, if you're lazy.

   Now, fully registered, we can assume the missing file &quot;setup.syx&quot; only
contains the alphabet conversion tables, maybe with some offset information
for the &quot;ntworker.key&quot; file. And when you pay for your copy, they send you
&quot;setup.syx&quot;, then you run &quot;final.exe&quot; to paste the &quot;user info&quot; into the
&quot;ntworker.key&quot; file.
                  
   So if you want, you could write your own &quot;setup.syx&quot;, or just convert the
&quot;ntworker.key&quot; file by hand. Either way you'll know that just because they
used the &quot;missing file&quot; scare tactic on you doesn't mean the program cannot
be cracked!

                                                       Happy Crackin'
                                                       Hackmore Readrite
                                                       DataMiners Inc.</pre>

<center><hr ALIGN="CENTER" WIDTH="100%" SIZE="3"><font SIZE="3">
<center><i>You are deep inside fravia's page of reverse engineering,  
choose your way out:</i></center>
<br>
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><a HREF="tppmsgs/msgs2.htm#255" tppabs="http://ftp.fravia.org/tppmsgs/msgs0.htm#84"> homepage</a><img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"> 
<a HREF="tppmsgs/msgs2.htm#255" tppabs="http://ftp.fravia.org/tppmsgs/msgs0.htm#73"> links</a> 
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0">
<a HREF="noanon.htm" tppabs="http://ftp.fravia.org/noanon.htm"> anonymity</a> 
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><a HREF="orc.htm" tppabs="http://ftp.fravia.org/orc.htm"> +ORC</a>
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><a HREF="tppmsgs/msgs2.htm#255" tppabs="http://ftp.fravia.org/tppmsgs/msgs0.htm#82"> student</a>
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">
<a HREF="tools.htm" tppabs="http://ftp.fravia.org/tools.htm"> tools</a><img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">
<a HREF="cocktail.htm" tppabs="http://ftp.fravia.org/cocktail.htm"> cocktails</a><img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">
<a HREF="searengi.htm" tppabs="http://ftp.fravia.org/searengi.htm"> search_forms</a><img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">
<a HREF="info.htm" tppabs="http://ftp.fravia.org/info.htm"> mailFraVia</a><br>

<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">
<a HREF="legal.htm" tppabs="http://ftp.fravia.org/legal.htm"> Is reverse engineering illegal?</a>
</center>
<center><hr ALIGN="CENTER" WIDTH="100%" SIZE="2"></center>
<i>
<img SRC="bulletr.gif" tppabs="http://ftp.fravia.org/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">Fravia 28 May 1997
</i>

</body>
</html>
